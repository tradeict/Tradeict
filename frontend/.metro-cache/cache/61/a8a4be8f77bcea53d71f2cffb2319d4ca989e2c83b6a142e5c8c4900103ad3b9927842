{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/AppState","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"JfCM6WRyn2619+pzBJhEHd1+SSw=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Linking","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"3Rjz9Of4YombbpmYBhNmyoa9U9Y=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/processColor","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"8DdbuUtV90Z/t9ffltCQA3iNnjQ=","exportNames":["*"],"imports":1}},{"name":"./ExpoWebBrowser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":132},"end":{"line":3,"column":50,"index":182}}],"key":"OZkL6dn5GThy2fR1W+98Qlxlxh4=","exportNames":["*"],"imports":1}},{"name":"./WebBrowser.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":183},"end":{"line":4,"column":88,"index":271}}],"key":"29Oh91VcmrXUhNZnDncgfxSU3bQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"WebBrowserResultType\", {\n    enumerable: true,\n    get: function () {\n      return _WebBrowserTypes.WebBrowserResultType;\n    }\n  });\n  Object.defineProperty(exports, \"WebBrowserPresentationStyle\", {\n    enumerable: true,\n    get: function () {\n      return _WebBrowserTypes.WebBrowserPresentationStyle;\n    }\n  });\n  exports.getCustomTabsSupportingBrowsersAsync = getCustomTabsSupportingBrowsersAsync;\n  exports.warmUpAsync = warmUpAsync;\n  exports.mayInitWithUrlAsync = mayInitWithUrlAsync;\n  exports.coolDownAsync = coolDownAsync;\n  exports.openBrowserAsync = openBrowserAsync;\n  exports.dismissBrowser = dismissBrowser;\n  exports.openAuthSessionAsync = openAuthSessionAsync;\n  exports.dismissAuthSession = dismissAuthSession;\n  exports.maybeCompleteAuthSession = maybeCompleteAuthSession;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _reactNativeWebDistExportsAppState = require(_dependencyMap[1], \"react-native-web/dist/exports/AppState\");\n  var AppState = _interopDefault(_reactNativeWebDistExportsAppState);\n  var _reactNativeWebDistExportsLinking = require(_dependencyMap[2], \"react-native-web/dist/exports/Linking\");\n  var Linking = _interopDefault(_reactNativeWebDistExportsLinking);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[3], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _reactNativeWebDistExportsProcessColor = require(_dependencyMap[4], \"react-native-web/dist/exports/processColor\");\n  var processColor = _interopDefault(_reactNativeWebDistExportsProcessColor);\n  var _ExpoWebBrowser = require(_dependencyMap[5], \"./ExpoWebBrowser\");\n  var ExponentWebBrowser = _interopDefault(_ExpoWebBrowser);\n  var _WebBrowserTypes = require(_dependencyMap[6], \"./WebBrowser.types\");\n  const emptyCustomTabsPackages = {\n    defaultBrowserPackage: undefined,\n    preferredBrowserPackage: undefined,\n    browserPackages: [],\n    servicePackages: []\n  };\n  // @needsAudit\n  /**\n   * Returns a list of applications package names supporting Custom Tabs, Custom Tabs\n   * service, user chosen and preferred one. This may not be fully reliable, since it uses\n   * `PackageManager.getResolvingActivities` under the hood. (For example, some browsers might not be\n   * present in browserPackages list once another browser is set to default.)\n   *\n   * @return The promise which fulfils with [`WebBrowserCustomTabsResults`](#webbrowsercustomtabsresults) object.\n   * @platform android\n   */\n  async function getCustomTabsSupportingBrowsersAsync() {\n    if (!ExponentWebBrowser.default.getCustomTabsSupportingBrowsersAsync) {\n      throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'getCustomTabsSupportingBrowsersAsync');\n    }\n    if (Platform.default.OS !== 'android') {\n      return emptyCustomTabsPackages;\n    } else {\n      return await ExponentWebBrowser.default.getCustomTabsSupportingBrowsersAsync();\n    }\n  }\n  // @needsAudit\n  /**\n   * This method calls `warmUp` method on [CustomTabsClient](https://developer.android.com/reference/android/support/customtabs/CustomTabsClient.html#warmup(long))\n   * for specified package.\n   *\n   * @param browserPackage Package of browser to be warmed up. If not set, preferred browser will be warmed.\n   *\n   * @return A promise which fulfils with `WebBrowserWarmUpResult` object.\n   * @platform android\n   */\n  async function warmUpAsync(browserPackage) {\n    if (!ExponentWebBrowser.default.warmUpAsync) {\n      throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'warmUpAsync');\n    }\n    if (Platform.default.OS !== 'android') {\n      return {};\n    } else {\n      return await ExponentWebBrowser.default.warmUpAsync(browserPackage);\n    }\n  }\n  // @needsAudit\n  /**\n   * This method initiates (if needed) [CustomTabsSession](https://developer.android.com/reference/android/support/customtabs/CustomTabsSession.html#maylaunchurl)\n   * and calls its `mayLaunchUrl` method for browser specified by the package.\n   *\n   * @param url The url of page that is likely to be loaded first when opening browser.\n   * @param browserPackage Package of browser to be informed. If not set, preferred\n   * browser will be used.\n   *\n   * @return A promise which fulfils with `WebBrowserMayInitWithUrlResult` object.\n   * @platform android\n   */\n  async function mayInitWithUrlAsync(url, browserPackage) {\n    if (!ExponentWebBrowser.default.mayInitWithUrlAsync) {\n      throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'mayInitWithUrlAsync');\n    }\n    if (Platform.default.OS !== 'android') {\n      return {};\n    } else {\n      return await ExponentWebBrowser.default.mayInitWithUrlAsync(url, browserPackage);\n    }\n  }\n  // @needsAudit\n  /**\n   * This methods removes all bindings to services created by [`warmUpAsync`](#webbrowserwarmupasyncbrowserpackage)\n   * or [`mayInitWithUrlAsync`](#webbrowsermayinitwithurlasyncurl-browserpackage). You should call\n   * this method once you don't need them to avoid potential memory leaks. However, those binding\n   * would be cleared once your application is destroyed, which might be sufficient in most cases.\n   *\n   * @param browserPackage Package of browser to be cooled. If not set, preferred browser will be used.\n   *\n   * @return The promise which fulfils with ` WebBrowserCoolDownResult` when cooling is performed, or\n   * an empty object when there was no connection to be dismissed.\n   * @platform android\n   */\n  async function coolDownAsync(browserPackage) {\n    if (!ExponentWebBrowser.default.coolDownAsync) {\n      throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'coolDownAsync');\n    }\n    if (Platform.default.OS !== 'android') {\n      return {};\n    } else {\n      return await ExponentWebBrowser.default.coolDownAsync(browserPackage);\n    }\n  }\n  // @needsAudit\n  /**\n   * Opens the url with Safari in a modal on iOS using [`SFSafariViewController`](https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller),\n   * and Chrome in a new [custom tab](https://developer.chrome.com/multidevice/android/customtabs)\n   * on Android. On iOS, the modal Safari will not share cookies with the system Safari. If you need\n   * this, use [`openAuthSessionAsync`](#webbrowseropenauthsessionasyncurl-redirecturl-options).\n   *\n   * @param url The url to open in the web browser.\n   * @param browserParams A dictionary of key-value pairs.\n   *\n   * @return The promise behaves differently based on the platform.\n   * On Android promise resolves with `{ type: 'opened' }` if we were able to open browser.\n   * On iOS:\n   * - If the user closed the web browser, the Promise resolves with `{ type: 'cancel' }`.\n   * - If the browser is closed using [`dismissBrowser`](#webbrowserdismissbrowser), the Promise resolves with `{ type: 'dismiss' }`.\n   */\n  async function openBrowserAsync(url, browserParams = {}) {\n    if (!ExponentWebBrowser.default.openBrowserAsync) {\n      throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'openBrowserAsync');\n    }\n    return await ExponentWebBrowser.default.openBrowserAsync(url, _processOptions(browserParams));\n  }\n  // @needsAudit\n  /**\n   * Dismisses the presented web browser.\n   *\n   * @return The promise that resolves with `{ type: 'dismiss' }` on the successful attempt or throws an error if dismiss functionality is not available.\n   * @platform ios\n   */\n  function dismissBrowser() {\n    return ExponentWebBrowser.default.dismissBrowser?.();\n  }\n  // @needsAudit\n  /**\n   * # On Android:\n   * This will be done using a \"custom Chrome tabs\" browser, [AppState](https://reactnative.dev/docs/appstate),\n   * and [Linking](./linking/) APIs.\n   *\n   * # On iOS:\n   * Opens the url with Safari in a modal using `ASWebAuthenticationSession`. The user will be asked\n   * whether to allow the app to authenticate using the given url.\n   * To handle redirection back to the mobile application, the redirect URI set in the authentication server\n   * has to use the protocol provided as the scheme in **app.json** [`expo.scheme`](./../config/app/#scheme).\n   * For example, `demo://` not `https://` protocol.\n   * Using `Linking.addEventListener` is not needed and can have side effects.\n   *\n   * # On web:\n   * > This API can only be used in a secure environment (localhost/https).\n   * to test this. Otherwise, an error with code [`ERR_WEB_BROWSER_CRYPTO`](#err_web_browser_crypto) will be thrown.\n   * This will use the browser's [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open) API.\n   * - _Desktop_: This will create a new web popup window in the browser that can be closed later using `WebBrowser.maybeCompleteAuthSession()`.\n   * - _Mobile_: This will open a new tab in the browser which can be closed using `WebBrowser.maybeCompleteAuthSession()`.\n   *\n   * How this works on web:\n   * - A crypto state will be created for verifying the redirect.\n   *   - This means you need to run with `npx expo start --https`\n   * - The state will be added to the window's `localstorage`. This ensures that auth cannot complete\n   *   unless it's done from a page running with the same origin as it was started.\n   *   Ex: if `openAuthSessionAsync` is invoked on `https://localhost:19006`, then `maybeCompleteAuthSession`\n   *   must be invoked on a page hosted from the origin `https://localhost:19006`. Using a different\n   *   website, or even a different host like `https://128.0.0.*:19006` for example will not work.\n   * - A timer will be started to check for every 1000 milliseconds (1 second) to detect if the window\n   *   has been closed by the user. If this happens then a promise will resolve with `{ type: 'dismiss' }`.\n   *\n   * > On mobile web, Chrome and Safari will block any call to [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open)\n   * which takes too long to fire after a user interaction. This method must be invoked immediately\n   * after a user interaction. If the event is blocked, an error with code [`ERR_WEB_BROWSER_BLOCKED`](#err_web_browser_blocked) will be thrown.\n   *\n   * @param url The url to open in the web browser. This should be a login page.\n   * @param redirectUrl _Optional_ - The url to deep link back into your app.\n   * On web, this defaults to the output of [`Linking.createURL(\"\")`](./linking/#linkingcreateurlpath-namedparameters).\n   * @param options _Optional_ - An object extending the [`WebBrowserOpenOptions`](#webbrowseropenoptions).\n   * If there is no native AuthSession implementation available (which is the case on Android)\n   * these params will be used in the browser polyfill. If there is a native AuthSession implementation,\n   * these params will be ignored.\n   *\n   * @return\n   * - If the user does not permit the application to authenticate with the given url, the Promise fulfills with `{ type: 'cancel' }` object.\n   * - If the user closed the web browser, the Promise fulfills with `{ type: 'cancel' }` object.\n   * - If the browser is closed using [`dismissBrowser`](#webbrowserdismissbrowser),\n   * the Promise fulfills with `{ type: 'dismiss' }` object.\n   */\n  async function openAuthSessionAsync(url, redirectUrl, options = {}) {\n    if (_authSessionIsNativelySupported()) {\n      if (!ExponentWebBrowser.default.openAuthSessionAsync) {\n        throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'openAuthSessionAsync');\n      }\n      if (['ios', 'macos', 'web'].includes(Platform.default.OS)) {\n        return ExponentWebBrowser.default.openAuthSessionAsync(url, redirectUrl, _processOptions(options));\n      }\n      return ExponentWebBrowser.default.openAuthSessionAsync(url, redirectUrl);\n    } else {\n      return _openAuthSessionPolyfillAsync(url, redirectUrl, options);\n    }\n  }\n  /**\n   * Dismisses the current authentication session. On web, it will close the popup window associated with auth process.\n   *\n   * @return The `void` on the successful attempt or throws an error if dismiss functionality is not available.\n   *\n   * @platform ios\n   * @platform web\n   */\n  function dismissAuthSession() {\n    if (_authSessionIsNativelySupported()) {\n      if (!ExponentWebBrowser.default.dismissAuthSession) {\n        throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'dismissAuthSession');\n      }\n      ExponentWebBrowser.default.dismissAuthSession();\n    } else {\n      if (!ExponentWebBrowser.default.dismissBrowser) {\n        throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'dismissBrowser');\n      }\n      ExponentWebBrowser.default.dismissBrowser();\n    }\n  }\n  // @needsAudit\n  /**\n   * Possibly completes an authentication session on web in a window popup. The method\n   * should be invoked on the page that the window redirects to.\n   *\n   * @param options\n   *\n   * @return Returns an object with message about why the redirect failed or succeeded:\n   *\n   * If `type` is set to `failed`, the reason depends on the message:\n   * - `Not supported on this platform`: If the platform doesn't support this method (Android, iOS).\n   * - `Cannot use expo-web-browser in a non-browser environment`: If the code was executed in an SSR\n   *   or node environment.\n   * - `No auth session is currently in progress`: (the cached state wasn't found in local storage).\n   *   This can happen if the window redirects to an origin (website) that is different to the initial\n   *   website origin. If this happens in development, it may be because the auth started on localhost\n   *   and finished on your computer port (Ex: `128.0.0.*`). This is controlled by the `redirectUrl`\n   *   and `returnUrl`.\n   * - `Current URL \"<URL>\" and original redirect URL \"<URL>\" do not match`: This can occur when the\n   *   redirect URL doesn't match what was initial defined as the `returnUrl`. You can skip this test\n   *   in development by passing `{ skipRedirectCheck: true }` to the function.\n   *\n   * If `type` is set to `success`, the parent window will attempt to close the child window immediately.\n   *\n   * If the error `ERR_WEB_BROWSER_REDIRECT` was thrown, it may mean that the parent window was\n   * reloaded before the auth was completed. In this case you'll need to close the child window manually.\n   *\n   * @platform web\n   */\n  function maybeCompleteAuthSession(options = {}) {\n    if (ExponentWebBrowser.default.maybeCompleteAuthSession) {\n      return ExponentWebBrowser.default.maybeCompleteAuthSession(options);\n    }\n    return {\n      type: 'failed',\n      message: 'Not supported on this platform'\n    };\n  }\n  function _processOptions(options) {\n    return Object.assign({}, options, {\n      controlsColor: (0, processColor.default)(options.controlsColor),\n      toolbarColor: (0, processColor.default)(options.toolbarColor),\n      secondaryToolbarColor: (0, processColor.default)(options.secondaryToolbarColor)\n    });\n  }\n  /* Android polyfill for ASWebAuthenticationSession flow */\n  function _authSessionIsNativelySupported() {\n    return Platform.default.OS !== 'android';\n  }\n  let _redirectSubscription = null;\n  /*\n   * openBrowserAsync on Android doesn't wait until closed, so we need to polyfill\n   * it with AppState\n   */\n  // Store the `resolve` function from a Promise to fire when the AppState\n  // returns to active\n  let _onWebBrowserCloseAndroid = null;\n  // If the initial AppState.currentState is null, we assume that the first call to\n  // AppState#change event is not actually triggered by a real change,\n  // is triggered instead by the bridge capturing the current state\n  // (https://reactnative.dev/docs/appstate#basic-usage)\n  let _isAppStateAvailable = AppState.default.currentState !== null;\n  function _onAppStateChangeAndroid(state) {\n    if (!_isAppStateAvailable) {\n      _isAppStateAvailable = true;\n      return;\n    }\n    if (state === 'active' && _onWebBrowserCloseAndroid) {\n      _onWebBrowserCloseAndroid();\n    }\n  }\n  async function _openBrowserAndWaitAndroidAsync(startUrl, browserParams = {}) {\n    const appStateChangedToActive = new Promise(resolve => {\n      _onWebBrowserCloseAndroid = resolve;\n    });\n    const stateChangeSubscription = AppState.default.addEventListener('change', _onAppStateChangeAndroid);\n    let result = {\n      type: _WebBrowserTypes.WebBrowserResultType.CANCEL\n    };\n    let type = null;\n    try {\n      ({\n        type\n      } = await openBrowserAsync(startUrl, browserParams));\n    } catch (e) {\n      stateChangeSubscription.remove();\n      _onWebBrowserCloseAndroid = null;\n      throw e;\n    }\n    if (type === 'opened') {\n      await appStateChangedToActive;\n      result = {\n        type: _WebBrowserTypes.WebBrowserResultType.DISMISS\n      };\n    }\n    stateChangeSubscription.remove();\n    _onWebBrowserCloseAndroid = null;\n    return result;\n  }\n  async function _openAuthSessionPolyfillAsync(startUrl, returnUrl, browserParams = {}) {\n    if (_redirectSubscription) {\n      throw new Error(`The WebBrowser's auth session is in an invalid state with a redirect handler set when it should not be`);\n    }\n    if (_onWebBrowserCloseAndroid) {\n      throw new Error(`WebBrowser is already open, only one can be open at a time`);\n    }\n    try {\n      if (Platform.default.OS === 'android') {\n        return await Promise.race([_openBrowserAndWaitAndroidAsync(startUrl, browserParams), _waitForRedirectAsync(returnUrl)]);\n      } else {\n        return await Promise.race([openBrowserAsync(startUrl, browserParams), _waitForRedirectAsync(returnUrl)]);\n      }\n    } finally {\n      // We can't dismiss the browser on Android, only call this when it's available.\n      // Users on Android need to manually press the 'x' button in Chrome Custom Tabs, sadly.\n      if (ExponentWebBrowser.default.dismissBrowser) {\n        ExponentWebBrowser.default.dismissBrowser();\n      }\n      _stopWaitingForRedirect();\n    }\n  }\n  function _stopWaitingForRedirect() {\n    if (!_redirectSubscription) {\n      throw new Error(`The WebBrowser auth session is in an invalid state with no redirect handler when one should be set`);\n    }\n    _redirectSubscription.remove();\n    _redirectSubscription = null;\n  }\n  function _waitForRedirectAsync(returnUrl) {\n    // Note that this Promise never resolves when `returnUrl` is nullish\n    return new Promise(resolve => {\n      const redirectHandler = event => {\n        if (returnUrl && event.url.startsWith(returnUrl)) {\n          resolve({\n            url: event.url,\n            type: 'success'\n          });\n        }\n      };\n      _redirectSubscription = Linking.default.addEventListener('url', redirectHandler);\n    });\n  }\n});","lineCount":394,"map":[[12,2,5,0,"Object"],[12,8,5,0],[12,9,5,0,"defineProperty"],[12,23,5,0],[12,24,5,0,"exports"],[12,31,5,0],[13,4,5,0,"enumerable"],[13,14,5,0],[14,4,5,0,"get"],[14,7,5,0],[14,18,5,0,"get"],[14,19,5,0],[15,6,5,0],[15,13,5,9,"WebBrowserResultType"],[15,29,5,29],[15,30,5,29,"WebBrowserResultType"],[15,50,5,29],[16,4,5,29],[17,2,5,29],[18,2,5,0,"Object"],[18,8,5,0],[18,9,5,0,"defineProperty"],[18,23,5,0],[18,24,5,0,"exports"],[18,31,5,0],[19,4,5,0,"enumerable"],[19,14,5,0],[20,4,5,0,"get"],[20,7,5,0],[20,18,5,0,"get"],[20,19,5,0],[21,6,5,0],[21,13,5,31,"WebBrowserPresentationStyle"],[21,29,5,58],[21,30,5,58,"WebBrowserPresentationStyle"],[21,57,5,58],[22,4,5,58],[23,2,5,58],[24,2,22,0,"exports"],[24,9,22,0],[24,10,22,0,"getCustomTabsSupportingBrowsersAsync"],[24,46,22,0],[24,49,22,0,"getCustomTabsSupportingBrowsersAsync"],[24,85,22,0],[25,2,43,0,"exports"],[25,9,43,0],[25,10,43,0,"warmUpAsync"],[25,21,43,0],[25,24,43,0,"warmUpAsync"],[25,35,43,0],[26,2,66,0,"exports"],[26,9,66,0],[26,10,66,0,"mayInitWithUrlAsync"],[26,29,66,0],[26,32,66,0,"mayInitWithUrlAsync"],[26,51,66,0],[27,2,90,0,"exports"],[27,9,90,0],[27,10,90,0,"coolDownAsync"],[27,23,90,0],[27,26,90,0,"coolDownAsync"],[27,39,90,0],[28,2,117,0,"exports"],[28,9,117,0],[28,10,117,0,"openBrowserAsync"],[28,26,117,0],[28,29,117,0,"openBrowserAsync"],[28,45,117,0],[29,2,130,0,"exports"],[29,9,130,0],[29,10,130,0,"dismissBrowser"],[29,24,130,0],[29,27,130,0,"dismissBrowser"],[29,41,130,0],[30,2,183,0,"exports"],[30,9,183,0],[30,10,183,0,"openAuthSessionAsync"],[30,30,183,0],[30,33,183,0,"openAuthSessionAsync"],[30,53,183,0],[31,2,205,0,"exports"],[31,9,205,0],[31,10,205,0,"dismissAuthSession"],[31,28,205,0],[31,31,205,0,"dismissAuthSession"],[31,49,205,0],[32,2,248,0,"exports"],[32,9,248,0],[32,10,248,0,"maybeCompleteAuthSession"],[32,34,248,0],[32,37,248,0,"maybeCompleteAuthSession"],[32,61,248,0],[33,2,1,0],[33,6,1,0,"_expoModulesCore"],[33,22,1,0],[33,25,1,0,"require"],[33,32,1,0],[33,33,1,0,"_dependencyMap"],[33,47,1,0],[34,2,1,56],[34,6,1,56,"_reactNativeWebDistExportsAppState"],[34,40,1,56],[34,43,1,56,"require"],[34,50,1,56],[34,51,1,56,"_dependencyMap"],[34,65,1,56],[35,2,1,56],[35,6,1,56,"AppState"],[35,14,1,56],[35,17,1,56,"_interopDefault"],[35,32,1,56],[35,33,1,56,"_reactNativeWebDistExportsAppState"],[35,67,1,56],[36,2,1,56],[36,6,1,56,"_reactNativeWebDistExportsLinking"],[36,39,1,56],[36,42,1,56,"require"],[36,49,1,56],[36,50,1,56,"_dependencyMap"],[36,64,1,56],[37,2,1,56],[37,6,1,56,"Linking"],[37,13,1,56],[37,16,1,56,"_interopDefault"],[37,31,1,56],[37,32,1,56,"_reactNativeWebDistExportsLinking"],[37,65,1,56],[38,2,1,56],[38,6,1,56,"_reactNativeWebDistExportsPlatform"],[38,40,1,56],[38,43,1,56,"require"],[38,50,1,56],[38,51,1,56,"_dependencyMap"],[38,65,1,56],[39,2,1,56],[39,6,1,56,"Platform"],[39,14,1,56],[39,17,1,56,"_interopDefault"],[39,32,1,56],[39,33,1,56,"_reactNativeWebDistExportsPlatform"],[39,67,1,56],[40,2,1,56],[40,6,1,56,"_reactNativeWebDistExportsProcessColor"],[40,44,1,56],[40,47,1,56,"require"],[40,54,1,56],[40,55,1,56,"_dependencyMap"],[40,69,1,56],[41,2,1,56],[41,6,1,56,"processColor"],[41,18,1,56],[41,21,1,56,"_interopDefault"],[41,36,1,56],[41,37,1,56,"_reactNativeWebDistExportsProcessColor"],[41,75,1,56],[42,2,3,0],[42,6,3,0,"_ExpoWebBrowser"],[42,21,3,0],[42,24,3,0,"require"],[42,31,3,0],[42,32,3,0,"_dependencyMap"],[42,46,3,0],[43,2,3,0],[43,6,3,0,"ExponentWebBrowser"],[43,24,3,0],[43,27,3,0,"_interopDefault"],[43,42,3,0],[43,43,3,0,"_ExpoWebBrowser"],[43,58,3,0],[44,2,4,0],[44,6,4,0,"_WebBrowserTypes"],[44,22,4,0],[44,25,4,0,"require"],[44,32,4,0],[44,33,4,0,"_dependencyMap"],[44,47,4,0],[45,2,6,0],[45,8,6,6,"emptyCustomTabsPackages"],[45,31,6,29],[45,34,6,32],[46,4,7,4,"defaultBrowserPackage"],[46,25,7,25],[46,27,7,27,"undefined"],[46,36,7,36],[47,4,8,4,"preferredBrowserPackage"],[47,27,8,27],[47,29,8,29,"undefined"],[47,38,8,38],[48,4,9,4,"browserPackages"],[48,19,9,19],[48,21,9,21],[48,23,9,23],[49,4,10,4,"servicePackages"],[49,19,10,19],[49,21,10,21],[50,2,11,0],[50,3,11,1],[51,2,12,0],[52,2,13,0],[53,0,14,0],[54,0,15,0],[55,0,16,0],[56,0,17,0],[57,0,18,0],[58,0,19,0],[59,0,20,0],[60,0,21,0],[61,2,22,7],[61,17,22,22,"getCustomTabsSupportingBrowsersAsync"],[61,53,22,58,"getCustomTabsSupportingBrowsersAsync"],[61,54,22,58],[61,56,22,61],[62,4,23,4],[62,8,23,8],[62,9,23,9,"ExponentWebBrowser"],[62,27,23,27],[62,28,23,27,"default"],[62,35,23,27],[62,36,23,28,"getCustomTabsSupportingBrowsersAsync"],[62,72,23,64],[62,74,23,66],[63,6,24,8],[63,12,24,14],[63,16,24,18,"UnavailabilityError"],[63,32,24,37],[63,33,24,37,"UnavailabilityError"],[63,52,24,37],[63,53,24,38],[63,65,24,50],[63,67,24,52],[63,105,24,90],[63,106,24,91],[64,4,25,4],[65,4,26,4],[65,8,26,8,"Platform"],[65,16,26,16],[65,17,26,16,"default"],[65,24,26,16],[65,25,26,17,"OS"],[65,27,26,19],[65,32,26,24],[65,41,26,33],[65,43,26,35],[66,6,27,8],[66,13,27,15,"emptyCustomTabsPackages"],[66,36,27,38],[67,4,28,4],[67,5,28,5],[67,11,29,9],[68,6,30,8],[68,13,30,15],[68,19,30,21,"ExponentWebBrowser"],[68,37,30,39],[68,38,30,39,"default"],[68,45,30,39],[68,46,30,40,"getCustomTabsSupportingBrowsersAsync"],[68,82,30,76],[68,83,30,77],[68,84,30,78],[69,4,31,4],[70,2,32,0],[71,2,33,0],[72,2,34,0],[73,0,35,0],[74,0,36,0],[75,0,37,0],[76,0,38,0],[77,0,39,0],[78,0,40,0],[79,0,41,0],[80,0,42,0],[81,2,43,7],[81,17,43,22,"warmUpAsync"],[81,28,43,33,"warmUpAsync"],[81,29,43,34,"browserPackage"],[81,43,43,48],[81,45,43,50],[82,4,44,4],[82,8,44,8],[82,9,44,9,"ExponentWebBrowser"],[82,27,44,27],[82,28,44,27,"default"],[82,35,44,27],[82,36,44,28,"warmUpAsync"],[82,47,44,39],[82,49,44,41],[83,6,45,8],[83,12,45,14],[83,16,45,18,"UnavailabilityError"],[83,32,45,37],[83,33,45,37,"UnavailabilityError"],[83,52,45,37],[83,53,45,38],[83,65,45,50],[83,67,45,52],[83,80,45,65],[83,81,45,66],[84,4,46,4],[85,4,47,4],[85,8,47,8,"Platform"],[85,16,47,16],[85,17,47,16,"default"],[85,24,47,16],[85,25,47,17,"OS"],[85,27,47,19],[85,32,47,24],[85,41,47,33],[85,43,47,35],[86,6,48,8],[86,13,48,15],[86,14,48,16],[86,15,48,17],[87,4,49,4],[87,5,49,5],[87,11,50,9],[88,6,51,8],[88,13,51,15],[88,19,51,21,"ExponentWebBrowser"],[88,37,51,39],[88,38,51,39,"default"],[88,45,51,39],[88,46,51,40,"warmUpAsync"],[88,57,51,51],[88,58,51,52,"browserPackage"],[88,72,51,66],[88,73,51,67],[89,4,52,4],[90,2,53,0],[91,2,54,0],[92,2,55,0],[93,0,56,0],[94,0,57,0],[95,0,58,0],[96,0,59,0],[97,0,60,0],[98,0,61,0],[99,0,62,0],[100,0,63,0],[101,0,64,0],[102,0,65,0],[103,2,66,7],[103,17,66,22,"mayInitWithUrlAsync"],[103,36,66,41,"mayInitWithUrlAsync"],[103,37,66,42,"url"],[103,40,66,45],[103,42,66,47,"browserPackage"],[103,56,66,61],[103,58,66,63],[104,4,67,4],[104,8,67,8],[104,9,67,9,"ExponentWebBrowser"],[104,27,67,27],[104,28,67,27,"default"],[104,35,67,27],[104,36,67,28,"mayInitWithUrlAsync"],[104,55,67,47],[104,57,67,49],[105,6,68,8],[105,12,68,14],[105,16,68,18,"UnavailabilityError"],[105,32,68,37],[105,33,68,37,"UnavailabilityError"],[105,52,68,37],[105,53,68,38],[105,65,68,50],[105,67,68,52],[105,88,68,73],[105,89,68,74],[106,4,69,4],[107,4,70,4],[107,8,70,8,"Platform"],[107,16,70,16],[107,17,70,16,"default"],[107,24,70,16],[107,25,70,17,"OS"],[107,27,70,19],[107,32,70,24],[107,41,70,33],[107,43,70,35],[108,6,71,8],[108,13,71,15],[108,14,71,16],[108,15,71,17],[109,4,72,4],[109,5,72,5],[109,11,73,9],[110,6,74,8],[110,13,74,15],[110,19,74,21,"ExponentWebBrowser"],[110,37,74,39],[110,38,74,39,"default"],[110,45,74,39],[110,46,74,40,"mayInitWithUrlAsync"],[110,65,74,59],[110,66,74,60,"url"],[110,69,74,63],[110,71,74,65,"browserPackage"],[110,85,74,79],[110,86,74,80],[111,4,75,4],[112,2,76,0],[113,2,77,0],[114,2,78,0],[115,0,79,0],[116,0,80,0],[117,0,81,0],[118,0,82,0],[119,0,83,0],[120,0,84,0],[121,0,85,0],[122,0,86,0],[123,0,87,0],[124,0,88,0],[125,0,89,0],[126,2,90,7],[126,17,90,22,"coolDownAsync"],[126,30,90,35,"coolDownAsync"],[126,31,90,36,"browserPackage"],[126,45,90,50],[126,47,90,52],[127,4,91,4],[127,8,91,8],[127,9,91,9,"ExponentWebBrowser"],[127,27,91,27],[127,28,91,27,"default"],[127,35,91,27],[127,36,91,28,"coolDownAsync"],[127,49,91,41],[127,51,91,43],[128,6,92,8],[128,12,92,14],[128,16,92,18,"UnavailabilityError"],[128,32,92,37],[128,33,92,37,"UnavailabilityError"],[128,52,92,37],[128,53,92,38],[128,65,92,50],[128,67,92,52],[128,82,92,67],[128,83,92,68],[129,4,93,4],[130,4,94,4],[130,8,94,8,"Platform"],[130,16,94,16],[130,17,94,16,"default"],[130,24,94,16],[130,25,94,17,"OS"],[130,27,94,19],[130,32,94,24],[130,41,94,33],[130,43,94,35],[131,6,95,8],[131,13,95,15],[131,14,95,16],[131,15,95,17],[132,4,96,4],[132,5,96,5],[132,11,97,9],[133,6,98,8],[133,13,98,15],[133,19,98,21,"ExponentWebBrowser"],[133,37,98,39],[133,38,98,39,"default"],[133,45,98,39],[133,46,98,40,"coolDownAsync"],[133,59,98,53],[133,60,98,54,"browserPackage"],[133,74,98,68],[133,75,98,69],[134,4,99,4],[135,2,100,0],[136,2,101,0],[137,2,102,0],[138,0,103,0],[139,0,104,0],[140,0,105,0],[141,0,106,0],[142,0,107,0],[143,0,108,0],[144,0,109,0],[145,0,110,0],[146,0,111,0],[147,0,112,0],[148,0,113,0],[149,0,114,0],[150,0,115,0],[151,0,116,0],[152,2,117,7],[152,17,117,22,"openBrowserAsync"],[152,33,117,38,"openBrowserAsync"],[152,34,117,39,"url"],[152,37,117,42],[152,39,117,44,"browserParams"],[152,52,117,57],[152,55,117,60],[152,56,117,61],[152,57,117,62],[152,59,117,64],[153,4,118,4],[153,8,118,8],[153,9,118,9,"ExponentWebBrowser"],[153,27,118,27],[153,28,118,27,"default"],[153,35,118,27],[153,36,118,28,"openBrowserAsync"],[153,52,118,44],[153,54,118,46],[154,6,119,8],[154,12,119,14],[154,16,119,18,"UnavailabilityError"],[154,32,119,37],[154,33,119,37,"UnavailabilityError"],[154,52,119,37],[154,53,119,38],[154,65,119,50],[154,67,119,52],[154,85,119,70],[154,86,119,71],[155,4,120,4],[156,4,121,4],[156,11,121,11],[156,17,121,17,"ExponentWebBrowser"],[156,35,121,35],[156,36,121,35,"default"],[156,43,121,35],[156,44,121,36,"openBrowserAsync"],[156,60,121,52],[156,61,121,53,"url"],[156,64,121,56],[156,66,121,58,"_processOptions"],[156,81,121,73],[156,82,121,74,"browserParams"],[156,95,121,87],[156,96,121,88],[156,97,121,89],[157,2,122,0],[158,2,123,0],[159,2,124,0],[160,0,125,0],[161,0,126,0],[162,0,127,0],[163,0,128,0],[164,0,129,0],[165,2,130,7],[165,11,130,16,"dismissBrowser"],[165,25,130,30,"dismissBrowser"],[165,26,130,30],[165,28,130,33],[166,4,131,4],[166,11,131,11,"ExponentWebBrowser"],[166,29,131,29],[166,30,131,29,"default"],[166,37,131,29],[166,38,131,30,"dismissBrowser"],[166,52,131,44],[166,55,131,47],[166,56,131,48],[167,2,132,0],[168,2,133,0],[169,2,134,0],[170,0,135,0],[171,0,136,0],[172,0,137,0],[173,0,138,0],[174,0,139,0],[175,0,140,0],[176,0,141,0],[177,0,142,0],[178,0,143,0],[179,0,144,0],[180,0,145,0],[181,0,146,0],[182,0,147,0],[183,0,148,0],[184,0,149,0],[185,0,150,0],[186,0,151,0],[187,0,152,0],[188,0,153,0],[189,0,154,0],[190,0,155,0],[191,0,156,0],[192,0,157,0],[193,0,158,0],[194,0,159,0],[195,0,160,0],[196,0,161,0],[197,0,162,0],[198,0,163,0],[199,0,164,0],[200,0,165,0],[201,0,166,0],[202,0,167,0],[203,0,168,0],[204,0,169,0],[205,0,170,0],[206,0,171,0],[207,0,172,0],[208,0,173,0],[209,0,174,0],[210,0,175,0],[211,0,176,0],[212,0,177,0],[213,0,178,0],[214,0,179,0],[215,0,180,0],[216,0,181,0],[217,0,182,0],[218,2,183,7],[218,17,183,22,"openAuthSessionAsync"],[218,37,183,42,"openAuthSessionAsync"],[218,38,183,43,"url"],[218,41,183,46],[218,43,183,48,"redirectUrl"],[218,54,183,59],[218,56,183,61,"options"],[218,63,183,68],[218,66,183,71],[218,67,183,72],[218,68,183,73],[218,70,183,75],[219,4,184,4],[219,8,184,8,"_authSessionIsNativelySupported"],[219,39,184,39],[219,40,184,40],[219,41,184,41],[219,43,184,43],[220,6,185,8],[220,10,185,12],[220,11,185,13,"ExponentWebBrowser"],[220,29,185,31],[220,30,185,31,"default"],[220,37,185,31],[220,38,185,32,"openAuthSessionAsync"],[220,58,185,52],[220,60,185,54],[221,8,186,12],[221,14,186,18],[221,18,186,22,"UnavailabilityError"],[221,34,186,41],[221,35,186,41,"UnavailabilityError"],[221,54,186,41],[221,55,186,42],[221,67,186,54],[221,69,186,56],[221,91,186,78],[221,92,186,79],[222,6,187,8],[223,6,188,8],[223,10,188,12],[223,11,188,13],[223,16,188,18],[223,18,188,20],[223,25,188,27],[223,27,188,29],[223,32,188,34],[223,33,188,35],[223,34,188,36,"includes"],[223,42,188,44],[223,43,188,45,"Platform"],[223,51,188,53],[223,52,188,53,"default"],[223,59,188,53],[223,60,188,54,"OS"],[223,62,188,56],[223,63,188,57],[223,65,188,59],[224,8,189,12],[224,15,189,19,"ExponentWebBrowser"],[224,33,189,37],[224,34,189,37,"default"],[224,41,189,37],[224,42,189,38,"openAuthSessionAsync"],[224,62,189,58],[224,63,189,59,"url"],[224,66,189,62],[224,68,189,64,"redirectUrl"],[224,79,189,75],[224,81,189,77,"_processOptions"],[224,96,189,92],[224,97,189,93,"options"],[224,104,189,100],[224,105,189,101],[224,106,189,102],[225,6,190,8],[226,6,191,8],[226,13,191,15,"ExponentWebBrowser"],[226,31,191,33],[226,32,191,33,"default"],[226,39,191,33],[226,40,191,34,"openAuthSessionAsync"],[226,60,191,54],[226,61,191,55,"url"],[226,64,191,58],[226,66,191,60,"redirectUrl"],[226,77,191,71],[226,78,191,72],[227,4,192,4],[227,5,192,5],[227,11,193,9],[228,6,194,8],[228,13,194,15,"_openAuthSessionPolyfillAsync"],[228,42,194,44],[228,43,194,45,"url"],[228,46,194,48],[228,48,194,50,"redirectUrl"],[228,59,194,61],[228,61,194,63,"options"],[228,68,194,70],[228,69,194,71],[229,4,195,4],[230,2,196,0],[231,2,197,0],[232,0,198,0],[233,0,199,0],[234,0,200,0],[235,0,201,0],[236,0,202,0],[237,0,203,0],[238,0,204,0],[239,2,205,7],[239,11,205,16,"dismissAuthSession"],[239,29,205,34,"dismissAuthSession"],[239,30,205,34],[239,32,205,37],[240,4,206,4],[240,8,206,8,"_authSessionIsNativelySupported"],[240,39,206,39],[240,40,206,40],[240,41,206,41],[240,43,206,43],[241,6,207,8],[241,10,207,12],[241,11,207,13,"ExponentWebBrowser"],[241,29,207,31],[241,30,207,31,"default"],[241,37,207,31],[241,38,207,32,"dismissAuthSession"],[241,56,207,50],[241,58,207,52],[242,8,208,12],[242,14,208,18],[242,18,208,22,"UnavailabilityError"],[242,34,208,41],[242,35,208,41,"UnavailabilityError"],[242,54,208,41],[242,55,208,42],[242,67,208,54],[242,69,208,56],[242,89,208,76],[242,90,208,77],[243,6,209,8],[244,6,210,8,"ExponentWebBrowser"],[244,24,210,26],[244,25,210,26,"default"],[244,32,210,26],[244,33,210,27,"dismissAuthSession"],[244,51,210,45],[244,52,210,46],[244,53,210,47],[245,4,211,4],[245,5,211,5],[245,11,212,9],[246,6,213,8],[246,10,213,12],[246,11,213,13,"ExponentWebBrowser"],[246,29,213,31],[246,30,213,31,"default"],[246,37,213,31],[246,38,213,32,"dismissBrowser"],[246,52,213,46],[246,54,213,48],[247,8,214,12],[247,14,214,18],[247,18,214,22,"UnavailabilityError"],[247,34,214,41],[247,35,214,41,"UnavailabilityError"],[247,54,214,41],[247,55,214,42],[247,67,214,54],[247,69,214,56],[247,85,214,72],[247,86,214,73],[248,6,215,8],[249,6,216,8,"ExponentWebBrowser"],[249,24,216,26],[249,25,216,26,"default"],[249,32,216,26],[249,33,216,27,"dismissBrowser"],[249,47,216,41],[249,48,216,42],[249,49,216,43],[250,4,217,4],[251,2,218,0],[252,2,219,0],[253,2,220,0],[254,0,221,0],[255,0,222,0],[256,0,223,0],[257,0,224,0],[258,0,225,0],[259,0,226,0],[260,0,227,0],[261,0,228,0],[262,0,229,0],[263,0,230,0],[264,0,231,0],[265,0,232,0],[266,0,233,0],[267,0,234,0],[268,0,235,0],[269,0,236,0],[270,0,237,0],[271,0,238,0],[272,0,239,0],[273,0,240,0],[274,0,241,0],[275,0,242,0],[276,0,243,0],[277,0,244,0],[278,0,245,0],[279,0,246,0],[280,0,247,0],[281,2,248,7],[281,11,248,16,"maybeCompleteAuthSession"],[281,35,248,40,"maybeCompleteAuthSession"],[281,36,248,41,"options"],[281,43,248,48],[281,46,248,51],[281,47,248,52],[281,48,248,53],[281,50,248,55],[282,4,249,4],[282,8,249,8,"ExponentWebBrowser"],[282,26,249,26],[282,27,249,26,"default"],[282,34,249,26],[282,35,249,27,"maybeCompleteAuthSession"],[282,59,249,51],[282,61,249,53],[283,6,250,8],[283,13,250,15,"ExponentWebBrowser"],[283,31,250,33],[283,32,250,33,"default"],[283,39,250,33],[283,40,250,34,"maybeCompleteAuthSession"],[283,64,250,58],[283,65,250,59,"options"],[283,72,250,66],[283,73,250,67],[284,4,251,4],[285,4,252,4],[285,11,252,11],[286,6,252,13,"type"],[286,10,252,17],[286,12,252,19],[286,20,252,27],[287,6,252,29,"message"],[287,13,252,36],[287,15,252,38],[288,4,252,71],[288,5,252,72],[289,2,253,0],[290,2,254,0],[290,11,254,9,"_processOptions"],[290,26,254,24,"_processOptions"],[290,27,254,25,"options"],[290,34,254,32],[290,36,254,34],[291,4,255,4],[291,11,255,4,"Object"],[291,17,255,4],[291,18,255,4,"assign"],[291,24,255,4],[291,29,256,11,"options"],[291,36,256,18],[292,6,257,8,"controlsColor"],[292,19,257,21],[292,21,257,23],[292,25,257,23,"processColor"],[292,37,257,35],[292,38,257,35,"default"],[292,45,257,35],[292,47,257,36,"options"],[292,54,257,43],[292,55,257,44,"controlsColor"],[292,68,257,57],[292,69,257,58],[293,6,258,8,"toolbarColor"],[293,18,258,20],[293,20,258,22],[293,24,258,22,"processColor"],[293,36,258,34],[293,37,258,34,"default"],[293,44,258,34],[293,46,258,35,"options"],[293,53,258,42],[293,54,258,43,"toolbarColor"],[293,66,258,55],[293,67,258,56],[294,6,259,8,"secondaryToolbarColor"],[294,27,259,29],[294,29,259,31],[294,33,259,31,"processColor"],[294,45,259,43],[294,46,259,43,"default"],[294,53,259,43],[294,55,259,44,"options"],[294,62,259,51],[294,63,259,52,"secondaryToolbarColor"],[294,84,259,73],[295,4,259,74],[296,2,261,0],[297,2,262,0],[298,2,263,0],[298,11,263,9,"_authSessionIsNativelySupported"],[298,42,263,40,"_authSessionIsNativelySupported"],[298,43,263,40],[298,45,263,43],[299,4,264,4],[299,11,264,11,"Platform"],[299,19,264,19],[299,20,264,19,"default"],[299,27,264,19],[299,28,264,20,"OS"],[299,30,264,22],[299,35,264,27],[299,44,264,36],[300,2,265,0],[301,2,266,0],[301,6,266,4,"_redirectSubscription"],[301,27,266,25],[301,30,266,28],[301,34,266,32],[302,2,267,0],[303,0,268,0],[304,0,269,0],[305,0,270,0],[306,2,271,0],[307,2,272,0],[308,2,273,0],[308,6,273,4,"_onWebBrowserCloseAndroid"],[308,31,273,29],[308,34,273,32],[308,38,273,36],[309,2,274,0],[310,2,275,0],[311,2,276,0],[312,2,277,0],[313,2,278,0],[313,6,278,4,"_isAppStateAvailable"],[313,26,278,24],[313,29,278,27,"AppState"],[313,37,278,35],[313,38,278,35,"default"],[313,45,278,35],[313,46,278,36,"currentState"],[313,58,278,48],[313,63,278,53],[313,67,278,57],[314,2,279,0],[314,11,279,9,"_onAppStateChangeAndroid"],[314,35,279,33,"_onAppStateChangeAndroid"],[314,36,279,34,"state"],[314,41,279,39],[314,43,279,41],[315,4,280,4],[315,8,280,8],[315,9,280,9,"_isAppStateAvailable"],[315,29,280,29],[315,31,280,31],[316,6,281,8,"_isAppStateAvailable"],[316,26,281,28],[316,29,281,31],[316,33,281,35],[317,6,282,8],[318,4,283,4],[319,4,284,4],[319,8,284,8,"state"],[319,13,284,13],[319,18,284,18],[319,26,284,26],[319,30,284,30,"_onWebBrowserCloseAndroid"],[319,55,284,55],[319,57,284,57],[320,6,285,8,"_onWebBrowserCloseAndroid"],[320,31,285,33],[320,32,285,34],[320,33,285,35],[321,4,286,4],[322,2,287,0],[323,2,288,0],[323,17,288,15,"_openBrowserAndWaitAndroidAsync"],[323,48,288,46,"_openBrowserAndWaitAndroidAsync"],[323,49,288,47,"startUrl"],[323,57,288,55],[323,59,288,57,"browserParams"],[323,72,288,70],[323,75,288,73],[323,76,288,74],[323,77,288,75],[323,79,288,77],[324,4,289,4],[324,10,289,10,"appStateChangedToActive"],[324,33,289,33],[324,36,289,36],[324,40,289,40,"Promise"],[324,47,289,47],[324,48,289,49,"resolve"],[324,55,289,56],[324,59,289,61],[325,6,290,8,"_onWebBrowserCloseAndroid"],[325,31,290,33],[325,34,290,36,"resolve"],[325,41,290,43],[326,4,291,4],[326,5,291,5],[326,6,291,6],[327,4,292,4],[327,10,292,10,"stateChangeSubscription"],[327,33,292,33],[327,36,292,36,"AppState"],[327,44,292,44],[327,45,292,44,"default"],[327,52,292,44],[327,53,292,45,"addEventListener"],[327,69,292,61],[327,70,292,62],[327,78,292,70],[327,80,292,72,"_onAppStateChangeAndroid"],[327,104,292,96],[327,105,292,97],[328,4,293,4],[328,8,293,8,"result"],[328,14,293,14],[328,17,293,17],[329,6,293,19,"type"],[329,10,293,23],[329,12,293,25,"WebBrowserResultType"],[329,28,293,45],[329,29,293,45,"WebBrowserResultType"],[329,49,293,45],[329,50,293,46,"CANCEL"],[330,4,293,53],[330,5,293,54],[331,4,294,4],[331,8,294,8,"type"],[331,12,294,12],[331,15,294,15],[331,19,294,19],[332,4,295,4],[332,8,295,8],[333,6,296,8],[333,7,296,9],[334,8,296,11,"type"],[335,6,296,16],[335,7,296,17],[335,10,296,20],[335,16,296,26,"openBrowserAsync"],[335,32,296,42],[335,33,296,43,"startUrl"],[335,41,296,51],[335,43,296,53,"browserParams"],[335,56,296,66],[335,57,296,67],[336,4,297,4],[336,5,297,5],[336,6,298,4],[336,13,298,11,"e"],[336,14,298,12],[336,16,298,14],[337,6,299,8,"stateChangeSubscription"],[337,29,299,31],[337,30,299,32,"remove"],[337,36,299,38],[337,37,299,39],[337,38,299,40],[338,6,300,8,"_onWebBrowserCloseAndroid"],[338,31,300,33],[338,34,300,36],[338,38,300,40],[339,6,301,8],[339,12,301,14,"e"],[339,13,301,15],[340,4,302,4],[341,4,303,4],[341,8,303,8,"type"],[341,12,303,12],[341,17,303,17],[341,25,303,25],[341,27,303,27],[342,6,304,8],[342,12,304,14,"appStateChangedToActive"],[342,35,304,37],[343,6,305,8,"result"],[343,12,305,14],[343,15,305,17],[344,8,305,19,"type"],[344,12,305,23],[344,14,305,25,"WebBrowserResultType"],[344,30,305,45],[344,31,305,45,"WebBrowserResultType"],[344,51,305,45],[344,52,305,46,"DISMISS"],[345,6,305,54],[345,7,305,55],[346,4,306,4],[347,4,307,4,"stateChangeSubscription"],[347,27,307,27],[347,28,307,28,"remove"],[347,34,307,34],[347,35,307,35],[347,36,307,36],[348,4,308,4,"_onWebBrowserCloseAndroid"],[348,29,308,29],[348,32,308,32],[348,36,308,36],[349,4,309,4],[349,11,309,11,"result"],[349,17,309,17],[350,2,310,0],[351,2,311,0],[351,17,311,15,"_openAuthSessionPolyfillAsync"],[351,46,311,44,"_openAuthSessionPolyfillAsync"],[351,47,311,45,"startUrl"],[351,55,311,53],[351,57,311,55,"returnUrl"],[351,66,311,64],[351,68,311,66,"browserParams"],[351,81,311,79],[351,84,311,82],[351,85,311,83],[351,86,311,84],[351,88,311,86],[352,4,312,4],[352,8,312,8,"_redirectSubscription"],[352,29,312,29],[352,31,312,31],[353,6,313,8],[353,12,313,14],[353,16,313,18,"Error"],[353,21,313,23],[353,22,313,24],[353,126,313,128],[353,127,313,129],[354,4,314,4],[355,4,315,4],[355,8,315,8,"_onWebBrowserCloseAndroid"],[355,33,315,33],[355,35,315,35],[356,6,316,8],[356,12,316,14],[356,16,316,18,"Error"],[356,21,316,23],[356,22,316,24],[356,82,316,84],[356,83,316,85],[357,4,317,4],[358,4,318,4],[358,8,318,8],[359,6,319,8],[359,10,319,12,"Platform"],[359,18,319,20],[359,19,319,20,"default"],[359,26,319,20],[359,27,319,21,"OS"],[359,29,319,23],[359,34,319,28],[359,43,319,37],[359,45,319,39],[360,8,320,12],[360,15,320,19],[360,21,320,25,"Promise"],[360,28,320,32],[360,29,320,33,"race"],[360,33,320,37],[360,34,320,38],[360,35,321,16,"_openBrowserAndWaitAndroidAsync"],[360,66,321,47],[360,67,321,48,"startUrl"],[360,75,321,56],[360,77,321,58,"browserParams"],[360,90,321,71],[360,91,321,72],[360,93,322,16,"_waitForRedirectAsync"],[360,114,322,37],[360,115,322,38,"returnUrl"],[360,124,322,47],[360,125,322,48],[360,126,323,13],[360,127,323,14],[361,6,324,8],[361,7,324,9],[361,13,325,13],[362,8,326,12],[362,15,326,19],[362,21,326,25,"Promise"],[362,28,326,32],[362,29,326,33,"race"],[362,33,326,37],[362,34,326,38],[362,35,327,16,"openBrowserAsync"],[362,51,327,32],[362,52,327,33,"startUrl"],[362,60,327,41],[362,62,327,43,"browserParams"],[362,75,327,56],[362,76,327,57],[362,78,328,16,"_waitForRedirectAsync"],[362,99,328,37],[362,100,328,38,"returnUrl"],[362,109,328,47],[362,110,328,48],[362,111,329,13],[362,112,329,14],[363,6,330,8],[364,4,331,4],[364,5,331,5],[364,14,332,12],[365,6,333,8],[366,6,334,8],[367,6,335,8],[367,10,335,12,"ExponentWebBrowser"],[367,28,335,30],[367,29,335,30,"default"],[367,36,335,30],[367,37,335,31,"dismissBrowser"],[367,51,335,45],[367,53,335,47],[368,8,336,12,"ExponentWebBrowser"],[368,26,336,30],[368,27,336,30,"default"],[368,34,336,30],[368,35,336,31,"dismissBrowser"],[368,49,336,45],[368,50,336,46],[368,51,336,47],[369,6,337,8],[370,6,338,8,"_stopWaitingForRedirect"],[370,29,338,31],[370,30,338,32],[370,31,338,33],[371,4,339,4],[372,2,340,0],[373,2,341,0],[373,11,341,9,"_stopWaitingForRedirect"],[373,34,341,32,"_stopWaitingForRedirect"],[373,35,341,32],[373,37,341,35],[374,4,342,4],[374,8,342,8],[374,9,342,9,"_redirectSubscription"],[374,30,342,30],[374,32,342,32],[375,6,343,8],[375,12,343,14],[375,16,343,18,"Error"],[375,21,343,23],[375,22,343,24],[375,122,343,124],[375,123,343,125],[376,4,344,4],[377,4,345,4,"_redirectSubscription"],[377,25,345,25],[377,26,345,26,"remove"],[377,32,345,32],[377,33,345,33],[377,34,345,34],[378,4,346,4,"_redirectSubscription"],[378,25,346,25],[378,28,346,28],[378,32,346,32],[379,2,347,0],[380,2,348,0],[380,11,348,9,"_waitForRedirectAsync"],[380,32,348,30,"_waitForRedirectAsync"],[380,33,348,31,"returnUrl"],[380,42,348,40],[380,44,348,42],[381,4,349,4],[382,4,350,4],[382,11,350,11],[382,15,350,15,"Promise"],[382,22,350,22],[382,23,350,24,"resolve"],[382,30,350,31],[382,34,350,36],[383,6,351,8],[383,12,351,14,"redirectHandler"],[383,27,351,29],[383,30,351,33,"event"],[383,35,351,38],[383,39,351,43],[384,8,352,12],[384,12,352,16,"returnUrl"],[384,21,352,25],[384,25,352,29,"event"],[384,30,352,34],[384,31,352,35,"url"],[384,34,352,38],[384,35,352,39,"startsWith"],[384,45,352,49],[384,46,352,50,"returnUrl"],[384,55,352,59],[384,56,352,60],[384,58,352,62],[385,10,353,16,"resolve"],[385,17,353,23],[385,18,353,24],[386,12,353,26,"url"],[386,15,353,29],[386,17,353,31,"event"],[386,22,353,36],[386,23,353,37,"url"],[386,26,353,40],[387,12,353,42,"type"],[387,16,353,46],[387,18,353,48],[388,10,353,58],[388,11,353,59],[388,12,353,60],[389,8,354,12],[390,6,355,8],[390,7,355,9],[391,6,356,8,"_redirectSubscription"],[391,27,356,29],[391,30,356,32,"Linking"],[391,37,356,39],[391,38,356,39,"default"],[391,45,356,39],[391,46,356,40,"addEventListener"],[391,62,356,56],[391,63,356,57],[391,68,356,62],[391,70,356,64,"redirectHandler"],[391,85,356,79],[391,86,356,80],[392,4,357,4],[392,5,357,5],[392,6,357,6],[393,2,358,0],[394,0,358,1],[394,3]],"functionMap":{"names":["<global>","getCustomTabsSupportingBrowsersAsync","warmUpAsync","mayInitWithUrlAsync","coolDownAsync","openBrowserAsync","dismissBrowser","openAuthSessionAsync","dismissAuthSession","maybeCompleteAuthSession","_processOptions","_authSessionIsNativelySupported","_onAppStateChangeAndroid","_openBrowserAndWaitAndroidAsync","Promise$argument_0","_openAuthSessionPolyfillAsync","_stopWaitingForRedirect","_waitForRedirectAsync","redirectHandler"],"mappings":"AAA;OCqB;CDU;OEW;CFU;OGa;CHU;OIc;CJU;OKiB;CLK;OMQ;CNE;OOmD;CPa;OQS;CRa;OS8B;CTK;AUC;CVO;AWE;CXE;AYc;CZQ;AaC;gDCC;KDE;CbmB;AeC;Cf6B;AgBC;ChBM;AiBC;uBHE;gCIC;SJI;KGE;CjBC"},"hasCjsExports":false},"type":"js/module"}]}