{"dependencies":[{"name":"../common","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":633},"end":{"line":18,"column":37,"index":670}}],"key":"tbtg/nEigFLu9LmBKxGuAsZ2sgI=","exportNames":["*"],"imports":1}},{"name":"../validateAdRequestOptions","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":671},"end":{"line":19,"column":71,"index":742}}],"key":"RfReo1Mj+Rk/eCR+fj3Kfa3Ht4o=","exportNames":["*"],"imports":1}},{"name":"./MobileAd","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":743},"end":{"line":20,"column":38,"index":781}}],"key":"dtP8HEVKjYxmM121MWjMCI3fzRc=","exportNames":["*"],"imports":1}},{"name":"../AdEventType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":782},"end":{"line":21,"column":45,"index":827}}],"key":"1CcRVKVTVQFuDTnxGeZIOmqcBKY=","exportNames":["*"],"imports":1}},{"name":"../specs/modules/NativeRewardedModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":828},"end":{"line":22,"column":73,"index":901}}],"key":"nKGf0dlRbh5VngH6xx45zJXXIzs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"RewardedAd\", {\n    enumerable: true,\n    get: function () {\n      return RewardedAd;\n    }\n  });\n  var _common = require(_dependencyMap[0], \"../common\");\n  var _validateAdRequestOptions = require(_dependencyMap[1], \"../validateAdRequestOptions\");\n  var _MobileAd = require(_dependencyMap[2], \"./MobileAd\");\n  var _AdEventType = require(_dependencyMap[3], \"../AdEventType\");\n  var _specsModulesNativeRewardedModule = require(_dependencyMap[4], \"../specs/modules/NativeRewardedModule\");\n  var NativeRewardedModule = _interopDefault(_specsModulesNativeRewardedModule);\n  /*\n   * Copyright (c) 2016-present Invertase Limited & Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this library except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   */\n\n  /**\n   * A class for interacting and showing Rewarded Ads.\n   *\n   * An Rewarded advert can be pre-loaded and shown at a suitable point in your apps flow, such as at the end of a level\n   * in a game. The content of a rewarded advert can be controlled via your Google Mobile Ads dashboard. Typically users are rewarded\n   * after completing a specific advert action (e.g. watching a video or submitting an option via an interactive form).\n   * Events (such as the user earning a reward or closing a rewarded advert early) are sent back for you to handle accordingly\n   * within your application.\n   *\n   * #### Example\n   *\n   * First create a new Rewarded instance, passing in your Ad Unit ID from the Google Mobile Ads configuration console, and any additional\n   * request options. The example below will present a test advert, and only request a non-personalized ad.\n   *\n   * ```js\n   * import { RewardedAd, TestIds } from 'react-native-google-mobile-ads';\n   *\n   * const rewarded = RewardedAd.createForAdRequest(TestIds.REWARDED, {\n   *     requestNonPersonalizedAdsOnly: true,\n   * });\n   *  ```\n   *\n   * Each advert needs to be loaded from Google Mobile Ads before being shown. It is recommended this is performed before the user\n   * reaches the checkpoint to show the advert, so it's ready to go. Before loading the advert, we need to setup\n   * event listeners to listen for updates from Google Mobile Ads, such as advert loaded or failed to load.\n   *\n   * Event types match the `AdEventType` or `RewardedAdEventType` interface. The potential user reward for rewarded\n   * adverts are passed back to the event handler on advert load and when the user earns the reward.\n   *\n   * ```js\n   * import { RewardedAdEventType } from 'react-native-google-mobile-ads';\n   *\n   * rewarded.addAdEventListener(RewardedAdEventType.LOADED. () => {\n   *   rewarded.show();\n   * });\n   * rewarded.addAdEventListener(RewardedAdEventType.EARNED_REWARD. (reward) => {\n   *   console.log('User earned reward of ', reward);\n   * });\n   *\n   * rewarded.load();\n   *  ```\n   *\n   * The rewarded advert will be presented to the user, and several more events can be triggered such as the user clicking the\n   * advert, closing it or completing the action.\n   */\n  class RewardedAd extends _MobileAd.MobileAd {\n    static _rewardedRequest = 0;\n    /**\n     * Creates a new RewardedAd instance.\n     *\n     * #### Example\n     *\n     * ```js\n     * import { RewardedAd, RewardedAdEventType, TestIds } from 'react-native-google-mobile-ads';\n     *\n     * const rewardedAd = await RewardedAd.createForAdRequest(TestIds.REWARDED, {\n     *   requestAgent: 'CoolAds',\n     * });\n     *\n     * rewarded.addAdEventListener(RewardedAdEventType.LOADED. () => {\n     *   rewarded.show();\n     * });\n     * rewarded.addAdEventListener(RewardedAdEventType.EARNED_REWARD. (reward) => {\n     *   console.log('User earned reward of ', reward);\n     * });\n     *\n     * rewardedAd.load();\n     * ```\n     *\n     * @param adUnitId The Ad Unit ID for the Rewarded Ad. You can find this on your Google Mobile Ads dashboard.\n     * @param requestOptions Optional RequestOptions used to load the ad.\n     */\n    static createForAdRequest(adUnitId, requestOptions) {\n      if (!(0, _common.isString)(adUnitId)) {\n        throw new Error(\"RewardedAd.createForAdRequest(*) 'adUnitId' expected an string value.\");\n      }\n      let options = {};\n      try {\n        options = (0, _validateAdRequestOptions.validateAdRequestOptions)(requestOptions);\n      } catch (e) {\n        if (e instanceof Error) {\n          throw new Error(`RewardedAd.createForAdRequest(_, *) ${e.message}.`);\n        }\n      }\n      const requestId = RewardedAd._rewardedRequest++;\n      return new RewardedAd('rewarded', requestId, adUnitId, NativeRewardedModule.default.rewardedLoad, NativeRewardedModule.default.rewardedShow, options);\n    }\n    addAdEventsListener(listener) {\n      return this._addAdEventsListener(listener);\n    }\n    addAdEventListener(type, listener) {\n      if (type === _AdEventType.AdEventType.LOADED) {\n        throw new Error('RewardedAd.addAdEventListener(*) use RewardedAdEventType.LOADED instead of AdEventType.LOADED.');\n      }\n      return this._addAdEventListener(type, listener);\n    }\n  }\n});","lineCount":138,"map":[[12,2,69,0,"Object"],[12,8,69,0],[12,9,69,0,"defineProperty"],[12,23,69,0],[12,24,69,0,"exports"],[12,31,69,0],[13,4,69,0,"enumerable"],[13,14,69,0],[14,4,69,0,"get"],[14,7,69,0],[14,18,69,0,"get"],[14,19,69,0],[15,6,69,0],[15,13,69,0,"RewardedAd"],[15,23,69,0],[16,4,69,0],[17,2,69,0],[18,2,18,0],[18,6,18,0,"_common"],[18,13,18,0],[18,16,18,0,"require"],[18,23,18,0],[18,24,18,0,"_dependencyMap"],[18,38,18,0],[19,2,19,0],[19,6,19,0,"_validateAdRequestOptions"],[19,31,19,0],[19,34,19,0,"require"],[19,41,19,0],[19,42,19,0,"_dependencyMap"],[19,56,19,0],[20,2,20,0],[20,6,20,0,"_MobileAd"],[20,15,20,0],[20,18,20,0,"require"],[20,25,20,0],[20,26,20,0,"_dependencyMap"],[20,40,20,0],[21,2,21,0],[21,6,21,0,"_AdEventType"],[21,18,21,0],[21,21,21,0,"require"],[21,28,21,0],[21,29,21,0,"_dependencyMap"],[21,43,21,0],[22,2,22,0],[22,6,22,0,"_specsModulesNativeRewardedModule"],[22,39,22,0],[22,42,22,0,"require"],[22,49,22,0],[22,50,22,0,"_dependencyMap"],[22,64,22,0],[23,2,22,0],[23,6,22,0,"NativeRewardedModule"],[23,26,22,0],[23,29,22,0,"_interopDefault"],[23,44,22,0],[23,45,22,0,"_specsModulesNativeRewardedModule"],[23,78,22,0],[24,2,1,0],[25,0,2,0],[26,0,3,0],[27,0,4,0],[28,0,5,0],[29,0,6,0],[30,0,7,0],[31,0,8,0],[32,0,9,0],[33,0,10,0],[34,0,11,0],[35,0,12,0],[36,0,13,0],[37,0,14,0],[38,0,15,0],[39,0,16,0],[41,2,24,0],[42,0,25,0],[43,0,26,0],[44,0,27,0],[45,0,28,0],[46,0,29,0],[47,0,30,0],[48,0,31,0],[49,0,32,0],[50,0,33,0],[51,0,34,0],[52,0,35,0],[53,0,36,0],[54,0,37,0],[55,0,38,0],[56,0,39,0],[57,0,40,0],[58,0,41,0],[59,0,42,0],[60,0,43,0],[61,0,44,0],[62,0,45,0],[63,0,46,0],[64,0,47,0],[65,0,48,0],[66,0,49,0],[67,0,50,0],[68,0,51,0],[69,0,52,0],[70,0,53,0],[71,0,54,0],[72,0,55,0],[73,0,56,0],[74,0,57,0],[75,0,58,0],[76,0,59,0],[77,0,60,0],[78,0,61,0],[79,0,62,0],[80,0,63,0],[81,0,64,0],[82,0,65,0],[83,0,66,0],[84,0,67,0],[85,0,68,0],[86,2,69,7],[86,8,69,13,"RewardedAd"],[86,18,69,23],[86,27,69,32,"MobileAd"],[86,36,69,40],[86,37,69,40,"MobileAd"],[86,45,69,40],[86,46,69,41],[87,4,70,2],[87,11,70,9,"_rewardedRequest"],[87,27,70,25],[87,30,70,28],[87,31,70,29],[88,4,71,2],[89,0,72,0],[90,0,73,0],[91,0,74,0],[92,0,75,0],[93,0,76,0],[94,0,77,0],[95,0,78,0],[96,0,79,0],[97,0,80,0],[98,0,81,0],[99,0,82,0],[100,0,83,0],[101,0,84,0],[102,0,85,0],[103,0,86,0],[104,0,87,0],[105,0,88,0],[106,0,89,0],[107,0,90,0],[108,0,91,0],[109,0,92,0],[110,0,93,0],[111,0,94,0],[112,0,95,0],[113,4,96,2],[113,11,96,9,"createForAdRequest"],[113,29,96,27,"createForAdRequest"],[113,30,96,28,"adUnitId"],[113,38,96,36],[113,40,96,38,"requestOptions"],[113,54,96,52],[113,56,96,54],[114,6,97,4],[114,10,97,8],[114,11,97,9],[114,15,97,9,"isString"],[114,22,97,17],[114,23,97,17,"isString"],[114,31,97,17],[114,33,97,18,"adUnitId"],[114,41,97,26],[114,42,97,27],[114,44,97,29],[115,8,98,6],[115,14,98,12],[115,18,98,16,"Error"],[115,23,98,21],[115,24,98,22],[115,95,98,93],[115,96,98,94],[116,6,99,4],[117,6,100,4],[117,10,100,8,"options"],[117,17,100,15],[117,20,100,18],[117,21,100,19],[117,22,100,20],[118,6,101,4],[118,10,101,8],[119,8,102,6,"options"],[119,15,102,13],[119,18,102,16],[119,22,102,16,"validateAdRequestOptions"],[119,47,102,40],[119,48,102,40,"validateAdRequestOptions"],[119,72,102,40],[119,74,102,41,"requestOptions"],[119,88,102,55],[119,89,102,56],[120,6,103,4],[120,7,103,5],[120,8,103,6],[120,15,103,13,"e"],[120,16,103,14],[120,18,103,16],[121,8,104,6],[121,12,104,10,"e"],[121,13,104,11],[121,25,104,23,"Error"],[121,30,104,28],[121,32,104,30],[122,10,105,8],[122,16,105,14],[122,20,105,18,"Error"],[122,25,105,23],[122,26,105,24],[122,65,105,63,"e"],[122,66,105,64],[122,67,105,65,"message"],[122,74,105,72],[122,77,105,75],[122,78,105,76],[123,8,106,6],[124,6,107,4],[125,6,108,4],[125,12,108,10,"requestId"],[125,21,108,19],[125,24,108,22,"RewardedAd"],[125,34,108,32],[125,35,108,33,"_rewardedRequest"],[125,51,108,49],[125,53,108,51],[126,6,109,4],[126,13,109,11],[126,17,109,15,"RewardedAd"],[126,27,109,25],[126,28,109,26],[126,38,109,36],[126,40,109,38,"requestId"],[126,49,109,47],[126,51,109,49,"adUnitId"],[126,59,109,57],[126,61,109,59,"NativeRewardedModule"],[126,81,109,79],[126,82,109,79,"default"],[126,89,109,79],[126,90,109,80,"rewardedLoad"],[126,102,109,92],[126,104,109,94,"NativeRewardedModule"],[126,124,109,114],[126,125,109,114,"default"],[126,132,109,114],[126,133,109,115,"rewardedShow"],[126,145,109,127],[126,147,109,129,"options"],[126,154,109,136],[126,155,109,137],[127,4,110,2],[128,4,111,2,"addAdEventsListener"],[128,23,111,21,"addAdEventsListener"],[128,24,111,22,"listener"],[128,32,111,30],[128,34,111,32],[129,6,112,4],[129,13,112,11],[129,17,112,15],[129,18,112,16,"_addAdEventsListener"],[129,38,112,36],[129,39,112,37,"listener"],[129,47,112,45],[129,48,112,46],[130,4,113,2],[131,4,114,2,"addAdEventListener"],[131,22,114,20,"addAdEventListener"],[131,23,114,21,"type"],[131,27,114,25],[131,29,114,27,"listener"],[131,37,114,35],[131,39,114,37],[132,6,115,4],[132,10,115,8,"type"],[132,14,115,12],[132,19,115,17,"AdEventType"],[132,31,115,28],[132,32,115,28,"AdEventType"],[132,43,115,28],[132,44,115,29,"LOADED"],[132,50,115,35],[132,52,115,37],[133,8,116,6],[133,14,116,12],[133,18,116,16,"Error"],[133,23,116,21],[133,24,116,22],[133,120,116,118],[133,121,116,119],[134,6,117,4],[135,6,118,4],[135,13,118,11],[135,17,118,15],[135,18,118,16,"_addAdEventListener"],[135,37,118,35],[135,38,118,36,"type"],[135,42,118,40],[135,44,118,42,"listener"],[135,52,118,50],[135,53,118,51],[136,4,119,2],[137,2,120,0],[138,0,120,1],[138,3]],"functionMap":{"names":["<global>","RewardedAd","createForAdRequest","addAdEventsListener","addAdEventListener"],"mappings":"AAA;OCoE;EC2B;GDc;EEC;GFE;EGC;GHK;CDC"},"hasCjsExports":false},"type":"js/module"}]}