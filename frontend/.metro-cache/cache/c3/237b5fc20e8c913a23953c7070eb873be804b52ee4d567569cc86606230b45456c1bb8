{"dependencies":[{"name":"./IntEncoder.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"yU5HftgQ+HW+Cj5EoqioxXCPi1U=","exportNames":["*"],"imports":1}},{"name":"../../errors/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":55,"index":102}}],"key":"qHglNs3UH2C2wT8WJZubASIXHQ0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"DateEncoder\", {\n    enumerable: true,\n    get: function () {\n      return DateEncoder;\n    }\n  });\n  var _IntEncoderJs = require(_dependencyMap[0], \"./IntEncoder.js\");\n  var _errorsIndexJs = require(_dependencyMap[1], \"../../errors/index.js\");\n  class DateEncoder {\n    static encode(value, numBits) {\n      return _IntEncoderJs.IntEncoder.encode(Math.round(value.getTime() / 100), numBits);\n    }\n    static decode(value, numBits) {\n      if (numBits !== value.length) {\n        throw new _errorsIndexJs.DecodingError('invalid bit length');\n      }\n      const date = new Date();\n      date.setTime(_IntEncoderJs.IntEncoder.decode(value, numBits) * 100);\n      return date;\n    }\n  }\n});","lineCount":28,"map":[[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"enumerable"],[8,14,3,0],[9,4,3,0,"get"],[9,7,3,0],[9,18,3,0,"get"],[9,19,3,0],[10,6,3,0],[10,13,3,0,"DateEncoder"],[10,24,3,0],[11,4,3,0],[12,2,3,0],[13,2,1,0],[13,6,1,0,"_IntEncoderJs"],[13,19,1,0],[13,22,1,0,"require"],[13,29,1,0],[13,30,1,0,"_dependencyMap"],[13,44,1,0],[14,2,2,0],[14,6,2,0,"_errorsIndexJs"],[14,20,2,0],[14,23,2,0,"require"],[14,30,2,0],[14,31,2,0,"_dependencyMap"],[14,45,2,0],[15,2,3,7],[15,8,3,13,"DateEncoder"],[15,19,3,24],[15,20,3,25],[16,4,4,4],[16,11,4,11,"encode"],[16,17,4,17,"encode"],[16,18,4,18,"value"],[16,23,4,23],[16,25,4,25,"numBits"],[16,32,4,32],[16,34,4,34],[17,6,5,8],[17,13,5,15,"IntEncoder"],[17,26,5,25],[17,27,5,25,"IntEncoder"],[17,37,5,25],[17,38,5,26,"encode"],[17,44,5,32],[17,45,5,33,"Math"],[17,49,5,37],[17,50,5,38,"round"],[17,55,5,43],[17,56,5,44,"value"],[17,61,5,49],[17,62,5,50,"getTime"],[17,69,5,57],[17,70,5,58],[17,71,5,59],[17,74,5,62],[17,77,5,65],[17,78,5,66],[17,80,5,68,"numBits"],[17,87,5,75],[17,88,5,76],[18,4,6,4],[19,4,7,4],[19,11,7,11,"decode"],[19,17,7,17,"decode"],[19,18,7,18,"value"],[19,23,7,23],[19,25,7,25,"numBits"],[19,32,7,32],[19,34,7,34],[20,6,8,8],[20,10,8,12,"numBits"],[20,17,8,19],[20,22,8,24,"value"],[20,27,8,29],[20,28,8,30,"length"],[20,34,8,36],[20,36,8,38],[21,8,9,12],[21,14,9,18],[21,18,9,22,"DecodingError"],[21,32,9,35],[21,33,9,35,"DecodingError"],[21,46,9,35],[21,47,9,36],[21,67,9,56],[21,68,9,57],[22,6,10,8],[23,6,11,8],[23,12,11,14,"date"],[23,16,11,18],[23,19,11,21],[23,23,11,25,"Date"],[23,27,11,29],[23,28,11,30],[23,29,11,31],[24,6,12,8,"date"],[24,10,12,12],[24,11,12,13,"setTime"],[24,18,12,20],[24,19,12,21,"IntEncoder"],[24,32,12,31],[24,33,12,31,"IntEncoder"],[24,43,12,31],[24,44,12,32,"decode"],[24,50,12,38],[24,51,12,39,"value"],[24,56,12,44],[24,58,12,46,"numBits"],[24,65,12,53],[24,66,12,54],[24,69,12,57],[24,72,12,60],[24,73,12,61],[25,6,13,8],[25,13,13,15,"date"],[25,17,13,19],[26,4,14,4],[27,2,15,0],[28,0,15,1],[28,3]],"functionMap":{"names":["<global>","DateEncoder","encode","decode"],"mappings":"AAA;OCE;ICC;KDE;IEC;KFO;CDC"},"hasCjsExports":false},"type":"js/module"}]}