{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"Json\", {\n    enumerable: true,\n    get: function () {\n      return Json;\n    }\n  });\n  class Json {\n    static absCall(url, body, sendCookies, timeout) {\n      return new Promise((resolve, reject) => {\n        const req = new XMLHttpRequest();\n        const onLoad = () => {\n          // is the response done\n          if (req.readyState == XMLHttpRequest.DONE) {\n            /**\n             * For our purposes if it's not a 200 range response, then it's a\n             * failure.\n             */\n            if (req.status >= 200 && req.status < 300) {\n              let response = req.response;\n              if (typeof response === 'string') {\n                try {\n                  response = JSON.parse(response);\n                } catch (e) {}\n              }\n              resolve(response);\n            } else {\n              reject(new Error(`HTTP Status: ${req.status} response type: ${req.responseType}`));\n            }\n          }\n        };\n        const onError = () => {\n          reject(new Error('error'));\n        };\n        const onAbort = () => {\n          reject(new Error('aborted'));\n        };\n        const onTimeout = () => {\n          reject(new Error('Timeout ' + timeout + 'ms ' + url));\n        };\n        req.withCredentials = sendCookies;\n        req.addEventListener('load', onLoad);\n        req.addEventListener('error', onError);\n        req.addEventListener('abort', onAbort);\n        if (body === null) {\n          req.open('GET', url, true);\n        } else {\n          req.open('POST', url, true);\n        }\n        req.responseType = 'json';\n        // IE has a problem if this is before the open\n        req.timeout = timeout;\n        req.ontimeout = onTimeout;\n        req.send(body);\n      });\n    }\n    /**\n     * @static\n     * @param {string} url - full path to POST to\n     * @param {object} body - JSON object to post\n     * @param {boolean} sendCookies - Whether or not to send the XMLHttpRequest with credentials or not\n     * @param {number} [timeout] - optional timeout in milliseconds\n     * @return {Promise<object>} - if the server responds the response will be returned here\n     */\n    static post(url, body, sendCookies = false, timeout = 0) {\n      return this.absCall(url, JSON.stringify(body), sendCookies, timeout);\n    }\n    /**\n     * @static\n     * @param {string} url - full path to the json\n     * @param {boolean} sendCookies - Whether or not to send the XMLHttpRequest with credentials or not\n     * @param {number} [timeout] - optional timeout in milliseconds\n     * @return {Promise<object>} - resolves with parsed JSON\n     */\n    static fetch(url, sendCookies = false, timeout = 0) {\n      return this.absCall(url, null, sendCookies, timeout);\n    }\n  }\n});","lineCount":84,"map":[[7,2,1,0,"Object"],[7,8,1,0],[7,9,1,0,"defineProperty"],[7,23,1,0],[7,24,1,0,"exports"],[7,31,1,0],[8,4,1,0,"enumerable"],[8,14,1,0],[9,4,1,0,"get"],[9,7,1,0],[9,18,1,0,"get"],[9,19,1,0],[10,6,1,0],[10,13,1,0,"Json"],[10,17,1,0],[11,4,1,0],[12,2,1,0],[13,2,1,7],[13,8,1,13,"Json"],[13,12,1,17],[13,13,1,18],[14,4,2,4],[14,11,2,11,"absCall"],[14,18,2,18,"absCall"],[14,19,2,19,"url"],[14,22,2,22],[14,24,2,24,"body"],[14,28,2,28],[14,30,2,30,"sendCookies"],[14,41,2,41],[14,43,2,43,"timeout"],[14,50,2,50],[14,52,2,52],[15,6,3,8],[15,13,3,15],[15,17,3,19,"Promise"],[15,24,3,26],[15,25,3,27],[15,26,3,28,"resolve"],[15,33,3,35],[15,35,3,37,"reject"],[15,41,3,43],[15,46,3,48],[16,8,4,12],[16,14,4,18,"req"],[16,17,4,21],[16,20,4,24],[16,24,4,28,"XMLHttpRequest"],[16,38,4,42],[16,39,4,43],[16,40,4,44],[17,8,5,12],[17,14,5,18,"onLoad"],[17,20,5,24],[17,23,5,27,"onLoad"],[17,24,5,27],[17,29,5,33],[18,10,6,16],[19,10,7,16],[19,14,7,20,"req"],[19,17,7,23],[19,18,7,24,"readyState"],[19,28,7,34],[19,32,7,38,"XMLHttpRequest"],[19,46,7,52],[19,47,7,53,"DONE"],[19,51,7,57],[19,53,7,59],[20,12,8,20],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,12,12,20],[24,16,12,24,"req"],[24,19,12,27],[24,20,12,28,"status"],[24,26,12,34],[24,30,12,38],[24,33,12,41],[24,37,12,45,"req"],[24,40,12,48],[24,41,12,49,"status"],[24,47,12,55],[24,50,12,58],[24,53,12,61],[24,55,12,63],[25,14,13,24],[25,18,13,28,"response"],[25,26,13,36],[25,29,13,39,"req"],[25,32,13,42],[25,33,13,43,"response"],[25,41,13,51],[26,14,14,24],[26,18,14,28],[26,25,14,35,"response"],[26,33,14,43],[26,38,14,48],[26,46,14,56],[26,48,14,58],[27,16,15,28],[27,20,15,32],[28,18,16,32,"response"],[28,26,16,40],[28,29,16,43,"JSON"],[28,33,16,47],[28,34,16,48,"parse"],[28,39,16,53],[28,40,16,54,"response"],[28,48,16,62],[28,49,16,63],[29,16,17,28],[29,17,17,29],[29,18,18,28],[29,25,18,35,"e"],[29,26,18,36],[29,28,18,38],[29,29,18,40],[30,14,19,24],[31,14,20,24,"resolve"],[31,21,20,31],[31,22,20,32,"response"],[31,30,20,40],[31,31,20,41],[32,12,21,20],[32,13,21,21],[32,19,22,25],[33,14,23,24,"reject"],[33,20,23,30],[33,21,23,31],[33,25,23,35,"Error"],[33,30,23,40],[33,31,23,41],[33,47,23,57,"req"],[33,50,23,60],[33,51,23,61,"status"],[33,57,23,67],[33,76,23,86,"req"],[33,79,23,89],[33,80,23,90,"responseType"],[33,92,23,102],[33,94,23,104],[33,95,23,105],[33,96,23,106],[34,12,24,20],[35,10,25,16],[36,8,26,12],[36,9,26,13],[37,8,27,12],[37,14,27,18,"onError"],[37,21,27,25],[37,24,27,28,"onError"],[37,25,27,28],[37,30,27,34],[38,10,28,16,"reject"],[38,16,28,22],[38,17,28,23],[38,21,28,27,"Error"],[38,26,28,32],[38,27,28,33],[38,34,28,40],[38,35,28,41],[38,36,28,42],[39,8,29,12],[39,9,29,13],[40,8,30,12],[40,14,30,18,"onAbort"],[40,21,30,25],[40,24,30,28,"onAbort"],[40,25,30,28],[40,30,30,34],[41,10,31,16,"reject"],[41,16,31,22],[41,17,31,23],[41,21,31,27,"Error"],[41,26,31,32],[41,27,31,33],[41,36,31,42],[41,37,31,43],[41,38,31,44],[42,8,32,12],[42,9,32,13],[43,8,33,12],[43,14,33,18,"onTimeout"],[43,23,33,27],[43,26,33,30,"onTimeout"],[43,27,33,30],[43,32,33,36],[44,10,34,16,"reject"],[44,16,34,22],[44,17,34,23],[44,21,34,27,"Error"],[44,26,34,32],[44,27,34,33],[44,37,34,43],[44,40,34,46,"timeout"],[44,47,34,53],[44,50,34,56],[44,55,34,61],[44,58,34,64,"url"],[44,61,34,67],[44,62,34,68],[44,63,34,69],[45,8,35,12],[45,9,35,13],[46,8,36,12,"req"],[46,11,36,15],[46,12,36,16,"withCredentials"],[46,27,36,31],[46,30,36,34,"sendCookies"],[46,41,36,45],[47,8,37,12,"req"],[47,11,37,15],[47,12,37,16,"addEventListener"],[47,28,37,32],[47,29,37,33],[47,35,37,39],[47,37,37,41,"onLoad"],[47,43,37,47],[47,44,37,48],[48,8,38,12,"req"],[48,11,38,15],[48,12,38,16,"addEventListener"],[48,28,38,32],[48,29,38,33],[48,36,38,40],[48,38,38,42,"onError"],[48,45,38,49],[48,46,38,50],[49,8,39,12,"req"],[49,11,39,15],[49,12,39,16,"addEventListener"],[49,28,39,32],[49,29,39,33],[49,36,39,40],[49,38,39,42,"onAbort"],[49,45,39,49],[49,46,39,50],[50,8,40,12],[50,12,40,16,"body"],[50,16,40,20],[50,21,40,25],[50,25,40,29],[50,27,40,31],[51,10,41,16,"req"],[51,13,41,19],[51,14,41,20,"open"],[51,18,41,24],[51,19,41,25],[51,24,41,30],[51,26,41,32,"url"],[51,29,41,35],[51,31,41,37],[51,35,41,41],[51,36,41,42],[52,8,42,12],[52,9,42,13],[52,15,43,17],[53,10,44,16,"req"],[53,13,44,19],[53,14,44,20,"open"],[53,18,44,24],[53,19,44,25],[53,25,44,31],[53,27,44,33,"url"],[53,30,44,36],[53,32,44,38],[53,36,44,42],[53,37,44,43],[54,8,45,12],[55,8,46,12,"req"],[55,11,46,15],[55,12,46,16,"responseType"],[55,24,46,28],[55,27,46,31],[55,33,46,37],[56,8,47,12],[57,8,48,12,"req"],[57,11,48,15],[57,12,48,16,"timeout"],[57,19,48,23],[57,22,48,26,"timeout"],[57,29,48,33],[58,8,49,12,"req"],[58,11,49,15],[58,12,49,16,"ontimeout"],[58,21,49,25],[58,24,49,28,"onTimeout"],[58,33,49,37],[59,8,50,12,"req"],[59,11,50,15],[59,12,50,16,"send"],[59,16,50,20],[59,17,50,21,"body"],[59,21,50,25],[59,22,50,26],[60,6,51,8],[60,7,51,9],[60,8,51,10],[61,4,52,4],[62,4,53,4],[63,0,54,0],[64,0,55,0],[65,0,56,0],[66,0,57,0],[67,0,58,0],[68,0,59,0],[69,0,60,0],[70,4,61,4],[70,11,61,11,"post"],[70,15,61,15,"post"],[70,16,61,16,"url"],[70,19,61,19],[70,21,61,21,"body"],[70,25,61,25],[70,27,61,27,"sendCookies"],[70,38,61,38],[70,41,61,41],[70,46,61,46],[70,48,61,48,"timeout"],[70,55,61,55],[70,58,61,58],[70,59,61,59],[70,61,61,61],[71,6,62,8],[71,13,62,15],[71,17,62,19],[71,18,62,20,"absCall"],[71,25,62,27],[71,26,62,28,"url"],[71,29,62,31],[71,31,62,33,"JSON"],[71,35,62,37],[71,36,62,38,"stringify"],[71,45,62,47],[71,46,62,48,"body"],[71,50,62,52],[71,51,62,53],[71,53,62,55,"sendCookies"],[71,64,62,66],[71,66,62,68,"timeout"],[71,73,62,75],[71,74,62,76],[72,4,63,4],[73,4,64,4],[74,0,65,0],[75,0,66,0],[76,0,67,0],[77,0,68,0],[78,0,69,0],[79,0,70,0],[80,4,71,4],[80,11,71,11,"fetch"],[80,16,71,16,"fetch"],[80,17,71,17,"url"],[80,20,71,20],[80,22,71,22,"sendCookies"],[80,33,71,33],[80,36,71,36],[80,41,71,41],[80,43,71,43,"timeout"],[80,50,71,50],[80,53,71,53],[80,54,71,54],[80,56,71,56],[81,6,72,8],[81,13,72,15],[81,17,72,19],[81,18,72,20,"absCall"],[81,25,72,27],[81,26,72,28,"url"],[81,29,72,31],[81,31,72,33],[81,35,72,37],[81,37,72,39,"sendCookies"],[81,48,72,50],[81,50,72,52,"timeout"],[81,57,72,59],[81,58,72,60],[82,4,73,4],[83,2,74,0],[84,0,74,1],[84,3]],"functionMap":{"names":["<global>","Json","absCall","Promise$argument_0","onLoad","onError","onAbort","onTimeout","post","fetch"],"mappings":"AAA,OC;ICC;2BCC;2BCE;aDqB;4BEC;aFE;4BGC;aHE;8BIC;aJE;SDgB;KDC;IOS;KPE;IQQ;KRE;CDC"},"hasCjsExports":false},"type":"js/module"}]}