{"dependencies":[{"name":"./Cloneable.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"QoLOY+/9jV9sSxj1Kko2D5oISuc=","exportNames":["*"],"imports":1}},{"name":"./errors/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":44},"end":{"line":2,"column":45,"index":89}}],"key":"fsDEYTA80bbwlpBMEpq0GTnJ+qc=","exportNames":["*"],"imports":1}},{"name":"./Json.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":90},"end":{"line":3,"column":33,"index":123}}],"key":"WsQHFV/WPI8DSiWNrJC/7TJTtxg=","exportNames":["*"],"imports":1}},{"name":"./model/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":124},"end":{"line":4,"column":52,"index":176}}],"key":"f1espa074SpSruazfy8ml6aS0J8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"GVL\", {\n    enumerable: true,\n    get: function () {\n      return GVL;\n    }\n  });\n  var _CloneableJs = require(_dependencyMap[0], \"./Cloneable.js\");\n  var _errorsIndexJs = require(_dependencyMap[1], \"./errors/index.js\");\n  var _JsonJs = require(_dependencyMap[2], \"./Json.js\");\n  var _modelIndexJs = require(_dependencyMap[3], \"./model/index.js\");\n  /**\n   * class with utilities for managing the global vendor list.  Will use JSON to\n   * fetch the vendor list from specified url and will serialize it into this\n   * object and provide accessors.  Provides ways to group vendors on the list by\n   * purpose and feature.\n   */\n  class GVL extends _CloneableJs.Cloneable {\n    static LANGUAGE_CACHE = new Map();\n    static CACHE = new Map();\n    static LATEST_CACHE_KEY = 0;\n    static DEFAULT_LANGUAGE = 'EN';\n    /**\n     * Set of available consent languages published by the IAB\n     */\n    static consentLanguages = new _modelIndexJs.ConsentLanguages();\n    /**\n     * baseUrl - Entities using the vendor-list.json are required by the iab to\n     * host their own copy of it to reduce the load on the iab's infrastructure\n     * so a 'base' url must be set to be put together with the versioning scheme\n     * of the filenames.\n     *\n     * @static\n     * @param {string} url - the base url to load the vendor-list.json from.  This is\n     * broken out from the filename because it follows a different scheme for\n     * latest file vs versioned files.\n     *\n     * @throws {GVLError} - If the url is http[s]://vendorlist.consensu.org/...\n     * this will throw an error.  IAB Europe requires that that CMPs and Vendors\n     * cache their own copies of the GVL to minimize load on their\n     * infrastructure.  For more information regarding caching of the\n     * vendor-list.json, please see [the TCF documentation on 'Caching the Global\n     * Vendor List'\n     * ](https://github.com/InteractiveAdvertisingBureau/GDPR-Transparency-and-Consent-Framework/blob/master/TCFv2/IAB%20Tech%20Lab%20-%20Consent%20string%20and%20vendor%20list%20formats%20v2.md#caching-the-global-vendor-list)\n     */\n    static set baseUrl(url) {\n      const notValid = /^https?:\\/\\/vendorlist\\.consensu\\.org\\//;\n      if (notValid.test(url)) {\n        throw new _errorsIndexJs.GVLError('Invalid baseUrl!  You may not pull directly from vendorlist.consensu.org and must provide your own cache');\n      }\n      // if a trailing slash was forgotten\n      if (url.length > 0 && url[url.length - 1] !== '/') {\n        url += '/';\n      }\n      this.baseUrl_ = url;\n    }\n    /**\n     * baseUrl - Entities using the vendor-list.json are required by the iab to\n     * host their own copy of it to reduce the load on the iab's infrastructure\n     * so a 'base' url must be set to be put together with the versioning scheme\n     * of the filenames.\n     *\n     * @static\n     * @return {string} - returns the previously set baseUrl, the default is\n     * `undefined`\n     */\n    static get baseUrl() {\n      return this.baseUrl_;\n    }\n    /**\n     * @static\n     * @param {string} - the latest is assumed to be vendor-list.json because\n     * that is what the iab uses, but it could be different... if you want\n     */\n    static latestFilename = 'vendor-list.json';\n    /**\n     * @static\n     * @param {string} - the versioned name is assumed to be\n     * vendor-list-v[VERSION].json where [VERSION] will be replaced with the\n     * specified version.  But it could be different... if you want just make\n     * sure to include the [VERSION] macro if you have a numbering scheme, it's a\n     * simple string substitution.\n     *\n     * eg.\n     * ```javascript\n     * GVL.baseUrl = \"http://www.mydomain.com/iabcmp/\";\n     * GVL.versionedFilename = \"vendorlist?getVersion=[VERSION]\";\n     * ```\n     */\n    static versionedFilename = 'archives/vendor-list-v[VERSION].json';\n    /**\n     * @param {string} - Translations of the names and descriptions for Purposes,\n     * Special Purposes, Features, and Special Features to non-English languages\n     * are contained in a file where attributes containing English content\n     * (except vendor declaration information) are translated.  The iab publishes\n     * one following the scheme below where the LANG is the iso639-1 language\n     * code.  For a list of available translations\n     * [please go here](https://register.consensu.org/Translation).\n     *\n     * eg.\n     * ```javascript\n     * GVL.baseUrl = \"http://www.mydomain.com/iabcmp/\";\n     * GVL.languageFilename = \"purposes?getPurposes=[LANG]\";\n     * ```\n     */\n    static languageFilename = 'purposes-[LANG].json';\n    /**\n     * @param {Promise} resolved when this GVL object is populated with the data\n     * or rejected if there is an error.\n     */\n\n    /**\n     * @param {number} gvlSpecificationVersion - schema version for the GVL that is used\n     */\n\n    /**\n     * @param {number} incremented with each published file change\n     */\n\n    /**\n     * @param {number} tcfPolicyVersion - The TCF MO will increment this value\n     * whenever a GVL change (such as adding a new Purpose or Feature or a change\n     * in Purpose wording) legally invalidates existing TC Strings and requires\n     * CMPs to re-establish transparency and consent from users. If the policy\n     * version number in the latest GVL is different from the value in your TC\n     * String, then you need to re-establish transparency and consent for that\n     * user. A version 1 format TC String is considered to have a version value\n     * of 1.\n     */\n\n    /**\n     * @param {string | Date} lastUpdated - the date in which the vendor list\n     * json file  was last updated.\n     */\n\n    /**\n     * @param {IntMap<Purpose>} a collection of [[Purpose]]s\n     */\n\n    /**\n     * @param {IntMap<Purpose>} a collection of [[Purpose]]s\n     */\n\n    /**\n     * @param {IntMap<Feature>} a collection of [[Feature]]s\n     */\n\n    /**\n     * @param {IntMap<Feature>} a collection of [[Feature]]s\n     */\n\n    /**\n     * @param {boolean} internal reference of when the GVL is ready to be used\n     */\n    isReady_ = false;\n    /**\n     * @param {IntMap<Vendor>} a collection of [[Vendor]]s\n     */\n\n    /**\n     * @param {IntMap<Vendor>} a collection of [[Vendor]]. Used as a backup if a whitelist is sets\n     */\n\n    /**\n     * @param {ByPurposeVendorMap} vendors by purpose\n     */\n\n    /**\n     * @param {IDSetMap} vendors by special purpose\n     */\n\n    /**\n     * @param {IDSetMap} vendors by feature\n     */\n\n    /**\n     * @param {IDSetMap} vendors by special feature\n     */\n\n    /**\n     * @param {IntMap<Stack>} a collection of [[Stack]]s\n     */\n\n    isLatest = false;\n    /**\n     * @param {VersionOrVendorList} [versionOrVendorList] - can be either a\n     * [[VendorList]] object or a version number represented as a string or\n     * number to download.  If nothing is passed the latest version of the GVL\n     * will be loaded\n     */\n    constructor(versionOrVendorList) {\n      super();\n      /**\n       * should have been configured before and instance was created and will\n       * persist through the app\n       */\n      let url = GVL.baseUrl;\n      this.lang_ = GVL.DEFAULT_LANGUAGE;\n      if (this.isVendorList(versionOrVendorList)) {\n        this.populate(versionOrVendorList);\n        this.readyPromise = Promise.resolve();\n      } else {\n        if (!url) {\n          throw new _errorsIndexJs.GVLError('must specify GVL.baseUrl before loading GVL json');\n        }\n        if (versionOrVendorList > 0) {\n          const version = versionOrVendorList;\n          if (GVL.CACHE.has(version)) {\n            this.populate(GVL.CACHE.get(version));\n            this.readyPromise = Promise.resolve();\n          } else {\n            // load version specified\n            url += GVL.versionedFilename.replace('[VERSION]', String(version));\n            this.readyPromise = this.fetchJson(url);\n          }\n        } else {\n          /**\n           * whatever it is (or isn't)... it doesn't matter we'll just get the\n           * latest. In this case we may have cached the latest version at key 0.\n           * If we have then we'll just use that instead of making a request.\n           * Otherwise we'll have to load it (and then we'll cache it for next\n           * time)\n           */\n          if (GVL.CACHE.has(GVL.LATEST_CACHE_KEY)) {\n            this.populate(GVL.CACHE.get(GVL.LATEST_CACHE_KEY));\n            this.readyPromise = Promise.resolve();\n          } else {\n            this.isLatest = true;\n            this.readyPromise = this.fetchJson(url + GVL.latestFilename);\n          }\n        }\n      }\n    }\n    /**\n     * emptyLanguageCache\n     *\n     * @param {string} [lang] - Optional ISO 639-1 langauge code to remove from\n     * the cache.  Should be one of the languages in GVL.consentLanguages set.\n     * If not then the whole cache will be deleted.\n     * @return {boolean} - true if anything was deleted from the cache\n     */\n    static emptyLanguageCache(lang) {\n      let retr = false;\n      if (lang === undefined && GVL.LANGUAGE_CACHE.size > 0) {\n        GVL.LANGUAGE_CACHE = new Map();\n        retr = true;\n      } else if (typeof lang === 'string' && this.consentLanguages.has(lang.toUpperCase())) {\n        GVL.LANGUAGE_CACHE.delete(lang.toUpperCase());\n        retr = true;\n      }\n      return retr;\n    }\n    /**\n     * emptyCache\n     *\n     * @param {number} [vendorListVersion] - version of the vendor list to delete\n     * from the cache.  If none is specified then the whole cache is deleted.\n     * @return {boolean} - true if anything was deleted from the cache\n     */\n    static emptyCache(vendorListVersion) {\n      let retr = false;\n      if (Number.isInteger(vendorListVersion) && vendorListVersion >= 0) {\n        GVL.CACHE.delete(vendorListVersion);\n        retr = true;\n      } else if (vendorListVersion === undefined) {\n        GVL.CACHE = new Map();\n        retr = true;\n      }\n      return retr;\n    }\n    cacheLanguage() {\n      if (!GVL.LANGUAGE_CACHE.has(this.lang_)) {\n        GVL.LANGUAGE_CACHE.set(this.lang_, {\n          purposes: this.purposes,\n          specialPurposes: this.specialPurposes,\n          features: this.features,\n          specialFeatures: this.specialFeatures,\n          stacks: this.stacks\n        });\n      }\n    }\n    async fetchJson(url) {\n      try {\n        this.populate(await _JsonJs.Json.fetch(url));\n      } catch (err) {\n        throw new _errorsIndexJs.GVLError(err.message);\n      }\n    }\n    /**\n     * getJson - Method for getting the JSON that was downloaded to created this\n     * `GVL` object\n     *\n     * @return {VendorList} - The basic JSON structure without the extra\n     * functionality and methods of this class.\n     */\n    getJson() {\n      return JSON.parse(JSON.stringify({\n        gvlSpecificationVersion: this.gvlSpecificationVersion,\n        vendorListVersion: this.vendorListVersion,\n        tcfPolicyVersion: this.tcfPolicyVersion,\n        lastUpdated: this.lastUpdated,\n        purposes: this.purposes,\n        specialPurposes: this.specialPurposes,\n        features: this.features,\n        specialFeatures: this.specialFeatures,\n        stacks: this.stacks,\n        vendors: this.fullVendorList\n      }));\n    }\n    /**\n     * changeLanguage - retrieves the purpose language translation and sets the\n     * internal language variable\n     *\n     * @param {string} lang - ISO 639-1 langauge code to change language to\n     * @return {Promise<void | GVLError>} - returns the `readyPromise` and\n     * resolves when this GVL is populated with the data from the language file.\n     */\n    async changeLanguage(lang) {\n      const langUpper = lang.toUpperCase();\n      if (GVL.consentLanguages.has(langUpper)) {\n        if (langUpper !== this.lang_) {\n          this.lang_ = langUpper;\n          if (GVL.LANGUAGE_CACHE.has(langUpper)) {\n            const cached = GVL.LANGUAGE_CACHE.get(langUpper);\n            for (const prop in cached) {\n              if (cached.hasOwnProperty(prop)) {\n                this[prop] = cached[prop];\n              }\n            }\n          } else {\n            // load Language specified\n            const url = GVL.baseUrl + GVL.languageFilename.replace('[LANG]', lang);\n            try {\n              await this.fetchJson(url);\n              this.cacheLanguage();\n            } catch (err) {\n              throw new _errorsIndexJs.GVLError('unable to load language: ' + err.message);\n            }\n          }\n        }\n      } else {\n        throw new _errorsIndexJs.GVLError(`unsupported language ${lang}`);\n      }\n    }\n    get language() {\n      return this.lang_;\n    }\n    isVendorList(gvlObject) {\n      return gvlObject !== undefined && gvlObject.vendors !== undefined;\n    }\n    populate(gvlObject) {\n      /**\n       * these are populated regardless of whether it's a Declarations file or\n       * a VendorList\n       */\n      this.purposes = gvlObject.purposes;\n      this.specialPurposes = gvlObject.specialPurposes;\n      this.features = gvlObject.features;\n      this.specialFeatures = gvlObject.specialFeatures;\n      this.stacks = gvlObject.stacks;\n      if (this.isVendorList(gvlObject)) {\n        this.gvlSpecificationVersion = gvlObject.gvlSpecificationVersion;\n        this.tcfPolicyVersion = gvlObject.tcfPolicyVersion;\n        this.vendorListVersion = gvlObject.vendorListVersion;\n        this.lastUpdated = gvlObject.lastUpdated;\n        if (typeof this.lastUpdated === 'string') {\n          this.lastUpdated = new Date(this.lastUpdated);\n        }\n        this.vendors_ = gvlObject.vendors;\n        this.fullVendorList = gvlObject.vendors;\n        this.mapVendors();\n        this.isReady_ = true;\n        if (this.isLatest) {\n          /**\n           * If the \"LATEST\" was requested then this flag will be set to true.\n           * In that case we'll cache the GVL at the special key\n           */\n          GVL.CACHE.set(GVL.LATEST_CACHE_KEY, this.getJson());\n        }\n        /**\n         * Whether or not it's the \"LATEST\" we'll cache the gvl at the version it\n         * is declared to be (if it's not already). to avoid downloading it again\n         * in the future.\n         */\n        if (!GVL.CACHE.has(this.vendorListVersion)) {\n          GVL.CACHE.set(this.vendorListVersion, this.getJson());\n        }\n      }\n      this.cacheLanguage();\n    }\n    mapVendors(vendorIds) {\n      // create new instances of the maps\n      this.byPurposeVendorMap = {};\n      this.bySpecialPurposeVendorMap = {};\n      this.byFeatureVendorMap = {};\n      this.bySpecialFeatureVendorMap = {};\n      // initializes data structure for purpose map\n      Object.keys(this.purposes).forEach(purposeId => {\n        this.byPurposeVendorMap[purposeId] = {\n          legInt: new Set(),\n          consent: new Set(),\n          flexible: new Set()\n        };\n      });\n      // initializes data structure for special purpose map\n      Object.keys(this.specialPurposes).forEach(purposeId => {\n        this.bySpecialPurposeVendorMap[purposeId] = new Set();\n      });\n      // initializes data structure for feature map\n      Object.keys(this.features).forEach(featureId => {\n        this.byFeatureVendorMap[featureId] = new Set();\n      });\n      // initializes data structure for feature map\n      Object.keys(this.specialFeatures).forEach(featureId => {\n        this.bySpecialFeatureVendorMap[featureId] = new Set();\n      });\n      if (!Array.isArray(vendorIds)) {\n        vendorIds = Object.keys(this.fullVendorList).map(vId => +vId);\n      }\n      this.vendorIds = new Set(vendorIds);\n      // assigns vendor ids to their respective maps\n      this.vendors_ = vendorIds.reduce((vendors, vendorId) => {\n        const vendor = this.vendors_[String(vendorId)];\n        if (vendor && vendor.deletedDate === undefined) {\n          vendor.purposes.forEach(purposeId => {\n            const purpGroup = this.byPurposeVendorMap[String(purposeId)];\n            purpGroup.consent.add(vendorId);\n          });\n          vendor.specialPurposes.forEach(purposeId => {\n            this.bySpecialPurposeVendorMap[String(purposeId)].add(vendorId);\n          });\n          vendor.legIntPurposes.forEach(purposeId => {\n            this.byPurposeVendorMap[String(purposeId)].legInt.add(vendorId);\n          });\n          // could not be there\n          if (vendor.flexiblePurposes) {\n            vendor.flexiblePurposes.forEach(purposeId => {\n              this.byPurposeVendorMap[String(purposeId)].flexible.add(vendorId);\n            });\n          }\n          vendor.features.forEach(featureId => {\n            this.byFeatureVendorMap[String(featureId)].add(vendorId);\n          });\n          vendor.specialFeatures.forEach(featureId => {\n            this.bySpecialFeatureVendorMap[String(featureId)].add(vendorId);\n          });\n          vendors[vendorId] = vendor;\n        }\n        return vendors;\n      }, {});\n    }\n    getFilteredVendors(purposeOrFeature, id, subType, special) {\n      const properPurposeOrFeature = purposeOrFeature.charAt(0).toUpperCase() + purposeOrFeature.slice(1);\n      let vendorSet;\n      const retr = {};\n      if (purposeOrFeature === 'purpose' && subType) {\n        vendorSet = this['by' + properPurposeOrFeature + 'VendorMap'][String(id)][subType];\n      } else {\n        vendorSet = this['by' + (special ? 'Special' : '') + properPurposeOrFeature + 'VendorMap'][String(id)];\n      }\n      vendorSet.forEach(vendorId => {\n        retr[String(vendorId)] = this.vendors[String(vendorId)];\n      });\n      return retr;\n    }\n    /**\n     * getVendorsWithConsentPurpose\n     *\n     * @param {number} purposeId\n     * @return {IntMap<Vendor>} - list of vendors that have declared the consent purpose id\n     */\n    getVendorsWithConsentPurpose(purposeId) {\n      return this.getFilteredVendors('purpose', purposeId, 'consent');\n    }\n    /**\n     * getVendorsWithLegIntPurpose\n     *\n     * @param {number} purposeId\n     * @return {IntMap<Vendor>} - list of vendors that have declared the legInt (Legitimate Interest) purpose id\n     */\n    getVendorsWithLegIntPurpose(purposeId) {\n      return this.getFilteredVendors('purpose', purposeId, 'legInt');\n    }\n    /**\n     * getVendorsWithFlexiblePurpose\n     *\n     * @param {number} purposeId\n     * @return {IntMap<Vendor>} - list of vendors that have declared the flexible purpose id\n     */\n    getVendorsWithFlexiblePurpose(purposeId) {\n      return this.getFilteredVendors('purpose', purposeId, 'flexible');\n    }\n    /**\n     * getVendorsWithSpecialPurpose\n     *\n     * @param {number} specialPurposeId\n     * @return {IntMap<Vendor>} - list of vendors that have declared the special purpose id\n     */\n    getVendorsWithSpecialPurpose(specialPurposeId) {\n      return this.getFilteredVendors('purpose', specialPurposeId, undefined, true);\n    }\n    /**\n     * getVendorsWithFeature\n     *\n     * @param {number} featureId\n     * @return {IntMap<Vendor>} - list of vendors that have declared the feature id\n     */\n    getVendorsWithFeature(featureId) {\n      return this.getFilteredVendors('feature', featureId);\n    }\n    /**\n     * getVendorsWithSpecialFeature\n     *\n     * @param {number} specialFeatureId\n     * @return {IntMap<Vendor>} - list of vendors that have declared the special feature id\n     */\n    getVendorsWithSpecialFeature(specialFeatureId) {\n      return this.getFilteredVendors('feature', specialFeatureId, undefined, true);\n    }\n    /**\n     * vendors\n     *\n     * @return {IntMap<Vendor>} - the list of vendors as it would on the JSON file\n     * except if `narrowVendorsTo` was called, it would be that narrowed list\n     */\n    get vendors() {\n      return this.vendors_;\n    }\n    /**\n     * narrowVendorsTo - narrows vendors represented in this GVL to the list of ids passed in\n     *\n     * @param {number[]} vendorIds - list of ids to narrow this GVL to\n     * @return {void}\n     */\n    narrowVendorsTo(vendorIds) {\n      this.mapVendors(vendorIds);\n    }\n    /**\n     * isReady - Whether or not this instance is ready to be used.  This will be\n     * immediately and synchronously true if a vendorlist object is passed into\n     * the constructor or once the JSON vendorllist is retrieved.\n     *\n     * @return {boolean} whether or not the instance is ready to be interacted\n     * with and all the data is populated\n     */\n    get isReady() {\n      return this.isReady_;\n    }\n    /**\n     * clone - overrides base `clone()` method since GVL is a special class that\n     * represents a JSON structure with some additional functionality.\n     *\n     * @return {GVL}\n     */\n    clone() {\n      const result = new GVL(this.getJson());\n      /*\n       * If the current language of the GVL is not the default language, we set the language of\n       * the clone to the current language since a new GVL is always created with the default\n       * language. */\n      if (this.lang_ !== GVL.DEFAULT_LANGUAGE) {\n        /*\n         * Since the GVL language was changed, this means that an asynchronous changeLanguage\n         * call was made prior to cloning the GVL.  The new language specified has been cached\n         * by the GVL and this changeLanguage call made as a part of cloning the GVL will be\n         * synchronous. The code will look for the language definitions in the cache instead\n         * of creating a http request. */\n        result.changeLanguage(this.lang_);\n      }\n      return result;\n    }\n    static isInstanceOf(questionableInstance) {\n      const isSo = typeof questionableInstance === 'object';\n      return isSo && typeof questionableInstance.narrowVendorsTo === 'function';\n    }\n  }\n});","lineCount":582,"map":[[7,2,11,0,"Object"],[7,8,11,0],[7,9,11,0,"defineProperty"],[7,23,11,0],[7,24,11,0,"exports"],[7,31,11,0],[8,4,11,0,"enumerable"],[8,14,11,0],[9,4,11,0,"get"],[9,7,11,0],[9,18,11,0,"get"],[9,19,11,0],[10,6,11,0],[10,13,11,0,"GVL"],[10,16,11,0],[11,4,11,0],[12,2,11,0],[13,2,1,0],[13,6,1,0,"_CloneableJs"],[13,18,1,0],[13,21,1,0,"require"],[13,28,1,0],[13,29,1,0,"_dependencyMap"],[13,43,1,0],[14,2,2,0],[14,6,2,0,"_errorsIndexJs"],[14,20,2,0],[14,23,2,0,"require"],[14,30,2,0],[14,31,2,0,"_dependencyMap"],[14,45,2,0],[15,2,3,0],[15,6,3,0,"_JsonJs"],[15,13,3,0],[15,16,3,0,"require"],[15,23,3,0],[15,24,3,0,"_dependencyMap"],[15,38,3,0],[16,2,4,0],[16,6,4,0,"_modelIndexJs"],[16,19,4,0],[16,22,4,0,"require"],[16,29,4,0],[16,30,4,0,"_dependencyMap"],[16,44,4,0],[17,2,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,2,11,7],[23,8,11,13,"GVL"],[23,11,11,16],[23,20,11,25,"Cloneable"],[23,32,11,34],[23,33,11,34,"Cloneable"],[23,42,11,34],[23,43,11,35],[24,4,12,4],[24,11,12,11,"LANGUAGE_CACHE"],[24,25,12,25],[24,28,12,28],[24,32,12,32,"Map"],[24,35,12,35],[24,36,12,36],[24,37,12,37],[25,4,13,4],[25,11,13,11,"CACHE"],[25,16,13,16],[25,19,13,19],[25,23,13,23,"Map"],[25,26,13,26],[25,27,13,27],[25,28,13,28],[26,4,14,4],[26,11,14,11,"LATEST_CACHE_KEY"],[26,27,14,27],[26,30,14,30],[26,31,14,31],[27,4,15,4],[27,11,15,11,"DEFAULT_LANGUAGE"],[27,27,15,27],[27,30,15,30],[27,34,15,34],[28,4,16,4],[29,0,17,0],[30,0,18,0],[31,4,19,4],[31,11,19,11,"consentLanguages"],[31,27,19,27],[31,30,19,30],[31,34,19,34,"ConsentLanguages"],[31,47,19,50],[31,48,19,50,"ConsentLanguages"],[31,64,19,50],[31,65,19,51],[31,66,19,52],[32,4,21,4],[33,0,22,0],[34,0,23,0],[35,0,24,0],[36,0,25,0],[37,0,26,0],[38,0,27,0],[39,0,28,0],[40,0,29,0],[41,0,30,0],[42,0,31,0],[43,0,32,0],[44,0,33,0],[45,0,34,0],[46,0,35,0],[47,0,36,0],[48,0,37,0],[49,0,38,0],[50,0,39,0],[51,4,40,4],[51,15,40,15,"baseUrl"],[51,22,40,22,"baseUrl"],[51,23,40,23,"url"],[51,26,40,26],[51,28,40,28],[52,6,41,8],[52,12,41,14,"notValid"],[52,20,41,22],[52,23,41,25],[52,64,41,66],[53,6,42,8],[53,10,42,12,"notValid"],[53,18,42,20],[53,19,42,21,"test"],[53,23,42,25],[53,24,42,26,"url"],[53,27,42,29],[53,28,42,30],[53,30,42,32],[54,8,43,12],[54,14,43,18],[54,18,43,22,"GVLError"],[54,32,43,30],[54,33,43,30,"GVLError"],[54,41,43,30],[54,42,43,31],[54,148,43,137],[54,149,43,138],[55,6,44,8],[56,6,45,8],[57,6,46,8],[57,10,46,12,"url"],[57,13,46,15],[57,14,46,16,"length"],[57,20,46,22],[57,23,46,25],[57,24,46,26],[57,28,46,30,"url"],[57,31,46,33],[57,32,46,34,"url"],[57,35,46,37],[57,36,46,38,"length"],[57,42,46,44],[57,45,46,47],[57,46,46,48],[57,47,46,49],[57,52,46,54],[57,55,46,57],[57,57,46,59],[58,8,47,12,"url"],[58,11,47,15],[58,15,47,19],[58,18,47,22],[59,6,48,8],[60,6,49,8],[60,10,49,12],[60,11,49,13,"baseUrl_"],[60,19,49,21],[60,22,49,24,"url"],[60,25,49,27],[61,4,50,4],[62,4,52,4],[63,0,53,0],[64,0,54,0],[65,0,55,0],[66,0,56,0],[67,0,57,0],[68,0,58,0],[69,0,59,0],[70,0,60,0],[71,0,61,0],[72,4,62,4],[72,15,62,15,"baseUrl"],[72,22,62,22,"baseUrl"],[72,23,62,22],[72,25,62,25],[73,6,63,8],[73,13,63,15],[73,17,63,19],[73,18,63,20,"baseUrl_"],[73,26,63,28],[74,4,64,4],[75,4,65,4],[76,0,66,0],[77,0,67,0],[78,0,68,0],[79,0,69,0],[80,4,70,4],[80,11,70,11,"latestFilename"],[80,25,70,25],[80,28,70,28],[80,46,70,46],[81,4,71,4],[82,0,72,0],[83,0,73,0],[84,0,74,0],[85,0,75,0],[86,0,76,0],[87,0,77,0],[88,0,78,0],[89,0,79,0],[90,0,80,0],[91,0,81,0],[92,0,82,0],[93,0,83,0],[94,0,84,0],[95,4,85,4],[95,11,85,11,"versionedFilename"],[95,28,85,28],[95,31,85,31],[95,69,85,69],[96,4,86,4],[97,0,87,0],[98,0,88,0],[99,0,89,0],[100,0,90,0],[101,0,91,0],[102,0,92,0],[103,0,93,0],[104,0,94,0],[105,0,95,0],[106,0,96,0],[107,0,97,0],[108,0,98,0],[109,0,99,0],[110,0,100,0],[111,4,101,4],[111,11,101,11,"languageFilename"],[111,27,101,27],[111,30,101,30],[111,52,101,52],[112,4,102,4],[113,0,103,0],[114,0,104,0],[115,0,105,0],[117,4,107,4],[118,0,108,0],[119,0,109,0],[121,4,111,4],[122,0,112,0],[123,0,113,0],[125,4,115,4],[126,0,116,0],[127,0,117,0],[128,0,118,0],[129,0,119,0],[130,0,120,0],[131,0,121,0],[132,0,122,0],[133,0,123,0],[134,0,124,0],[136,4,126,4],[137,0,127,0],[138,0,128,0],[139,0,129,0],[141,4,131,4],[142,0,132,0],[143,0,133,0],[145,4,135,4],[146,0,136,0],[147,0,137,0],[149,4,139,4],[150,0,140,0],[151,0,141,0],[153,4,143,4],[154,0,144,0],[155,0,145,0],[157,4,147,4],[158,0,148,0],[159,0,149,0],[160,4,150,4,"isReady_"],[160,12,150,12],[160,15,150,15],[160,20,150,20],[161,4,151,4],[162,0,152,0],[163,0,153,0],[165,4,156,4],[166,0,157,0],[167,0,158,0],[169,4,160,4],[170,0,161,0],[171,0,162,0],[173,4,164,4],[174,0,165,0],[175,0,166,0],[177,4,168,4],[178,0,169,0],[179,0,170,0],[181,4,172,4],[182,0,173,0],[183,0,174,0],[185,4,176,4],[186,0,177,0],[187,0,178,0],[189,4,181,4,"isLatest"],[189,12,181,12],[189,15,181,15],[189,20,181,20],[190,4,182,4],[191,0,183,0],[192,0,184,0],[193,0,185,0],[194,0,186,0],[195,0,187,0],[196,4,188,4,"constructor"],[196,15,188,15,"constructor"],[196,16,188,16,"versionOrVendorList"],[196,35,188,35],[196,37,188,37],[197,6,189,8],[197,11,189,13],[197,12,189,14],[197,13,189,15],[198,6,190,8],[199,0,191,0],[200,0,192,0],[201,0,193,0],[202,6,194,8],[202,10,194,12,"url"],[202,13,194,15],[202,16,194,18,"GVL"],[202,19,194,21],[202,20,194,22,"baseUrl"],[202,27,194,29],[203,6,195,8],[203,10,195,12],[203,11,195,13,"lang_"],[203,16,195,18],[203,19,195,21,"GVL"],[203,22,195,24],[203,23,195,25,"DEFAULT_LANGUAGE"],[203,39,195,41],[204,6,196,8],[204,10,196,12],[204,14,196,16],[204,15,196,17,"isVendorList"],[204,27,196,29],[204,28,196,30,"versionOrVendorList"],[204,47,196,49],[204,48,196,50],[204,50,196,52],[205,8,197,12],[205,12,197,16],[205,13,197,17,"populate"],[205,21,197,25],[205,22,197,26,"versionOrVendorList"],[205,41,197,45],[205,42,197,46],[206,8,198,12],[206,12,198,16],[206,13,198,17,"readyPromise"],[206,25,198,29],[206,28,198,32,"Promise"],[206,35,198,39],[206,36,198,40,"resolve"],[206,43,198,47],[206,44,198,48],[206,45,198,49],[207,6,199,8],[207,7,199,9],[207,13,200,13],[208,8,201,12],[208,12,201,16],[208,13,201,17,"url"],[208,16,201,20],[208,18,201,22],[209,10,202,16],[209,16,202,22],[209,20,202,26,"GVLError"],[209,34,202,34],[209,35,202,34,"GVLError"],[209,43,202,34],[209,44,202,35],[209,94,202,85],[209,95,202,86],[210,8,203,12],[211,8,204,12],[211,12,204,16,"versionOrVendorList"],[211,31,204,35],[211,34,204,38],[211,35,204,39],[211,37,204,41],[212,10,205,16],[212,16,205,22,"version"],[212,23,205,29],[212,26,205,32,"versionOrVendorList"],[212,45,205,51],[213,10,206,16],[213,14,206,20,"GVL"],[213,17,206,23],[213,18,206,24,"CACHE"],[213,23,206,29],[213,24,206,30,"has"],[213,27,206,33],[213,28,206,34,"version"],[213,35,206,41],[213,36,206,42],[213,38,206,44],[214,12,207,20],[214,16,207,24],[214,17,207,25,"populate"],[214,25,207,33],[214,26,207,34,"GVL"],[214,29,207,37],[214,30,207,38,"CACHE"],[214,35,207,43],[214,36,207,44,"get"],[214,39,207,47],[214,40,207,48,"version"],[214,47,207,55],[214,48,207,56],[214,49,207,57],[215,12,208,20],[215,16,208,24],[215,17,208,25,"readyPromise"],[215,29,208,37],[215,32,208,40,"Promise"],[215,39,208,47],[215,40,208,48,"resolve"],[215,47,208,55],[215,48,208,56],[215,49,208,57],[216,10,209,16],[216,11,209,17],[216,17,210,21],[217,12,211,20],[218,12,212,20,"url"],[218,15,212,23],[218,19,212,27,"GVL"],[218,22,212,30],[218,23,212,31,"versionedFilename"],[218,40,212,48],[218,41,212,49,"replace"],[218,48,212,56],[218,49,212,57],[218,60,212,68],[218,62,212,70,"String"],[218,68,212,76],[218,69,212,77,"version"],[218,76,212,84],[218,77,212,85],[218,78,212,86],[219,12,213,20],[219,16,213,24],[219,17,213,25,"readyPromise"],[219,29,213,37],[219,32,213,40],[219,36,213,44],[219,37,213,45,"fetchJson"],[219,46,213,54],[219,47,213,55,"url"],[219,50,213,58],[219,51,213,59],[220,10,214,16],[221,8,215,12],[221,9,215,13],[221,15,216,17],[222,10,217,16],[223,0,218,0],[224,0,219,0],[225,0,220,0],[226,0,221,0],[227,0,222,0],[228,0,223,0],[229,10,224,16],[229,14,224,20,"GVL"],[229,17,224,23],[229,18,224,24,"CACHE"],[229,23,224,29],[229,24,224,30,"has"],[229,27,224,33],[229,28,224,34,"GVL"],[229,31,224,37],[229,32,224,38,"LATEST_CACHE_KEY"],[229,48,224,54],[229,49,224,55],[229,51,224,57],[230,12,225,20],[230,16,225,24],[230,17,225,25,"populate"],[230,25,225,33],[230,26,225,34,"GVL"],[230,29,225,37],[230,30,225,38,"CACHE"],[230,35,225,43],[230,36,225,44,"get"],[230,39,225,47],[230,40,225,48,"GVL"],[230,43,225,51],[230,44,225,52,"LATEST_CACHE_KEY"],[230,60,225,68],[230,61,225,69],[230,62,225,70],[231,12,226,20],[231,16,226,24],[231,17,226,25,"readyPromise"],[231,29,226,37],[231,32,226,40,"Promise"],[231,39,226,47],[231,40,226,48,"resolve"],[231,47,226,55],[231,48,226,56],[231,49,226,57],[232,10,227,16],[232,11,227,17],[232,17,228,21],[233,12,229,20],[233,16,229,24],[233,17,229,25,"isLatest"],[233,25,229,33],[233,28,229,36],[233,32,229,40],[234,12,230,20],[234,16,230,24],[234,17,230,25,"readyPromise"],[234,29,230,37],[234,32,230,40],[234,36,230,44],[234,37,230,45,"fetchJson"],[234,46,230,54],[234,47,230,55,"url"],[234,50,230,58],[234,53,230,61,"GVL"],[234,56,230,64],[234,57,230,65,"latestFilename"],[234,71,230,79],[234,72,230,80],[235,10,231,16],[236,8,232,12],[237,6,233,8],[238,4,234,4],[239,4,235,4],[240,0,236,0],[241,0,237,0],[242,0,238,0],[243,0,239,0],[244,0,240,0],[245,0,241,0],[246,0,242,0],[247,4,243,4],[247,11,243,11,"emptyLanguageCache"],[247,29,243,29,"emptyLanguageCache"],[247,30,243,30,"lang"],[247,34,243,34],[247,36,243,36],[248,6,244,8],[248,10,244,12,"retr"],[248,14,244,16],[248,17,244,19],[248,22,244,24],[249,6,245,8],[249,10,245,12,"lang"],[249,14,245,16],[249,19,245,21,"undefined"],[249,28,245,30],[249,32,245,34,"GVL"],[249,35,245,37],[249,36,245,38,"LANGUAGE_CACHE"],[249,50,245,52],[249,51,245,53,"size"],[249,55,245,57],[249,58,245,60],[249,59,245,61],[249,61,245,63],[250,8,246,12,"GVL"],[250,11,246,15],[250,12,246,16,"LANGUAGE_CACHE"],[250,26,246,30],[250,29,246,33],[250,33,246,37,"Map"],[250,36,246,40],[250,37,246,41],[250,38,246,42],[251,8,247,12,"retr"],[251,12,247,16],[251,15,247,19],[251,19,247,23],[252,6,248,8],[252,7,248,9],[252,13,249,13],[252,17,249,17],[252,24,249,24,"lang"],[252,28,249,28],[252,33,249,33],[252,41,249,41],[252,45,249,45],[252,49,249,49],[252,50,249,50,"consentLanguages"],[252,66,249,66],[252,67,249,67,"has"],[252,70,249,70],[252,71,249,71,"lang"],[252,75,249,75],[252,76,249,76,"toUpperCase"],[252,87,249,87],[252,88,249,88],[252,89,249,89],[252,90,249,90],[252,92,249,92],[253,8,250,12,"GVL"],[253,11,250,15],[253,12,250,16,"LANGUAGE_CACHE"],[253,26,250,30],[253,27,250,31,"delete"],[253,33,250,37],[253,34,250,38,"lang"],[253,38,250,42],[253,39,250,43,"toUpperCase"],[253,50,250,54],[253,51,250,55],[253,52,250,56],[253,53,250,57],[254,8,251,12,"retr"],[254,12,251,16],[254,15,251,19],[254,19,251,23],[255,6,252,8],[256,6,253,8],[256,13,253,15,"retr"],[256,17,253,19],[257,4,254,4],[258,4,255,4],[259,0,256,0],[260,0,257,0],[261,0,258,0],[262,0,259,0],[263,0,260,0],[264,0,261,0],[265,4,262,4],[265,11,262,11,"emptyCache"],[265,21,262,21,"emptyCache"],[265,22,262,22,"vendorListVersion"],[265,39,262,39],[265,41,262,41],[266,6,263,8],[266,10,263,12,"retr"],[266,14,263,16],[266,17,263,19],[266,22,263,24],[267,6,264,8],[267,10,264,12,"Number"],[267,16,264,18],[267,17,264,19,"isInteger"],[267,26,264,28],[267,27,264,29,"vendorListVersion"],[267,44,264,46],[267,45,264,47],[267,49,264,51,"vendorListVersion"],[267,66,264,68],[267,70,264,72],[267,71,264,73],[267,73,264,75],[268,8,265,12,"GVL"],[268,11,265,15],[268,12,265,16,"CACHE"],[268,17,265,21],[268,18,265,22,"delete"],[268,24,265,28],[268,25,265,29,"vendorListVersion"],[268,42,265,46],[268,43,265,47],[269,8,266,12,"retr"],[269,12,266,16],[269,15,266,19],[269,19,266,23],[270,6,267,8],[270,7,267,9],[270,13,268,13],[270,17,268,17,"vendorListVersion"],[270,34,268,34],[270,39,268,39,"undefined"],[270,48,268,48],[270,50,268,50],[271,8,269,12,"GVL"],[271,11,269,15],[271,12,269,16,"CACHE"],[271,17,269,21],[271,20,269,24],[271,24,269,28,"Map"],[271,27,269,31],[271,28,269,32],[271,29,269,33],[272,8,270,12,"retr"],[272,12,270,16],[272,15,270,19],[272,19,270,23],[273,6,271,8],[274,6,272,8],[274,13,272,15,"retr"],[274,17,272,19],[275,4,273,4],[276,4,274,4,"cacheLanguage"],[276,17,274,17,"cacheLanguage"],[276,18,274,17],[276,20,274,20],[277,6,275,8],[277,10,275,12],[277,11,275,13,"GVL"],[277,14,275,16],[277,15,275,17,"LANGUAGE_CACHE"],[277,29,275,31],[277,30,275,32,"has"],[277,33,275,35],[277,34,275,36],[277,38,275,40],[277,39,275,41,"lang_"],[277,44,275,46],[277,45,275,47],[277,47,275,49],[278,8,276,12,"GVL"],[278,11,276,15],[278,12,276,16,"LANGUAGE_CACHE"],[278,26,276,30],[278,27,276,31,"set"],[278,30,276,34],[278,31,276,35],[278,35,276,39],[278,36,276,40,"lang_"],[278,41,276,45],[278,43,276,47],[279,10,277,16,"purposes"],[279,18,277,24],[279,20,277,26],[279,24,277,30],[279,25,277,31,"purposes"],[279,33,277,39],[280,10,278,16,"specialPurposes"],[280,25,278,31],[280,27,278,33],[280,31,278,37],[280,32,278,38,"specialPurposes"],[280,47,278,53],[281,10,279,16,"features"],[281,18,279,24],[281,20,279,26],[281,24,279,30],[281,25,279,31,"features"],[281,33,279,39],[282,10,280,16,"specialFeatures"],[282,25,280,31],[282,27,280,33],[282,31,280,37],[282,32,280,38,"specialFeatures"],[282,47,280,53],[283,10,281,16,"stacks"],[283,16,281,22],[283,18,281,24],[283,22,281,28],[283,23,281,29,"stacks"],[284,8,282,12],[284,9,282,13],[284,10,282,14],[285,6,283,8],[286,4,284,4],[287,4,285,4],[287,10,285,10,"fetchJson"],[287,19,285,19,"fetchJson"],[287,20,285,20,"url"],[287,23,285,23],[287,25,285,25],[288,6,286,8],[288,10,286,12],[289,8,287,12],[289,12,287,16],[289,13,287,17,"populate"],[289,21,287,25],[289,22,287,26],[289,28,287,32,"Json"],[289,35,287,36],[289,36,287,36,"Json"],[289,40,287,36],[289,41,287,37,"fetch"],[289,46,287,42],[289,47,287,43,"url"],[289,50,287,46],[289,51,287,47],[289,52,287,48],[290,6,288,8],[290,7,288,9],[290,8,289,8],[290,15,289,15,"err"],[290,18,289,18],[290,20,289,20],[291,8,290,12],[291,14,290,18],[291,18,290,22,"GVLError"],[291,32,290,30],[291,33,290,30,"GVLError"],[291,41,290,30],[291,42,290,31,"err"],[291,45,290,34],[291,46,290,35,"message"],[291,53,290,42],[291,54,290,43],[292,6,291,8],[293,4,292,4],[294,4,293,4],[295,0,294,0],[296,0,295,0],[297,0,296,0],[298,0,297,0],[299,0,298,0],[300,0,299,0],[301,4,300,4,"getJson"],[301,11,300,11,"getJson"],[301,12,300,11],[301,14,300,14],[302,6,301,8],[302,13,301,15,"JSON"],[302,17,301,19],[302,18,301,20,"parse"],[302,23,301,25],[302,24,301,26,"JSON"],[302,28,301,30],[302,29,301,31,"stringify"],[302,38,301,40],[302,39,301,41],[303,8,302,12,"gvlSpecificationVersion"],[303,31,302,35],[303,33,302,37],[303,37,302,41],[303,38,302,42,"gvlSpecificationVersion"],[303,61,302,65],[304,8,303,12,"vendorListVersion"],[304,25,303,29],[304,27,303,31],[304,31,303,35],[304,32,303,36,"vendorListVersion"],[304,49,303,53],[305,8,304,12,"tcfPolicyVersion"],[305,24,304,28],[305,26,304,30],[305,30,304,34],[305,31,304,35,"tcfPolicyVersion"],[305,47,304,51],[306,8,305,12,"lastUpdated"],[306,19,305,23],[306,21,305,25],[306,25,305,29],[306,26,305,30,"lastUpdated"],[306,37,305,41],[307,8,306,12,"purposes"],[307,16,306,20],[307,18,306,22],[307,22,306,26],[307,23,306,27,"purposes"],[307,31,306,35],[308,8,307,12,"specialPurposes"],[308,23,307,27],[308,25,307,29],[308,29,307,33],[308,30,307,34,"specialPurposes"],[308,45,307,49],[309,8,308,12,"features"],[309,16,308,20],[309,18,308,22],[309,22,308,26],[309,23,308,27,"features"],[309,31,308,35],[310,8,309,12,"specialFeatures"],[310,23,309,27],[310,25,309,29],[310,29,309,33],[310,30,309,34,"specialFeatures"],[310,45,309,49],[311,8,310,12,"stacks"],[311,14,310,18],[311,16,310,20],[311,20,310,24],[311,21,310,25,"stacks"],[311,27,310,31],[312,8,311,12,"vendors"],[312,15,311,19],[312,17,311,21],[312,21,311,25],[312,22,311,26,"fullVendorList"],[313,6,312,8],[313,7,312,9],[313,8,312,10],[313,9,312,11],[314,4,313,4],[315,4,314,4],[316,0,315,0],[317,0,316,0],[318,0,317,0],[319,0,318,0],[320,0,319,0],[321,0,320,0],[322,0,321,0],[323,4,322,4],[323,10,322,10,"changeLanguage"],[323,24,322,24,"changeLanguage"],[323,25,322,25,"lang"],[323,29,322,29],[323,31,322,31],[324,6,323,8],[324,12,323,14,"langUpper"],[324,21,323,23],[324,24,323,26,"lang"],[324,28,323,30],[324,29,323,31,"toUpperCase"],[324,40,323,42],[324,41,323,43],[324,42,323,44],[325,6,324,8],[325,10,324,12,"GVL"],[325,13,324,15],[325,14,324,16,"consentLanguages"],[325,30,324,32],[325,31,324,33,"has"],[325,34,324,36],[325,35,324,37,"langUpper"],[325,44,324,46],[325,45,324,47],[325,47,324,49],[326,8,325,12],[326,12,325,16,"langUpper"],[326,21,325,25],[326,26,325,30],[326,30,325,34],[326,31,325,35,"lang_"],[326,36,325,40],[326,38,325,42],[327,10,326,16],[327,14,326,20],[327,15,326,21,"lang_"],[327,20,326,26],[327,23,326,29,"langUpper"],[327,32,326,38],[328,10,327,16],[328,14,327,20,"GVL"],[328,17,327,23],[328,18,327,24,"LANGUAGE_CACHE"],[328,32,327,38],[328,33,327,39,"has"],[328,36,327,42],[328,37,327,43,"langUpper"],[328,46,327,52],[328,47,327,53],[328,49,327,55],[329,12,328,20],[329,18,328,26,"cached"],[329,24,328,32],[329,27,328,35,"GVL"],[329,30,328,38],[329,31,328,39,"LANGUAGE_CACHE"],[329,45,328,53],[329,46,328,54,"get"],[329,49,328,57],[329,50,328,58,"langUpper"],[329,59,328,67],[329,60,328,68],[330,12,329,20],[330,17,329,25],[330,23,329,31,"prop"],[330,27,329,35],[330,31,329,39,"cached"],[330,37,329,45],[330,39,329,47],[331,14,330,24],[331,18,330,28,"cached"],[331,24,330,34],[331,25,330,35,"hasOwnProperty"],[331,39,330,49],[331,40,330,50,"prop"],[331,44,330,54],[331,45,330,55],[331,47,330,57],[332,16,331,28],[332,20,331,32],[332,21,331,33,"prop"],[332,25,331,37],[332,26,331,38],[332,29,331,41,"cached"],[332,35,331,47],[332,36,331,48,"prop"],[332,40,331,52],[332,41,331,53],[333,14,332,24],[334,12,333,20],[335,10,334,16],[335,11,334,17],[335,17,335,21],[336,12,336,20],[337,12,337,20],[337,18,337,26,"url"],[337,21,337,29],[337,24,337,32,"GVL"],[337,27,337,35],[337,28,337,36,"baseUrl"],[337,35,337,43],[337,38,337,46,"GVL"],[337,41,337,49],[337,42,337,50,"languageFilename"],[337,58,337,66],[337,59,337,67,"replace"],[337,66,337,74],[337,67,337,75],[337,75,337,83],[337,77,337,85,"lang"],[337,81,337,89],[337,82,337,90],[338,12,338,20],[338,16,338,24],[339,14,339,24],[339,20,339,30],[339,24,339,34],[339,25,339,35,"fetchJson"],[339,34,339,44],[339,35,339,45,"url"],[339,38,339,48],[339,39,339,49],[340,14,340,24],[340,18,340,28],[340,19,340,29,"cacheLanguage"],[340,32,340,42],[340,33,340,43],[340,34,340,44],[341,12,341,20],[341,13,341,21],[341,14,342,20],[341,21,342,27,"err"],[341,24,342,30],[341,26,342,32],[342,14,343,24],[342,20,343,30],[342,24,343,34,"GVLError"],[342,38,343,42],[342,39,343,42,"GVLError"],[342,47,343,42],[342,48,343,43],[342,75,343,70],[342,78,343,73,"err"],[342,81,343,76],[342,82,343,77,"message"],[342,89,343,84],[342,90,343,85],[343,12,344,20],[344,10,345,16],[345,8,346,12],[346,6,347,8],[346,7,347,9],[346,13,348,13],[347,8,349,12],[347,14,349,18],[347,18,349,22,"GVLError"],[347,32,349,30],[347,33,349,30,"GVLError"],[347,41,349,30],[347,42,349,31],[347,66,349,55,"lang"],[347,70,349,59],[347,72,349,61],[347,73,349,62],[348,6,350,8],[349,4,351,4],[350,4,352,4],[350,8,352,8,"language"],[350,16,352,16,"language"],[350,17,352,16],[350,19,352,19],[351,6,353,8],[351,13,353,15],[351,17,353,19],[351,18,353,20,"lang_"],[351,23,353,25],[352,4,354,4],[353,4,355,4,"isVendorList"],[353,16,355,16,"isVendorList"],[353,17,355,17,"gvlObject"],[353,26,355,26],[353,28,355,28],[354,6,356,8],[354,13,356,15,"gvlObject"],[354,22,356,24],[354,27,356,29,"undefined"],[354,36,356,38],[354,40,356,42,"gvlObject"],[354,49,356,51],[354,50,356,52,"vendors"],[354,57,356,59],[354,62,356,64,"undefined"],[354,71,356,73],[355,4,357,4],[356,4,358,4,"populate"],[356,12,358,12,"populate"],[356,13,358,13,"gvlObject"],[356,22,358,22],[356,24,358,24],[357,6,359,8],[358,0,360,0],[359,0,361,0],[360,0,362,0],[361,6,363,8],[361,10,363,12],[361,11,363,13,"purposes"],[361,19,363,21],[361,22,363,24,"gvlObject"],[361,31,363,33],[361,32,363,34,"purposes"],[361,40,363,42],[362,6,364,8],[362,10,364,12],[362,11,364,13,"specialPurposes"],[362,26,364,28],[362,29,364,31,"gvlObject"],[362,38,364,40],[362,39,364,41,"specialPurposes"],[362,54,364,56],[363,6,365,8],[363,10,365,12],[363,11,365,13,"features"],[363,19,365,21],[363,22,365,24,"gvlObject"],[363,31,365,33],[363,32,365,34,"features"],[363,40,365,42],[364,6,366,8],[364,10,366,12],[364,11,366,13,"specialFeatures"],[364,26,366,28],[364,29,366,31,"gvlObject"],[364,38,366,40],[364,39,366,41,"specialFeatures"],[364,54,366,56],[365,6,367,8],[365,10,367,12],[365,11,367,13,"stacks"],[365,17,367,19],[365,20,367,22,"gvlObject"],[365,29,367,31],[365,30,367,32,"stacks"],[365,36,367,38],[366,6,368,8],[366,10,368,12],[366,14,368,16],[366,15,368,17,"isVendorList"],[366,27,368,29],[366,28,368,30,"gvlObject"],[366,37,368,39],[366,38,368,40],[366,40,368,42],[367,8,369,12],[367,12,369,16],[367,13,369,17,"gvlSpecificationVersion"],[367,36,369,40],[367,39,369,43,"gvlObject"],[367,48,369,52],[367,49,369,53,"gvlSpecificationVersion"],[367,72,369,76],[368,8,370,12],[368,12,370,16],[368,13,370,17,"tcfPolicyVersion"],[368,29,370,33],[368,32,370,36,"gvlObject"],[368,41,370,45],[368,42,370,46,"tcfPolicyVersion"],[368,58,370,62],[369,8,371,12],[369,12,371,16],[369,13,371,17,"vendorListVersion"],[369,30,371,34],[369,33,371,37,"gvlObject"],[369,42,371,46],[369,43,371,47,"vendorListVersion"],[369,60,371,64],[370,8,372,12],[370,12,372,16],[370,13,372,17,"lastUpdated"],[370,24,372,28],[370,27,372,31,"gvlObject"],[370,36,372,40],[370,37,372,41,"lastUpdated"],[370,48,372,52],[371,8,373,12],[371,12,373,16],[371,19,373,23],[371,23,373,27],[371,24,373,28,"lastUpdated"],[371,35,373,39],[371,40,373,44],[371,48,373,52],[371,50,373,54],[372,10,374,16],[372,14,374,20],[372,15,374,21,"lastUpdated"],[372,26,374,32],[372,29,374,35],[372,33,374,39,"Date"],[372,37,374,43],[372,38,374,44],[372,42,374,48],[372,43,374,49,"lastUpdated"],[372,54,374,60],[372,55,374,61],[373,8,375,12],[374,8,376,12],[374,12,376,16],[374,13,376,17,"vendors_"],[374,21,376,25],[374,24,376,28,"gvlObject"],[374,33,376,37],[374,34,376,38,"vendors"],[374,41,376,45],[375,8,377,12],[375,12,377,16],[375,13,377,17,"fullVendorList"],[375,27,377,31],[375,30,377,34,"gvlObject"],[375,39,377,43],[375,40,377,44,"vendors"],[375,47,377,51],[376,8,378,12],[376,12,378,16],[376,13,378,17,"mapVendors"],[376,23,378,27],[376,24,378,28],[376,25,378,29],[377,8,379,12],[377,12,379,16],[377,13,379,17,"isReady_"],[377,21,379,25],[377,24,379,28],[377,28,379,32],[378,8,380,12],[378,12,380,16],[378,16,380,20],[378,17,380,21,"isLatest"],[378,25,380,29],[378,27,380,31],[379,10,381,16],[380,0,382,0],[381,0,383,0],[382,0,384,0],[383,10,385,16,"GVL"],[383,13,385,19],[383,14,385,20,"CACHE"],[383,19,385,25],[383,20,385,26,"set"],[383,23,385,29],[383,24,385,30,"GVL"],[383,27,385,33],[383,28,385,34,"LATEST_CACHE_KEY"],[383,44,385,50],[383,46,385,52],[383,50,385,56],[383,51,385,57,"getJson"],[383,58,385,64],[383,59,385,65],[383,60,385,66],[383,61,385,67],[384,8,386,12],[385,8,387,12],[386,0,388,0],[387,0,389,0],[388,0,390,0],[389,0,391,0],[390,8,392,12],[390,12,392,16],[390,13,392,17,"GVL"],[390,16,392,20],[390,17,392,21,"CACHE"],[390,22,392,26],[390,23,392,27,"has"],[390,26,392,30],[390,27,392,31],[390,31,392,35],[390,32,392,36,"vendorListVersion"],[390,49,392,53],[390,50,392,54],[390,52,392,56],[391,10,393,16,"GVL"],[391,13,393,19],[391,14,393,20,"CACHE"],[391,19,393,25],[391,20,393,26,"set"],[391,23,393,29],[391,24,393,30],[391,28,393,34],[391,29,393,35,"vendorListVersion"],[391,46,393,52],[391,48,393,54],[391,52,393,58],[391,53,393,59,"getJson"],[391,60,393,66],[391,61,393,67],[391,62,393,68],[391,63,393,69],[392,8,394,12],[393,6,395,8],[394,6,396,8],[394,10,396,12],[394,11,396,13,"cacheLanguage"],[394,24,396,26],[394,25,396,27],[394,26,396,28],[395,4,397,4],[396,4,398,4,"mapVendors"],[396,14,398,14,"mapVendors"],[396,15,398,15,"vendorIds"],[396,24,398,24],[396,26,398,26],[397,6,399,8],[398,6,400,8],[398,10,400,12],[398,11,400,13,"byPurposeVendorMap"],[398,29,400,31],[398,32,400,34],[398,33,400,35],[398,34,400,36],[399,6,401,8],[399,10,401,12],[399,11,401,13,"bySpecialPurposeVendorMap"],[399,36,401,38],[399,39,401,41],[399,40,401,42],[399,41,401,43],[400,6,402,8],[400,10,402,12],[400,11,402,13,"byFeatureVendorMap"],[400,29,402,31],[400,32,402,34],[400,33,402,35],[400,34,402,36],[401,6,403,8],[401,10,403,12],[401,11,403,13,"bySpecialFeatureVendorMap"],[401,36,403,38],[401,39,403,41],[401,40,403,42],[401,41,403,43],[402,6,404,8],[403,6,405,8,"Object"],[403,12,405,14],[403,13,405,15,"keys"],[403,17,405,19],[403,18,405,20],[403,22,405,24],[403,23,405,25,"purposes"],[403,31,405,33],[403,32,405,34],[403,33,405,35,"forEach"],[403,40,405,42],[403,41,405,44,"purposeId"],[403,50,405,53],[403,54,405,58],[404,8,406,12],[404,12,406,16],[404,13,406,17,"byPurposeVendorMap"],[404,31,406,35],[404,32,406,36,"purposeId"],[404,41,406,45],[404,42,406,46],[404,45,406,49],[405,10,407,16,"legInt"],[405,16,407,22],[405,18,407,24],[405,22,407,28,"Set"],[405,25,407,31],[405,26,407,32],[405,27,407,33],[406,10,408,16,"consent"],[406,17,408,23],[406,19,408,25],[406,23,408,29,"Set"],[406,26,408,32],[406,27,408,33],[406,28,408,34],[407,10,409,16,"flexible"],[407,18,409,24],[407,20,409,26],[407,24,409,30,"Set"],[407,27,409,33],[407,28,409,34],[408,8,410,12],[408,9,410,13],[409,6,411,8],[409,7,411,9],[409,8,411,10],[410,6,412,8],[411,6,413,8,"Object"],[411,12,413,14],[411,13,413,15,"keys"],[411,17,413,19],[411,18,413,20],[411,22,413,24],[411,23,413,25,"specialPurposes"],[411,38,413,40],[411,39,413,41],[411,40,413,42,"forEach"],[411,47,413,49],[411,48,413,51,"purposeId"],[411,57,413,60],[411,61,413,65],[412,8,414,12],[412,12,414,16],[412,13,414,17,"bySpecialPurposeVendorMap"],[412,38,414,42],[412,39,414,43,"purposeId"],[412,48,414,52],[412,49,414,53],[412,52,414,56],[412,56,414,60,"Set"],[412,59,414,63],[412,60,414,64],[412,61,414,65],[413,6,415,8],[413,7,415,9],[413,8,415,10],[414,6,416,8],[415,6,417,8,"Object"],[415,12,417,14],[415,13,417,15,"keys"],[415,17,417,19],[415,18,417,20],[415,22,417,24],[415,23,417,25,"features"],[415,31,417,33],[415,32,417,34],[415,33,417,35,"forEach"],[415,40,417,42],[415,41,417,44,"featureId"],[415,50,417,53],[415,54,417,58],[416,8,418,12],[416,12,418,16],[416,13,418,17,"byFeatureVendorMap"],[416,31,418,35],[416,32,418,36,"featureId"],[416,41,418,45],[416,42,418,46],[416,45,418,49],[416,49,418,53,"Set"],[416,52,418,56],[416,53,418,57],[416,54,418,58],[417,6,419,8],[417,7,419,9],[417,8,419,10],[418,6,420,8],[419,6,421,8,"Object"],[419,12,421,14],[419,13,421,15,"keys"],[419,17,421,19],[419,18,421,20],[419,22,421,24],[419,23,421,25,"specialFeatures"],[419,38,421,40],[419,39,421,41],[419,40,421,42,"forEach"],[419,47,421,49],[419,48,421,51,"featureId"],[419,57,421,60],[419,61,421,65],[420,8,422,12],[420,12,422,16],[420,13,422,17,"bySpecialFeatureVendorMap"],[420,38,422,42],[420,39,422,43,"featureId"],[420,48,422,52],[420,49,422,53],[420,52,422,56],[420,56,422,60,"Set"],[420,59,422,63],[420,60,422,64],[420,61,422,65],[421,6,423,8],[421,7,423,9],[421,8,423,10],[422,6,424,8],[422,10,424,12],[422,11,424,13,"Array"],[422,16,424,18],[422,17,424,19,"isArray"],[422,24,424,26],[422,25,424,27,"vendorIds"],[422,34,424,36],[422,35,424,37],[422,37,424,39],[423,8,425,12,"vendorIds"],[423,17,425,21],[423,20,425,24,"Object"],[423,26,425,30],[423,27,425,31,"keys"],[423,31,425,35],[423,32,425,36],[423,36,425,40],[423,37,425,41,"fullVendorList"],[423,51,425,55],[423,52,425,56],[423,53,425,57,"map"],[423,56,425,60],[423,57,425,62,"vId"],[423,60,425,65],[423,64,425,70],[423,65,425,71,"vId"],[423,68,425,74],[423,69,425,75],[424,6,426,8],[425,6,427,8],[425,10,427,12],[425,11,427,13,"vendorIds"],[425,20,427,22],[425,23,427,25],[425,27,427,29,"Set"],[425,30,427,32],[425,31,427,33,"vendorIds"],[425,40,427,42],[425,41,427,43],[426,6,428,8],[427,6,429,8],[427,10,429,12],[427,11,429,13,"vendors_"],[427,19,429,21],[427,22,429,24,"vendorIds"],[427,31,429,33],[427,32,429,34,"reduce"],[427,38,429,40],[427,39,429,41],[427,40,429,42,"vendors"],[427,47,429,49],[427,49,429,51,"vendorId"],[427,57,429,59],[427,62,429,64],[428,8,430,12],[428,14,430,18,"vendor"],[428,20,430,24],[428,23,430,27],[428,27,430,31],[428,28,430,32,"vendors_"],[428,36,430,40],[428,37,430,41,"String"],[428,43,430,47],[428,44,430,48,"vendorId"],[428,52,430,56],[428,53,430,57],[428,54,430,58],[429,8,431,12],[429,12,431,16,"vendor"],[429,18,431,22],[429,22,431,26,"vendor"],[429,28,431,32],[429,29,431,33,"deletedDate"],[429,40,431,44],[429,45,431,49,"undefined"],[429,54,431,58],[429,56,431,60],[430,10,432,16,"vendor"],[430,16,432,22],[430,17,432,23,"purposes"],[430,25,432,31],[430,26,432,32,"forEach"],[430,33,432,39],[430,34,432,41,"purposeId"],[430,43,432,50],[430,47,432,55],[431,12,433,20],[431,18,433,26,"purpGroup"],[431,27,433,35],[431,30,433,38],[431,34,433,42],[431,35,433,43,"byPurposeVendorMap"],[431,53,433,61],[431,54,433,62,"String"],[431,60,433,68],[431,61,433,69,"purposeId"],[431,70,433,78],[431,71,433,79],[431,72,433,80],[432,12,434,20,"purpGroup"],[432,21,434,29],[432,22,434,30,"consent"],[432,29,434,37],[432,30,434,38,"add"],[432,33,434,41],[432,34,434,42,"vendorId"],[432,42,434,50],[432,43,434,51],[433,10,435,16],[433,11,435,17],[433,12,435,18],[434,10,436,16,"vendor"],[434,16,436,22],[434,17,436,23,"specialPurposes"],[434,32,436,38],[434,33,436,39,"forEach"],[434,40,436,46],[434,41,436,48,"purposeId"],[434,50,436,57],[434,54,436,62],[435,12,437,20],[435,16,437,24],[435,17,437,25,"bySpecialPurposeVendorMap"],[435,42,437,50],[435,43,437,51,"String"],[435,49,437,57],[435,50,437,58,"purposeId"],[435,59,437,67],[435,60,437,68],[435,61,437,69],[435,62,437,70,"add"],[435,65,437,73],[435,66,437,74,"vendorId"],[435,74,437,82],[435,75,437,83],[436,10,438,16],[436,11,438,17],[436,12,438,18],[437,10,439,16,"vendor"],[437,16,439,22],[437,17,439,23,"legIntPurposes"],[437,31,439,37],[437,32,439,38,"forEach"],[437,39,439,45],[437,40,439,47,"purposeId"],[437,49,439,56],[437,53,439,61],[438,12,440,20],[438,16,440,24],[438,17,440,25,"byPurposeVendorMap"],[438,35,440,43],[438,36,440,44,"String"],[438,42,440,50],[438,43,440,51,"purposeId"],[438,52,440,60],[438,53,440,61],[438,54,440,62],[438,55,440,63,"legInt"],[438,61,440,69],[438,62,440,70,"add"],[438,65,440,73],[438,66,440,74,"vendorId"],[438,74,440,82],[438,75,440,83],[439,10,441,16],[439,11,441,17],[439,12,441,18],[440,10,442,16],[441,10,443,16],[441,14,443,20,"vendor"],[441,20,443,26],[441,21,443,27,"flexiblePurposes"],[441,37,443,43],[441,39,443,45],[442,12,444,20,"vendor"],[442,18,444,26],[442,19,444,27,"flexiblePurposes"],[442,35,444,43],[442,36,444,44,"forEach"],[442,43,444,51],[442,44,444,53,"purposeId"],[442,53,444,62],[442,57,444,67],[443,14,445,24],[443,18,445,28],[443,19,445,29,"byPurposeVendorMap"],[443,37,445,47],[443,38,445,48,"String"],[443,44,445,54],[443,45,445,55,"purposeId"],[443,54,445,64],[443,55,445,65],[443,56,445,66],[443,57,445,67,"flexible"],[443,65,445,75],[443,66,445,76,"add"],[443,69,445,79],[443,70,445,80,"vendorId"],[443,78,445,88],[443,79,445,89],[444,12,446,20],[444,13,446,21],[444,14,446,22],[445,10,447,16],[446,10,448,16,"vendor"],[446,16,448,22],[446,17,448,23,"features"],[446,25,448,31],[446,26,448,32,"forEach"],[446,33,448,39],[446,34,448,41,"featureId"],[446,43,448,50],[446,47,448,55],[447,12,449,20],[447,16,449,24],[447,17,449,25,"byFeatureVendorMap"],[447,35,449,43],[447,36,449,44,"String"],[447,42,449,50],[447,43,449,51,"featureId"],[447,52,449,60],[447,53,449,61],[447,54,449,62],[447,55,449,63,"add"],[447,58,449,66],[447,59,449,67,"vendorId"],[447,67,449,75],[447,68,449,76],[448,10,450,16],[448,11,450,17],[448,12,450,18],[449,10,451,16,"vendor"],[449,16,451,22],[449,17,451,23,"specialFeatures"],[449,32,451,38],[449,33,451,39,"forEach"],[449,40,451,46],[449,41,451,48,"featureId"],[449,50,451,57],[449,54,451,62],[450,12,452,20],[450,16,452,24],[450,17,452,25,"bySpecialFeatureVendorMap"],[450,42,452,50],[450,43,452,51,"String"],[450,49,452,57],[450,50,452,58,"featureId"],[450,59,452,67],[450,60,452,68],[450,61,452,69],[450,62,452,70,"add"],[450,65,452,73],[450,66,452,74,"vendorId"],[450,74,452,82],[450,75,452,83],[451,10,453,16],[451,11,453,17],[451,12,453,18],[452,10,454,16,"vendors"],[452,17,454,23],[452,18,454,24,"vendorId"],[452,26,454,32],[452,27,454,33],[452,30,454,36,"vendor"],[452,36,454,42],[453,8,455,12],[454,8,456,12],[454,15,456,19,"vendors"],[454,22,456,26],[455,6,457,8],[455,7,457,9],[455,9,457,11],[455,10,457,12],[455,11,457,13],[455,12,457,14],[456,4,458,4],[457,4,459,4,"getFilteredVendors"],[457,22,459,22,"getFilteredVendors"],[457,23,459,23,"purposeOrFeature"],[457,39,459,39],[457,41,459,41,"id"],[457,43,459,43],[457,45,459,45,"subType"],[457,52,459,52],[457,54,459,54,"special"],[457,61,459,61],[457,63,459,63],[458,6,460,8],[458,12,460,14,"properPurposeOrFeature"],[458,34,460,36],[458,37,460,39,"purposeOrFeature"],[458,53,460,55],[458,54,460,56,"charAt"],[458,60,460,62],[458,61,460,63],[458,62,460,64],[458,63,460,65],[458,64,460,66,"toUpperCase"],[458,75,460,77],[458,76,460,78],[458,77,460,79],[458,80,460,82,"purposeOrFeature"],[458,96,460,98],[458,97,460,99,"slice"],[458,102,460,104],[458,103,460,105],[458,104,460,106],[458,105,460,107],[459,6,461,8],[459,10,461,12,"vendorSet"],[459,19,461,21],[460,6,462,8],[460,12,462,14,"retr"],[460,16,462,18],[460,19,462,21],[460,20,462,22],[460,21,462,23],[461,6,463,8],[461,10,463,12,"purposeOrFeature"],[461,26,463,28],[461,31,463,33],[461,40,463,42],[461,44,463,46,"subType"],[461,51,463,53],[461,53,463,55],[462,8,464,12,"vendorSet"],[462,17,464,21],[462,20,464,24],[462,24,464,28],[462,25,464,29],[462,29,464,33],[462,32,464,36,"properPurposeOrFeature"],[462,54,464,58],[462,57,464,61],[462,68,464,72],[462,69,464,73],[462,70,464,74,"String"],[462,76,464,80],[462,77,464,81,"id"],[462,79,464,83],[462,80,464,84],[462,81,464,85],[462,82,464,86,"subType"],[462,89,464,93],[462,90,464,94],[463,6,465,8],[463,7,465,9],[463,13,466,13],[464,8,467,12,"vendorSet"],[464,17,467,21],[464,20,467,24],[464,24,467,28],[464,25,467,29],[464,29,467,33],[464,33,467,37,"special"],[464,40,467,44],[464,43,467,47],[464,52,467,56],[464,55,467,59],[464,57,467,61],[464,58,467,62],[464,61,467,65,"properPurposeOrFeature"],[464,83,467,87],[464,86,467,90],[464,97,467,101],[464,98,467,102],[464,99,467,103,"String"],[464,105,467,109],[464,106,467,110,"id"],[464,108,467,112],[464,109,467,113],[464,110,467,114],[465,6,468,8],[466,6,469,8,"vendorSet"],[466,15,469,17],[466,16,469,18,"forEach"],[466,23,469,25],[466,24,469,27,"vendorId"],[466,32,469,35],[466,36,469,40],[467,8,470,12,"retr"],[467,12,470,16],[467,13,470,17,"String"],[467,19,470,23],[467,20,470,24,"vendorId"],[467,28,470,32],[467,29,470,33],[467,30,470,34],[467,33,470,37],[467,37,470,41],[467,38,470,42,"vendors"],[467,45,470,49],[467,46,470,50,"String"],[467,52,470,56],[467,53,470,57,"vendorId"],[467,61,470,65],[467,62,470,66],[467,63,470,67],[468,6,471,8],[468,7,471,9],[468,8,471,10],[469,6,472,8],[469,13,472,15,"retr"],[469,17,472,19],[470,4,473,4],[471,4,474,4],[472,0,475,0],[473,0,476,0],[474,0,477,0],[475,0,478,0],[476,0,479,0],[477,4,480,4,"getVendorsWithConsentPurpose"],[477,32,480,32,"getVendorsWithConsentPurpose"],[477,33,480,33,"purposeId"],[477,42,480,42],[477,44,480,44],[478,6,481,8],[478,13,481,15],[478,17,481,19],[478,18,481,20,"getFilteredVendors"],[478,36,481,38],[478,37,481,39],[478,46,481,48],[478,48,481,50,"purposeId"],[478,57,481,59],[478,59,481,61],[478,68,481,70],[478,69,481,71],[479,4,482,4],[480,4,483,4],[481,0,484,0],[482,0,485,0],[483,0,486,0],[484,0,487,0],[485,0,488,0],[486,4,489,4,"getVendorsWithLegIntPurpose"],[486,31,489,31,"getVendorsWithLegIntPurpose"],[486,32,489,32,"purposeId"],[486,41,489,41],[486,43,489,43],[487,6,490,8],[487,13,490,15],[487,17,490,19],[487,18,490,20,"getFilteredVendors"],[487,36,490,38],[487,37,490,39],[487,46,490,48],[487,48,490,50,"purposeId"],[487,57,490,59],[487,59,490,61],[487,67,490,69],[487,68,490,70],[488,4,491,4],[489,4,492,4],[490,0,493,0],[491,0,494,0],[492,0,495,0],[493,0,496,0],[494,0,497,0],[495,4,498,4,"getVendorsWithFlexiblePurpose"],[495,33,498,33,"getVendorsWithFlexiblePurpose"],[495,34,498,34,"purposeId"],[495,43,498,43],[495,45,498,45],[496,6,499,8],[496,13,499,15],[496,17,499,19],[496,18,499,20,"getFilteredVendors"],[496,36,499,38],[496,37,499,39],[496,46,499,48],[496,48,499,50,"purposeId"],[496,57,499,59],[496,59,499,61],[496,69,499,71],[496,70,499,72],[497,4,500,4],[498,4,501,4],[499,0,502,0],[500,0,503,0],[501,0,504,0],[502,0,505,0],[503,0,506,0],[504,4,507,4,"getVendorsWithSpecialPurpose"],[504,32,507,32,"getVendorsWithSpecialPurpose"],[504,33,507,33,"specialPurposeId"],[504,49,507,49],[504,51,507,51],[505,6,508,8],[505,13,508,15],[505,17,508,19],[505,18,508,20,"getFilteredVendors"],[505,36,508,38],[505,37,508,39],[505,46,508,48],[505,48,508,50,"specialPurposeId"],[505,64,508,66],[505,66,508,68,"undefined"],[505,75,508,77],[505,77,508,79],[505,81,508,83],[505,82,508,84],[506,4,509,4],[507,4,510,4],[508,0,511,0],[509,0,512,0],[510,0,513,0],[511,0,514,0],[512,0,515,0],[513,4,516,4,"getVendorsWithFeature"],[513,25,516,25,"getVendorsWithFeature"],[513,26,516,26,"featureId"],[513,35,516,35],[513,37,516,37],[514,6,517,8],[514,13,517,15],[514,17,517,19],[514,18,517,20,"getFilteredVendors"],[514,36,517,38],[514,37,517,39],[514,46,517,48],[514,48,517,50,"featureId"],[514,57,517,59],[514,58,517,60],[515,4,518,4],[516,4,519,4],[517,0,520,0],[518,0,521,0],[519,0,522,0],[520,0,523,0],[521,0,524,0],[522,4,525,4,"getVendorsWithSpecialFeature"],[522,32,525,32,"getVendorsWithSpecialFeature"],[522,33,525,33,"specialFeatureId"],[522,49,525,49],[522,51,525,51],[523,6,526,8],[523,13,526,15],[523,17,526,19],[523,18,526,20,"getFilteredVendors"],[523,36,526,38],[523,37,526,39],[523,46,526,48],[523,48,526,50,"specialFeatureId"],[523,64,526,66],[523,66,526,68,"undefined"],[523,75,526,77],[523,77,526,79],[523,81,526,83],[523,82,526,84],[524,4,527,4],[525,4,528,4],[526,0,529,0],[527,0,530,0],[528,0,531,0],[529,0,532,0],[530,0,533,0],[531,4,534,4],[531,8,534,8,"vendors"],[531,15,534,15,"vendors"],[531,16,534,15],[531,18,534,18],[532,6,535,8],[532,13,535,15],[532,17,535,19],[532,18,535,20,"vendors_"],[532,26,535,28],[533,4,536,4],[534,4,537,4],[535,0,538,0],[536,0,539,0],[537,0,540,0],[538,0,541,0],[539,0,542,0],[540,4,543,4,"narrowVendorsTo"],[540,19,543,19,"narrowVendorsTo"],[540,20,543,20,"vendorIds"],[540,29,543,29],[540,31,543,31],[541,6,544,8],[541,10,544,12],[541,11,544,13,"mapVendors"],[541,21,544,23],[541,22,544,24,"vendorIds"],[541,31,544,33],[541,32,544,34],[542,4,545,4],[543,4,546,4],[544,0,547,0],[545,0,548,0],[546,0,549,0],[547,0,550,0],[548,0,551,0],[549,0,552,0],[550,0,553,0],[551,4,554,4],[551,8,554,8,"isReady"],[551,15,554,15,"isReady"],[551,16,554,15],[551,18,554,18],[552,6,555,8],[552,13,555,15],[552,17,555,19],[552,18,555,20,"isReady_"],[552,26,555,28],[553,4,556,4],[554,4,557,4],[555,0,558,0],[556,0,559,0],[557,0,560,0],[558,0,561,0],[559,0,562,0],[560,4,563,4,"clone"],[560,9,563,9,"clone"],[560,10,563,9],[560,12,563,12],[561,6,564,8],[561,12,564,14,"result"],[561,18,564,20],[561,21,564,23],[561,25,564,27,"GVL"],[561,28,564,30],[561,29,564,31],[561,33,564,35],[561,34,564,36,"getJson"],[561,41,564,43],[561,42,564,44],[561,43,564,45],[561,44,564,46],[562,6,565,8],[563,0,566,0],[564,0,567,0],[565,0,568,0],[566,6,569,8],[566,10,569,12],[566,14,569,16],[566,15,569,17,"lang_"],[566,20,569,22],[566,25,569,27,"GVL"],[566,28,569,30],[566,29,569,31,"DEFAULT_LANGUAGE"],[566,45,569,47],[566,47,569,49],[567,8,570,12],[568,0,571,0],[569,0,572,0],[570,0,573,0],[571,0,574,0],[572,0,575,0],[573,8,576,12,"result"],[573,14,576,18],[573,15,576,19,"changeLanguage"],[573,29,576,33],[573,30,576,34],[573,34,576,38],[573,35,576,39,"lang_"],[573,40,576,44],[573,41,576,45],[574,6,577,8],[575,6,578,8],[575,13,578,15,"result"],[575,19,578,21],[576,4,579,4],[577,4,580,4],[577,11,580,11,"isInstanceOf"],[577,23,580,23,"isInstanceOf"],[577,24,580,24,"questionableInstance"],[577,44,580,44],[577,46,580,46],[578,6,581,8],[578,12,581,14,"isSo"],[578,16,581,18],[578,19,581,21],[578,26,581,28,"questionableInstance"],[578,46,581,48],[578,51,581,53],[578,59,581,61],[579,6,582,8],[579,13,582,16,"isSo"],[579,17,582,20],[579,21,582,24],[579,28,582,31,"questionableInstance"],[579,48,582,51],[579,49,582,52,"narrowVendorsTo"],[579,64,582,67],[579,69,582,72],[579,79,582,82],[580,4,583,4],[581,2,584,0],[582,0,584,1],[582,3]],"functionMap":{"names":["<global>","GVL","set__baseUrl","get__baseUrl","constructor","emptyLanguageCache","emptyCache","cacheLanguage","fetchJson","getJson","changeLanguage","get__language","isVendorList","populate","mapVendors","Object.keys.forEach$argument_0","Object.keys.map$argument_0","vendorIds.reduce$argument_0","vendor.purposes.forEach$argument_0","vendor.specialPurposes.forEach$argument_0","vendor.legIntPurposes.forEach$argument_0","vendor.flexiblePurposes.forEach$argument_0","vendor.features.forEach$argument_0","vendor.specialFeatures.forEach$argument_0","getFilteredVendors","vendorSet.forEach$argument_0","getVendorsWithConsentPurpose","getVendorsWithLegIntPurpose","getVendorsWithFlexiblePurpose","getVendorsWithSpecialPurpose","getVendorsWithFeature","getVendorsWithSpecialFeature","get__vendors","narrowVendorsTo","get__isReady","clone","isInstanceOf"],"mappings":"AAA;OCU;IC6B;KDU;IEY;KFE;IG4H;KH8C;IIS;KJW;IKQ;KLW;IMC;KNU;IOC;KPO;IQQ;KRa;ISS;KT6B;IUC;KVE;IWC;KXE;IYC;KZuC;IaC;2CCO;SDM;kDCE;SDE;2CCE;SDE;kDCE;SDE;6DEE,aF;yCGI;wCCG;iBDG;+CEC;iBFE;8CGC;iBHE;oDIG;qBJE;wCKE;iBLE;+CMC;iBNE;SHI;KbC;IuBC;0BCU;SDE;KvBE;IyBO;KzBE;I0BO;K1BE;I2BO;K3BE;I4BO;K5BE;I6BO;K7BE;I8BO;K9BE;I+BO;K/BE;IgCO;KhCE;IiCS;KjCE;IkCO;KlCgB;ImCC;KnCG;CDC"},"hasCjsExports":false},"type":"js/module"}]}