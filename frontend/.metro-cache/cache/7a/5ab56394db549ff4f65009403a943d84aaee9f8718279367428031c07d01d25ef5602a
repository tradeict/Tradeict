{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"Cloneable\", {\n    enumerable: true,\n    get: function () {\n      return Cloneable;\n    }\n  });\n  /**\n   * Abstract Class Cloneable<T> can be extended to give the child class the ability to clone its self.\n   * The child class must pass its class to super. You can then pass any needed arguments to help build\n   * the cloned class to the protected _clone() method.\n   *\n   * Example:\n   *\n   * class Example extends Cloneable<Example> {\n   *\n   * }\n   * Todo: There must be more non primitive build in types to check. But for our current purposes, this works great.\n   */\n  class Cloneable {\n    /**\n     * clone - returns a copy of the classes with new values and not references\n     *\n     * @return {T}\n     */\n    clone() {\n      const myClone = new this.constructor();\n      const keys = Object.keys(this);\n      keys.forEach(key => {\n        const value = this.deepClone(this[key]);\n        if (value !== undefined) {\n          myClone[key] = value;\n        }\n      });\n      return myClone;\n    }\n    /**\n     * deepClone - recursive function that makes copies of reference values\n     *\n     * @param {unknown} item\n     * @return {unknown}\n     */\n    deepClone(item) {\n      const itsType = typeof item;\n      if (itsType === 'number' || itsType === 'string' || itsType === 'boolean') {\n        return item;\n      } else if (item !== null && itsType === 'object') {\n        if (typeof item.clone === 'function') {\n          return item.clone();\n        } else if (item instanceof Date) {\n          return new Date(item.getTime());\n        } else if (item[Symbol.iterator] !== undefined) {\n          const ar = [];\n          for (const subItem of item) {\n            ar.push(this.deepClone(subItem));\n          }\n          if (item instanceof Array) {\n            return ar;\n          } else {\n            return new item.constructor(ar);\n          }\n        } else {\n          const retr = {};\n          for (const prop in item) {\n            if (item.hasOwnProperty(prop)) {\n              retr[prop] = this.deepClone(item[prop]);\n            }\n          }\n          return retr;\n        }\n      }\n      /**\n       * ignore functions because those will be initialized with the cloning\n       * process\n       */\n    }\n  }\n});","lineCount":83,"map":[[7,2,13,0,"Object"],[7,8,13,0],[7,9,13,0,"defineProperty"],[7,23,13,0],[7,24,13,0,"exports"],[7,31,13,0],[8,4,13,0,"enumerable"],[8,14,13,0],[9,4,13,0,"get"],[9,7,13,0],[9,18,13,0,"get"],[9,19,13,0],[10,6,13,0],[10,13,13,0,"Cloneable"],[10,22,13,0],[11,4,13,0],[12,2,13,0],[13,2,1,0],[14,0,2,0],[15,0,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,2,13,7],[25,8,13,13,"Cloneable"],[25,17,13,22],[25,18,13,23],[26,4,14,4],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,4,19,4,"clone"],[31,9,19,9,"clone"],[31,10,19,9],[31,12,19,12],[32,6,20,8],[32,12,20,14,"myClone"],[32,19,20,21],[32,22,20,24],[32,26,20,28],[32,30,20,32],[32,31,20,33,"constructor"],[32,42,20,44],[32,43,20,45],[32,44,20,46],[33,6,21,8],[33,12,21,14,"keys"],[33,16,21,18],[33,19,21,21,"Object"],[33,25,21,27],[33,26,21,28,"keys"],[33,30,21,32],[33,31,21,33],[33,35,21,37],[33,36,21,38],[34,6,22,8,"keys"],[34,10,22,12],[34,11,22,13,"forEach"],[34,18,22,20],[34,19,22,22,"key"],[34,22,22,25],[34,26,22,30],[35,8,23,12],[35,14,23,18,"value"],[35,19,23,23],[35,22,23,26],[35,26,23,30],[35,27,23,31,"deepClone"],[35,36,23,40],[35,37,23,41],[35,41,23,45],[35,42,23,46,"key"],[35,45,23,49],[35,46,23,50],[35,47,23,51],[36,8,24,12],[36,12,24,16,"value"],[36,17,24,21],[36,22,24,26,"undefined"],[36,31,24,35],[36,33,24,37],[37,10,25,16,"myClone"],[37,17,25,23],[37,18,25,24,"key"],[37,21,25,27],[37,22,25,28],[37,25,25,31,"value"],[37,30,25,36],[38,8,26,12],[39,6,27,8],[39,7,27,9],[39,8,27,10],[40,6,28,8],[40,13,28,15,"myClone"],[40,20,28,22],[41,4,29,4],[42,4,31,4],[43,0,32,0],[44,0,33,0],[45,0,34,0],[46,0,35,0],[47,0,36,0],[48,4,37,4,"deepClone"],[48,13,37,13,"deepClone"],[48,14,37,14,"item"],[48,18,37,18],[48,20,37,20],[49,6,38,8],[49,12,38,14,"itsType"],[49,19,38,21],[49,22,38,24],[49,29,38,31,"item"],[49,33,38,35],[50,6,39,8],[50,10,39,12,"itsType"],[50,17,39,19],[50,22,39,24],[50,30,39,32],[50,34,39,36,"itsType"],[50,41,39,43],[50,46,39,48],[50,54,39,56],[50,58,39,60,"itsType"],[50,65,39,67],[50,70,39,72],[50,79,39,81],[50,81,39,83],[51,8,40,12],[51,15,40,19,"item"],[51,19,40,23],[52,6,41,8],[52,7,41,9],[52,13,42,13],[52,17,42,17,"item"],[52,21,42,21],[52,26,42,26],[52,30,42,30],[52,34,42,34,"itsType"],[52,41,42,41],[52,46,42,46],[52,54,42,54],[52,56,42,56],[53,8,43,12],[53,12,43,16],[53,19,43,23,"item"],[53,23,43,27],[53,24,43,28,"clone"],[53,29,43,33],[53,34,43,38],[53,44,43,48],[53,46,43,50],[54,10,44,16],[54,17,44,23,"item"],[54,21,44,27],[54,22,44,28,"clone"],[54,27,44,33],[54,28,44,34],[54,29,44,35],[55,8,45,12],[55,9,45,13],[55,15,46,17],[55,19,46,21,"item"],[55,23,46,25],[55,35,46,37,"Date"],[55,39,46,41],[55,41,46,43],[56,10,47,16],[56,17,47,23],[56,21,47,27,"Date"],[56,25,47,31],[56,26,47,32,"item"],[56,30,47,36],[56,31,47,37,"getTime"],[56,38,47,44],[56,39,47,45],[56,40,47,46],[56,41,47,47],[57,8,48,12],[57,9,48,13],[57,15,49,17],[57,19,49,21,"item"],[57,23,49,25],[57,24,49,26,"Symbol"],[57,30,49,32],[57,31,49,33,"iterator"],[57,39,49,41],[57,40,49,42],[57,45,49,47,"undefined"],[57,54,49,56],[57,56,49,58],[58,10,50,16],[58,16,50,22,"ar"],[58,18,50,24],[58,21,50,27],[58,23,50,29],[59,10,51,16],[59,15,51,21],[59,21,51,27,"subItem"],[59,28,51,34],[59,32,51,38,"item"],[59,36,51,42],[59,38,51,44],[60,12,52,20,"ar"],[60,14,52,22],[60,15,52,23,"push"],[60,19,52,27],[60,20,52,28],[60,24,52,32],[60,25,52,33,"deepClone"],[60,34,52,42],[60,35,52,43,"subItem"],[60,42,52,50],[60,43,52,51],[60,44,52,52],[61,10,53,16],[62,10,54,16],[62,14,54,20,"item"],[62,18,54,24],[62,30,54,36,"Array"],[62,35,54,41],[62,37,54,43],[63,12,55,20],[63,19,55,27,"ar"],[63,21,55,29],[64,10,56,16],[64,11,56,17],[64,17,57,21],[65,12,58,20],[65,19,58,27],[65,23,58,31,"item"],[65,27,58,35],[65,28,58,36,"constructor"],[65,39,58,47],[65,40,58,48,"ar"],[65,42,58,50],[65,43,58,51],[66,10,59,16],[67,8,60,12],[67,9,60,13],[67,15,61,17],[68,10,62,16],[68,16,62,22,"retr"],[68,20,62,26],[68,23,62,29],[68,24,62,30],[68,25,62,31],[69,10,63,16],[69,15,63,21],[69,21,63,27,"prop"],[69,25,63,31],[69,29,63,35,"item"],[69,33,63,39],[69,35,63,41],[70,12,64,20],[70,16,64,24,"item"],[70,20,64,28],[70,21,64,29,"hasOwnProperty"],[70,35,64,43],[70,36,64,44,"prop"],[70,40,64,48],[70,41,64,49],[70,43,64,51],[71,14,65,24,"retr"],[71,18,65,28],[71,19,65,29,"prop"],[71,23,65,33],[71,24,65,34],[71,27,65,37],[71,31,65,41],[71,32,65,42,"deepClone"],[71,41,65,51],[71,42,65,52,"item"],[71,46,65,56],[71,47,65,57,"prop"],[71,51,65,61],[71,52,65,62],[71,53,65,63],[72,12,66,20],[73,10,67,16],[74,10,68,16],[74,17,68,23,"retr"],[74,21,68,27],[75,8,69,12],[76,6,70,8],[77,6,71,8],[78,0,72,0],[79,0,73,0],[80,0,74,0],[81,4,75,4],[82,2,76,0],[83,0,76,1],[83,3]],"functionMap":{"names":["<global>","Cloneable","clone","keys.forEach$argument_0","deepClone"],"mappings":"AAA;OCY;ICM;qBCG;SDK;KDE;IGQ;KHsC;CDC"},"hasCjsExports":false},"type":"js/module"}]}