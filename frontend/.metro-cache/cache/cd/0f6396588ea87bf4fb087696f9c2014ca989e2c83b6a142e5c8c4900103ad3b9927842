{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":74,"index":131}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./ExpoWebBrowser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":132},"end":{"line":3,"column":50,"index":182}}],"key":"OZkL6dn5GThy2fR1W+98Qlxlxh4=","exportNames":["*"],"imports":1}},{"name":"./WebBrowser.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":183},"end":{"line":4,"column":88,"index":271}}],"key":"29Oh91VcmrXUhNZnDncgfxSU3bQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"WebBrowserResultType\", {\n    enumerable: true,\n    get: function () {\n      return _WebBrowserTypes.WebBrowserResultType;\n    }\n  });\n  Object.defineProperty(exports, \"WebBrowserPresentationStyle\", {\n    enumerable: true,\n    get: function () {\n      return _WebBrowserTypes.WebBrowserPresentationStyle;\n    }\n  });\n  exports.getCustomTabsSupportingBrowsersAsync = getCustomTabsSupportingBrowsersAsync;\n  exports.warmUpAsync = warmUpAsync;\n  exports.mayInitWithUrlAsync = mayInitWithUrlAsync;\n  exports.coolDownAsync = coolDownAsync;\n  exports.openBrowserAsync = openBrowserAsync;\n  exports.dismissBrowser = dismissBrowser;\n  exports.openAuthSessionAsync = openAuthSessionAsync;\n  exports.dismissAuthSession = dismissAuthSession;\n  exports.maybeCompleteAuthSession = maybeCompleteAuthSession;\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _ExpoWebBrowser = require(_dependencyMap[3], \"./ExpoWebBrowser\");\n  var ExponentWebBrowser = _interopDefault(_ExpoWebBrowser);\n  var _WebBrowserTypes = require(_dependencyMap[4], \"./WebBrowser.types\");\n  var emptyCustomTabsPackages = {\n    defaultBrowserPackage: undefined,\n    preferredBrowserPackage: undefined,\n    browserPackages: [],\n    servicePackages: []\n  };\n  // @needsAudit\n  /**\n   * Returns a list of applications package names supporting Custom Tabs, Custom Tabs\n   * service, user chosen and preferred one. This may not be fully reliable, since it uses\n   * `PackageManager.getResolvingActivities` under the hood. (For example, some browsers might not be\n   * present in browserPackages list once another browser is set to default.)\n   *\n   * @return The promise which fulfils with [`WebBrowserCustomTabsResults`](#webbrowsercustomtabsresults) object.\n   * @platform android\n   */\n  function getCustomTabsSupportingBrowsersAsync() {\n    return _getCustomTabsSupportingBrowsersAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * This method calls `warmUp` method on [CustomTabsClient](https://developer.android.com/reference/android/support/customtabs/CustomTabsClient.html#warmup(long))\n   * for specified package.\n   *\n   * @param browserPackage Package of browser to be warmed up. If not set, preferred browser will be warmed.\n   *\n   * @return A promise which fulfils with `WebBrowserWarmUpResult` object.\n   * @platform android\n   */\n  function _getCustomTabsSupportingBrowsersAsync() {\n    _getCustomTabsSupportingBrowsersAsync = (0, _asyncToGenerator.default)(function* () {\n      if (!ExponentWebBrowser.default.getCustomTabsSupportingBrowsersAsync) {\n        throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'getCustomTabsSupportingBrowsersAsync');\n      }\n      if (_reactNative.Platform.OS !== 'android') {\n        return emptyCustomTabsPackages;\n      } else {\n        return yield ExponentWebBrowser.default.getCustomTabsSupportingBrowsersAsync();\n      }\n    });\n    return _getCustomTabsSupportingBrowsersAsync.apply(this, arguments);\n  }\n  function warmUpAsync(_x) {\n    return _warmUpAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * This method initiates (if needed) [CustomTabsSession](https://developer.android.com/reference/android/support/customtabs/CustomTabsSession.html#maylaunchurl)\n   * and calls its `mayLaunchUrl` method for browser specified by the package.\n   *\n   * @param url The url of page that is likely to be loaded first when opening browser.\n   * @param browserPackage Package of browser to be informed. If not set, preferred\n   * browser will be used.\n   *\n   * @return A promise which fulfils with `WebBrowserMayInitWithUrlResult` object.\n   * @platform android\n   */\n  function _warmUpAsync() {\n    _warmUpAsync = (0, _asyncToGenerator.default)(function* (browserPackage) {\n      if (!ExponentWebBrowser.default.warmUpAsync) {\n        throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'warmUpAsync');\n      }\n      if (_reactNative.Platform.OS !== 'android') {\n        return {};\n      } else {\n        return yield ExponentWebBrowser.default.warmUpAsync(browserPackage);\n      }\n    });\n    return _warmUpAsync.apply(this, arguments);\n  }\n  function mayInitWithUrlAsync(_x2, _x3) {\n    return _mayInitWithUrlAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * This methods removes all bindings to services created by [`warmUpAsync`](#webbrowserwarmupasyncbrowserpackage)\n   * or [`mayInitWithUrlAsync`](#webbrowsermayinitwithurlasyncurl-browserpackage). You should call\n   * this method once you don't need them to avoid potential memory leaks. However, those binding\n   * would be cleared once your application is destroyed, which might be sufficient in most cases.\n   *\n   * @param browserPackage Package of browser to be cooled. If not set, preferred browser will be used.\n   *\n   * @return The promise which fulfils with ` WebBrowserCoolDownResult` when cooling is performed, or\n   * an empty object when there was no connection to be dismissed.\n   * @platform android\n   */\n  function _mayInitWithUrlAsync() {\n    _mayInitWithUrlAsync = (0, _asyncToGenerator.default)(function* (url, browserPackage) {\n      if (!ExponentWebBrowser.default.mayInitWithUrlAsync) {\n        throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'mayInitWithUrlAsync');\n      }\n      if (_reactNative.Platform.OS !== 'android') {\n        return {};\n      } else {\n        return yield ExponentWebBrowser.default.mayInitWithUrlAsync(url, browserPackage);\n      }\n    });\n    return _mayInitWithUrlAsync.apply(this, arguments);\n  }\n  function coolDownAsync(_x4) {\n    return _coolDownAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Opens the url with Safari in a modal on iOS using [`SFSafariViewController`](https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller),\n   * and Chrome in a new [custom tab](https://developer.chrome.com/multidevice/android/customtabs)\n   * on Android. On iOS, the modal Safari will not share cookies with the system Safari. If you need\n   * this, use [`openAuthSessionAsync`](#webbrowseropenauthsessionasyncurl-redirecturl-options).\n   *\n   * @param url The url to open in the web browser.\n   * @param browserParams A dictionary of key-value pairs.\n   *\n   * @return The promise behaves differently based on the platform.\n   * On Android promise resolves with `{ type: 'opened' }` if we were able to open browser.\n   * On iOS:\n   * - If the user closed the web browser, the Promise resolves with `{ type: 'cancel' }`.\n   * - If the browser is closed using [`dismissBrowser`](#webbrowserdismissbrowser), the Promise resolves with `{ type: 'dismiss' }`.\n   */\n  function _coolDownAsync() {\n    _coolDownAsync = (0, _asyncToGenerator.default)(function* (browserPackage) {\n      if (!ExponentWebBrowser.default.coolDownAsync) {\n        throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'coolDownAsync');\n      }\n      if (_reactNative.Platform.OS !== 'android') {\n        return {};\n      } else {\n        return yield ExponentWebBrowser.default.coolDownAsync(browserPackage);\n      }\n    });\n    return _coolDownAsync.apply(this, arguments);\n  }\n  function openBrowserAsync(_x5) {\n    return _openBrowserAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Dismisses the presented web browser.\n   *\n   * @return The promise that resolves with `{ type: 'dismiss' }` on the successful attempt or throws an error if dismiss functionality is not available.\n   * @platform ios\n   */\n  function _openBrowserAsync() {\n    _openBrowserAsync = (0, _asyncToGenerator.default)(function* (url) {\n      var browserParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!ExponentWebBrowser.default.openBrowserAsync) {\n        throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'openBrowserAsync');\n      }\n      return yield ExponentWebBrowser.default.openBrowserAsync(url, _processOptions(browserParams));\n    });\n    return _openBrowserAsync.apply(this, arguments);\n  }\n  function dismissBrowser() {\n    return ExponentWebBrowser.default.dismissBrowser?.();\n  }\n  // @needsAudit\n  /**\n   * # On Android:\n   * This will be done using a \"custom Chrome tabs\" browser, [AppState](https://reactnative.dev/docs/appstate),\n   * and [Linking](./linking/) APIs.\n   *\n   * # On iOS:\n   * Opens the url with Safari in a modal using `ASWebAuthenticationSession`. The user will be asked\n   * whether to allow the app to authenticate using the given url.\n   * To handle redirection back to the mobile application, the redirect URI set in the authentication server\n   * has to use the protocol provided as the scheme in **app.json** [`expo.scheme`](./../config/app/#scheme).\n   * For example, `demo://` not `https://` protocol.\n   * Using `Linking.addEventListener` is not needed and can have side effects.\n   *\n   * # On web:\n   * > This API can only be used in a secure environment (localhost/https).\n   * to test this. Otherwise, an error with code [`ERR_WEB_BROWSER_CRYPTO`](#err_web_browser_crypto) will be thrown.\n   * This will use the browser's [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open) API.\n   * - _Desktop_: This will create a new web popup window in the browser that can be closed later using `WebBrowser.maybeCompleteAuthSession()`.\n   * - _Mobile_: This will open a new tab in the browser which can be closed using `WebBrowser.maybeCompleteAuthSession()`.\n   *\n   * How this works on web:\n   * - A crypto state will be created for verifying the redirect.\n   *   - This means you need to run with `npx expo start --https`\n   * - The state will be added to the window's `localstorage`. This ensures that auth cannot complete\n   *   unless it's done from a page running with the same origin as it was started.\n   *   Ex: if `openAuthSessionAsync` is invoked on `https://localhost:19006`, then `maybeCompleteAuthSession`\n   *   must be invoked on a page hosted from the origin `https://localhost:19006`. Using a different\n   *   website, or even a different host like `https://128.0.0.*:19006` for example will not work.\n   * - A timer will be started to check for every 1000 milliseconds (1 second) to detect if the window\n   *   has been closed by the user. If this happens then a promise will resolve with `{ type: 'dismiss' }`.\n   *\n   * > On mobile web, Chrome and Safari will block any call to [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open)\n   * which takes too long to fire after a user interaction. This method must be invoked immediately\n   * after a user interaction. If the event is blocked, an error with code [`ERR_WEB_BROWSER_BLOCKED`](#err_web_browser_blocked) will be thrown.\n   *\n   * @param url The url to open in the web browser. This should be a login page.\n   * @param redirectUrl _Optional_ - The url to deep link back into your app.\n   * On web, this defaults to the output of [`Linking.createURL(\"\")`](./linking/#linkingcreateurlpath-namedparameters).\n   * @param options _Optional_ - An object extending the [`WebBrowserOpenOptions`](#webbrowseropenoptions).\n   * If there is no native AuthSession implementation available (which is the case on Android)\n   * these params will be used in the browser polyfill. If there is a native AuthSession implementation,\n   * these params will be ignored.\n   *\n   * @return\n   * - If the user does not permit the application to authenticate with the given url, the Promise fulfills with `{ type: 'cancel' }` object.\n   * - If the user closed the web browser, the Promise fulfills with `{ type: 'cancel' }` object.\n   * - If the browser is closed using [`dismissBrowser`](#webbrowserdismissbrowser),\n   * the Promise fulfills with `{ type: 'dismiss' }` object.\n   */\n  function openAuthSessionAsync(_x6, _x7) {\n    return _openAuthSessionAsync.apply(this, arguments);\n  }\n  /**\n   * Dismisses the current authentication session. On web, it will close the popup window associated with auth process.\n   *\n   * @return The `void` on the successful attempt or throws an error if dismiss functionality is not available.\n   *\n   * @platform ios\n   * @platform web\n   */\n  function _openAuthSessionAsync() {\n    _openAuthSessionAsync = (0, _asyncToGenerator.default)(function* (url, redirectUrl) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (_authSessionIsNativelySupported()) {\n        if (!ExponentWebBrowser.default.openAuthSessionAsync) {\n          throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'openAuthSessionAsync');\n        }\n        if (['ios', 'macos', 'web'].includes(_reactNative.Platform.OS)) {\n          return ExponentWebBrowser.default.openAuthSessionAsync(url, redirectUrl, _processOptions(options));\n        }\n        return ExponentWebBrowser.default.openAuthSessionAsync(url, redirectUrl);\n      } else {\n        return _openAuthSessionPolyfillAsync(url, redirectUrl, options);\n      }\n    });\n    return _openAuthSessionAsync.apply(this, arguments);\n  }\n  function dismissAuthSession() {\n    if (_authSessionIsNativelySupported()) {\n      if (!ExponentWebBrowser.default.dismissAuthSession) {\n        throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'dismissAuthSession');\n      }\n      ExponentWebBrowser.default.dismissAuthSession();\n    } else {\n      if (!ExponentWebBrowser.default.dismissBrowser) {\n        throw new _expoModulesCore.UnavailabilityError('WebBrowser', 'dismissBrowser');\n      }\n      ExponentWebBrowser.default.dismissBrowser();\n    }\n  }\n  // @needsAudit\n  /**\n   * Possibly completes an authentication session on web in a window popup. The method\n   * should be invoked on the page that the window redirects to.\n   *\n   * @param options\n   *\n   * @return Returns an object with message about why the redirect failed or succeeded:\n   *\n   * If `type` is set to `failed`, the reason depends on the message:\n   * - `Not supported on this platform`: If the platform doesn't support this method (Android, iOS).\n   * - `Cannot use expo-web-browser in a non-browser environment`: If the code was executed in an SSR\n   *   or node environment.\n   * - `No auth session is currently in progress`: (the cached state wasn't found in local storage).\n   *   This can happen if the window redirects to an origin (website) that is different to the initial\n   *   website origin. If this happens in development, it may be because the auth started on localhost\n   *   and finished on your computer port (Ex: `128.0.0.*`). This is controlled by the `redirectUrl`\n   *   and `returnUrl`.\n   * - `Current URL \"<URL>\" and original redirect URL \"<URL>\" do not match`: This can occur when the\n   *   redirect URL doesn't match what was initial defined as the `returnUrl`. You can skip this test\n   *   in development by passing `{ skipRedirectCheck: true }` to the function.\n   *\n   * If `type` is set to `success`, the parent window will attempt to close the child window immediately.\n   *\n   * If the error `ERR_WEB_BROWSER_REDIRECT` was thrown, it may mean that the parent window was\n   * reloaded before the auth was completed. In this case you'll need to close the child window manually.\n   *\n   * @platform web\n   */\n  function maybeCompleteAuthSession() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (ExponentWebBrowser.default.maybeCompleteAuthSession) {\n      return ExponentWebBrowser.default.maybeCompleteAuthSession(options);\n    }\n    return {\n      type: 'failed',\n      message: 'Not supported on this platform'\n    };\n  }\n  function _processOptions(options) {\n    return {\n      ...options,\n      controlsColor: (0, _reactNative.processColor)(options.controlsColor),\n      toolbarColor: (0, _reactNative.processColor)(options.toolbarColor),\n      secondaryToolbarColor: (0, _reactNative.processColor)(options.secondaryToolbarColor)\n    };\n  }\n  /* Android polyfill for ASWebAuthenticationSession flow */\n  function _authSessionIsNativelySupported() {\n    return _reactNative.Platform.OS !== 'android';\n  }\n  var _redirectSubscription = null;\n  /*\n   * openBrowserAsync on Android doesn't wait until closed, so we need to polyfill\n   * it with AppState\n   */\n  // Store the `resolve` function from a Promise to fire when the AppState\n  // returns to active\n  var _onWebBrowserCloseAndroid = null;\n  // If the initial AppState.currentState is null, we assume that the first call to\n  // AppState#change event is not actually triggered by a real change,\n  // is triggered instead by the bridge capturing the current state\n  // (https://reactnative.dev/docs/appstate#basic-usage)\n  var _isAppStateAvailable = _reactNative.AppState.currentState !== null;\n  function _onAppStateChangeAndroid(state) {\n    if (!_isAppStateAvailable) {\n      _isAppStateAvailable = true;\n      return;\n    }\n    if (state === 'active' && _onWebBrowserCloseAndroid) {\n      _onWebBrowserCloseAndroid();\n    }\n  }\n  function _openBrowserAndWaitAndroidAsync(_x8) {\n    return _openBrowserAndWaitAndroidAsync2.apply(this, arguments);\n  }\n  function _openBrowserAndWaitAndroidAsync2() {\n    _openBrowserAndWaitAndroidAsync2 = (0, _asyncToGenerator.default)(function* (startUrl) {\n      var browserParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var appStateChangedToActive = new Promise(resolve => {\n        _onWebBrowserCloseAndroid = resolve;\n      });\n      var stateChangeSubscription = _reactNative.AppState.addEventListener('change', _onAppStateChangeAndroid);\n      var result = {\n        type: _WebBrowserTypes.WebBrowserResultType.CANCEL\n      };\n      var type = null;\n      try {\n        var _yield$openBrowserAsy = yield openBrowserAsync(startUrl, browserParams);\n        type = _yield$openBrowserAsy.type;\n      } catch (e) {\n        stateChangeSubscription.remove();\n        _onWebBrowserCloseAndroid = null;\n        throw e;\n      }\n      if (type === 'opened') {\n        yield appStateChangedToActive;\n        result = {\n          type: _WebBrowserTypes.WebBrowserResultType.DISMISS\n        };\n      }\n      stateChangeSubscription.remove();\n      _onWebBrowserCloseAndroid = null;\n      return result;\n    });\n    return _openBrowserAndWaitAndroidAsync2.apply(this, arguments);\n  }\n  function _openAuthSessionPolyfillAsync(_x9, _x0) {\n    return _openAuthSessionPolyfillAsync2.apply(this, arguments);\n  }\n  function _openAuthSessionPolyfillAsync2() {\n    _openAuthSessionPolyfillAsync2 = (0, _asyncToGenerator.default)(function* (startUrl, returnUrl) {\n      var browserParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (_redirectSubscription) {\n        throw new Error(`The WebBrowser's auth session is in an invalid state with a redirect handler set when it should not be`);\n      }\n      if (_onWebBrowserCloseAndroid) {\n        throw new Error(`WebBrowser is already open, only one can be open at a time`);\n      }\n      try {\n        if (_reactNative.Platform.OS === 'android') {\n          return yield Promise.race([_openBrowserAndWaitAndroidAsync(startUrl, browserParams), _waitForRedirectAsync(returnUrl)]);\n        } else {\n          return yield Promise.race([openBrowserAsync(startUrl, browserParams), _waitForRedirectAsync(returnUrl)]);\n        }\n      } finally {\n        // We can't dismiss the browser on Android, only call this when it's available.\n        // Users on Android need to manually press the 'x' button in Chrome Custom Tabs, sadly.\n        if (ExponentWebBrowser.default.dismissBrowser) {\n          ExponentWebBrowser.default.dismissBrowser();\n        }\n        _stopWaitingForRedirect();\n      }\n    });\n    return _openAuthSessionPolyfillAsync2.apply(this, arguments);\n  }\n  function _stopWaitingForRedirect() {\n    if (!_redirectSubscription) {\n      throw new Error(`The WebBrowser auth session is in an invalid state with no redirect handler when one should be set`);\n    }\n    _redirectSubscription.remove();\n    _redirectSubscription = null;\n  }\n  function _waitForRedirectAsync(returnUrl) {\n    // Note that this Promise never resolves when `returnUrl` is nullish\n    return new Promise(resolve => {\n      var redirectHandler = event => {\n        if (returnUrl && event.url.startsWith(returnUrl)) {\n          resolve({\n            url: event.url,\n            type: 'success'\n          });\n        }\n      };\n      _redirectSubscription = _reactNative.Linking.addEventListener('url', redirectHandler);\n    });\n  }\n});","lineCount":437,"map":[[12,2,5,0,"Object"],[12,8,5,0],[12,9,5,0,"defineProperty"],[12,23,5,0],[12,24,5,0,"exports"],[12,31,5,0],[13,4,5,0,"enumerable"],[13,14,5,0],[14,4,5,0,"get"],[14,7,5,0],[14,18,5,0,"get"],[14,19,5,0],[15,6,5,0],[15,13,5,9,"WebBrowserResultType"],[15,29,5,29],[15,30,5,29,"WebBrowserResultType"],[15,50,5,29],[16,4,5,29],[17,2,5,29],[18,2,5,0,"Object"],[18,8,5,0],[18,9,5,0,"defineProperty"],[18,23,5,0],[18,24,5,0,"exports"],[18,31,5,0],[19,4,5,0,"enumerable"],[19,14,5,0],[20,4,5,0,"get"],[20,7,5,0],[20,18,5,0,"get"],[20,19,5,0],[21,6,5,0],[21,13,5,31,"WebBrowserPresentationStyle"],[21,29,5,58],[21,30,5,58,"WebBrowserPresentationStyle"],[21,57,5,58],[22,4,5,58],[23,2,5,58],[24,2,22,0,"exports"],[24,9,22,0],[24,10,22,0,"getCustomTabsSupportingBrowsersAsync"],[24,46,22,0],[24,49,22,0,"getCustomTabsSupportingBrowsersAsync"],[24,85,22,0],[25,2,43,0,"exports"],[25,9,43,0],[25,10,43,0,"warmUpAsync"],[25,21,43,0],[25,24,43,0,"warmUpAsync"],[25,35,43,0],[26,2,66,0,"exports"],[26,9,66,0],[26,10,66,0,"mayInitWithUrlAsync"],[26,29,66,0],[26,32,66,0,"mayInitWithUrlAsync"],[26,51,66,0],[27,2,90,0,"exports"],[27,9,90,0],[27,10,90,0,"coolDownAsync"],[27,23,90,0],[27,26,90,0,"coolDownAsync"],[27,39,90,0],[28,2,117,0,"exports"],[28,9,117,0],[28,10,117,0,"openBrowserAsync"],[28,26,117,0],[28,29,117,0,"openBrowserAsync"],[28,45,117,0],[29,2,130,0,"exports"],[29,9,130,0],[29,10,130,0,"dismissBrowser"],[29,24,130,0],[29,27,130,0,"dismissBrowser"],[29,41,130,0],[30,2,183,0,"exports"],[30,9,183,0],[30,10,183,0,"openAuthSessionAsync"],[30,30,183,0],[30,33,183,0,"openAuthSessionAsync"],[30,53,183,0],[31,2,205,0,"exports"],[31,9,205,0],[31,10,205,0,"dismissAuthSession"],[31,28,205,0],[31,31,205,0,"dismissAuthSession"],[31,49,205,0],[32,2,248,0,"exports"],[32,9,248,0],[32,10,248,0,"maybeCompleteAuthSession"],[32,34,248,0],[32,37,248,0,"maybeCompleteAuthSession"],[32,61,248,0],[33,2,253,1],[33,6,253,1,"_babelRuntimeHelpersAsyncToGenerator"],[33,42,253,1],[33,45,253,1,"require"],[33,52,253,1],[33,53,253,1,"_dependencyMap"],[33,67,253,1],[34,2,253,1],[34,6,253,1,"_asyncToGenerator"],[34,23,253,1],[34,26,253,1,"_interopDefault"],[34,41,253,1],[34,42,253,1,"_babelRuntimeHelpersAsyncToGenerator"],[34,78,253,1],[35,2,1,0],[35,6,1,0,"_expoModulesCore"],[35,22,1,0],[35,25,1,0,"require"],[35,32,1,0],[35,33,1,0,"_dependencyMap"],[35,47,1,0],[36,2,2,0],[36,6,2,0,"_reactNative"],[36,18,2,0],[36,21,2,0,"require"],[36,28,2,0],[36,29,2,0,"_dependencyMap"],[36,43,2,0],[37,2,3,0],[37,6,3,0,"_ExpoWebBrowser"],[37,21,3,0],[37,24,3,0,"require"],[37,31,3,0],[37,32,3,0,"_dependencyMap"],[37,46,3,0],[38,2,3,0],[38,6,3,0,"ExponentWebBrowser"],[38,24,3,0],[38,27,3,0,"_interopDefault"],[38,42,3,0],[38,43,3,0,"_ExpoWebBrowser"],[38,58,3,0],[39,2,4,0],[39,6,4,0,"_WebBrowserTypes"],[39,22,4,0],[39,25,4,0,"require"],[39,32,4,0],[39,33,4,0,"_dependencyMap"],[39,47,4,0],[40,2,6,0],[40,6,6,6,"emptyCustomTabsPackages"],[40,29,6,29],[40,32,6,32],[41,4,7,4,"defaultBrowserPackage"],[41,25,7,25],[41,27,7,27,"undefined"],[41,36,7,36],[42,4,8,4,"preferredBrowserPackage"],[42,27,8,27],[42,29,8,29,"undefined"],[42,38,8,38],[43,4,9,4,"browserPackages"],[43,19,9,19],[43,21,9,21],[43,23,9,23],[44,4,10,4,"servicePackages"],[44,19,10,19],[44,21,10,21],[45,2,11,0],[45,3,11,1],[46,2,12,0],[47,2,13,0],[48,0,14,0],[49,0,15,0],[50,0,16,0],[51,0,17,0],[52,0,18,0],[53,0,19,0],[54,0,20,0],[55,0,21,0],[56,2,13,0],[56,11,22,22,"getCustomTabsSupportingBrowsersAsync"],[56,47,22,58,"getCustomTabsSupportingBrowsersAsync"],[56,48,22,58],[57,4,22,58],[57,11,22,58,"_getCustomTabsSupportingBrowsersAsync"],[57,48,22,58],[57,49,22,58,"apply"],[57,54,22,58],[57,61,22,58,"arguments"],[57,70,22,58],[58,2,22,58],[58,4,33,0],[59,2,34,0],[60,0,35,0],[61,0,36,0],[62,0,37,0],[63,0,38,0],[64,0,39,0],[65,0,40,0],[66,0,41,0],[67,0,42,0],[68,2,34,0],[68,11,34,0,"_getCustomTabsSupportingBrowsersAsync"],[68,49,34,0],[69,4,34,0,"_getCustomTabsSupportingBrowsersAsync"],[69,41,34,0],[69,48,34,0,"_asyncToGenerator"],[69,65,34,0],[69,66,34,0,"default"],[69,73,34,0],[69,75,22,7],[69,88,22,61],[70,6,23,4],[70,10,23,8],[70,11,23,9,"ExponentWebBrowser"],[70,29,23,27],[70,30,23,27,"default"],[70,37,23,27],[70,38,23,28,"getCustomTabsSupportingBrowsersAsync"],[70,74,23,64],[70,76,23,66],[71,8,24,8],[71,14,24,14],[71,18,24,18,"UnavailabilityError"],[71,34,24,37],[71,35,24,37,"UnavailabilityError"],[71,54,24,37],[71,55,24,38],[71,67,24,50],[71,69,24,52],[71,107,24,90],[71,108,24,91],[72,6,25,4],[73,6,26,4],[73,10,26,8,"Platform"],[73,22,26,16],[73,23,26,16,"Platform"],[73,31,26,16],[73,32,26,17,"OS"],[73,34,26,19],[73,39,26,24],[73,48,26,33],[73,50,26,35],[74,8,27,8],[74,15,27,15,"emptyCustomTabsPackages"],[74,38,27,38],[75,6,28,4],[75,7,28,5],[75,13,29,9],[76,8,30,8],[76,21,30,21,"ExponentWebBrowser"],[76,39,30,39],[76,40,30,39,"default"],[76,47,30,39],[76,48,30,40,"getCustomTabsSupportingBrowsersAsync"],[76,84,30,76],[76,85,30,77],[76,86,30,78],[77,6,31,4],[78,4,32,0],[78,5,32,1],[79,4,32,1],[79,11,32,1,"_getCustomTabsSupportingBrowsersAsync"],[79,48,32,1],[79,49,32,1,"apply"],[79,54,32,1],[79,61,32,1,"arguments"],[79,70,32,1],[80,2,32,1],[81,2,32,1],[81,11,43,22,"warmUpAsync"],[81,22,43,33,"warmUpAsync"],[81,23,43,33,"_x"],[81,25,43,33],[82,4,43,33],[82,11,43,33,"_warmUpAsync"],[82,23,43,33],[82,24,43,33,"apply"],[82,29,43,33],[82,36,43,33,"arguments"],[82,45,43,33],[83,2,43,33],[83,4,54,0],[84,2,55,0],[85,0,56,0],[86,0,57,0],[87,0,58,0],[88,0,59,0],[89,0,60,0],[90,0,61,0],[91,0,62,0],[92,0,63,0],[93,0,64,0],[94,0,65,0],[95,2,55,0],[95,11,55,0,"_warmUpAsync"],[95,24,55,0],[96,4,55,0,"_warmUpAsync"],[96,16,55,0],[96,23,55,0,"_asyncToGenerator"],[96,40,55,0],[96,41,55,0,"default"],[96,48,55,0],[96,50,43,7],[96,61,43,34,"browserPackage"],[96,75,43,48],[96,77,43,50],[97,6,44,4],[97,10,44,8],[97,11,44,9,"ExponentWebBrowser"],[97,29,44,27],[97,30,44,27,"default"],[97,37,44,27],[97,38,44,28,"warmUpAsync"],[97,49,44,39],[97,51,44,41],[98,8,45,8],[98,14,45,14],[98,18,45,18,"UnavailabilityError"],[98,34,45,37],[98,35,45,37,"UnavailabilityError"],[98,54,45,37],[98,55,45,38],[98,67,45,50],[98,69,45,52],[98,82,45,65],[98,83,45,66],[99,6,46,4],[100,6,47,4],[100,10,47,8,"Platform"],[100,22,47,16],[100,23,47,16,"Platform"],[100,31,47,16],[100,32,47,17,"OS"],[100,34,47,19],[100,39,47,24],[100,48,47,33],[100,50,47,35],[101,8,48,8],[101,15,48,15],[101,16,48,16],[101,17,48,17],[102,6,49,4],[102,7,49,5],[102,13,50,9],[103,8,51,8],[103,21,51,21,"ExponentWebBrowser"],[103,39,51,39],[103,40,51,39,"default"],[103,47,51,39],[103,48,51,40,"warmUpAsync"],[103,59,51,51],[103,60,51,52,"browserPackage"],[103,74,51,66],[103,75,51,67],[104,6,52,4],[105,4,53,0],[105,5,53,1],[106,4,53,1],[106,11,53,1,"_warmUpAsync"],[106,23,53,1],[106,24,53,1,"apply"],[106,29,53,1],[106,36,53,1,"arguments"],[106,45,53,1],[107,2,53,1],[108,2,53,1],[108,11,66,22,"mayInitWithUrlAsync"],[108,30,66,41,"mayInitWithUrlAsync"],[108,31,66,41,"_x2"],[108,34,66,41],[108,36,66,41,"_x3"],[108,39,66,41],[109,4,66,41],[109,11,66,41,"_mayInitWithUrlAsync"],[109,31,66,41],[109,32,66,41,"apply"],[109,37,66,41],[109,44,66,41,"arguments"],[109,53,66,41],[110,2,66,41],[110,4,77,0],[111,2,78,0],[112,0,79,0],[113,0,80,0],[114,0,81,0],[115,0,82,0],[116,0,83,0],[117,0,84,0],[118,0,85,0],[119,0,86,0],[120,0,87,0],[121,0,88,0],[122,0,89,0],[123,2,78,0],[123,11,78,0,"_mayInitWithUrlAsync"],[123,32,78,0],[124,4,78,0,"_mayInitWithUrlAsync"],[124,24,78,0],[124,31,78,0,"_asyncToGenerator"],[124,48,78,0],[124,49,78,0,"default"],[124,56,78,0],[124,58,66,7],[124,69,66,42,"url"],[124,72,66,45],[124,74,66,47,"browserPackage"],[124,88,66,61],[124,90,66,63],[125,6,67,4],[125,10,67,8],[125,11,67,9,"ExponentWebBrowser"],[125,29,67,27],[125,30,67,27,"default"],[125,37,67,27],[125,38,67,28,"mayInitWithUrlAsync"],[125,57,67,47],[125,59,67,49],[126,8,68,8],[126,14,68,14],[126,18,68,18,"UnavailabilityError"],[126,34,68,37],[126,35,68,37,"UnavailabilityError"],[126,54,68,37],[126,55,68,38],[126,67,68,50],[126,69,68,52],[126,90,68,73],[126,91,68,74],[127,6,69,4],[128,6,70,4],[128,10,70,8,"Platform"],[128,22,70,16],[128,23,70,16,"Platform"],[128,31,70,16],[128,32,70,17,"OS"],[128,34,70,19],[128,39,70,24],[128,48,70,33],[128,50,70,35],[129,8,71,8],[129,15,71,15],[129,16,71,16],[129,17,71,17],[130,6,72,4],[130,7,72,5],[130,13,73,9],[131,8,74,8],[131,21,74,21,"ExponentWebBrowser"],[131,39,74,39],[131,40,74,39,"default"],[131,47,74,39],[131,48,74,40,"mayInitWithUrlAsync"],[131,67,74,59],[131,68,74,60,"url"],[131,71,74,63],[131,73,74,65,"browserPackage"],[131,87,74,79],[131,88,74,80],[132,6,75,4],[133,4,76,0],[133,5,76,1],[134,4,76,1],[134,11,76,1,"_mayInitWithUrlAsync"],[134,31,76,1],[134,32,76,1,"apply"],[134,37,76,1],[134,44,76,1,"arguments"],[134,53,76,1],[135,2,76,1],[136,2,76,1],[136,11,90,22,"coolDownAsync"],[136,24,90,35,"coolDownAsync"],[136,25,90,35,"_x4"],[136,28,90,35],[137,4,90,35],[137,11,90,35,"_coolDownAsync"],[137,25,90,35],[137,26,90,35,"apply"],[137,31,90,35],[137,38,90,35,"arguments"],[137,47,90,35],[138,2,90,35],[138,4,101,0],[139,2,102,0],[140,0,103,0],[141,0,104,0],[142,0,105,0],[143,0,106,0],[144,0,107,0],[145,0,108,0],[146,0,109,0],[147,0,110,0],[148,0,111,0],[149,0,112,0],[150,0,113,0],[151,0,114,0],[152,0,115,0],[153,0,116,0],[154,2,102,0],[154,11,102,0,"_coolDownAsync"],[154,26,102,0],[155,4,102,0,"_coolDownAsync"],[155,18,102,0],[155,25,102,0,"_asyncToGenerator"],[155,42,102,0],[155,43,102,0,"default"],[155,50,102,0],[155,52,90,7],[155,63,90,36,"browserPackage"],[155,77,90,50],[155,79,90,52],[156,6,91,4],[156,10,91,8],[156,11,91,9,"ExponentWebBrowser"],[156,29,91,27],[156,30,91,27,"default"],[156,37,91,27],[156,38,91,28,"coolDownAsync"],[156,51,91,41],[156,53,91,43],[157,8,92,8],[157,14,92,14],[157,18,92,18,"UnavailabilityError"],[157,34,92,37],[157,35,92,37,"UnavailabilityError"],[157,54,92,37],[157,55,92,38],[157,67,92,50],[157,69,92,52],[157,84,92,67],[157,85,92,68],[158,6,93,4],[159,6,94,4],[159,10,94,8,"Platform"],[159,22,94,16],[159,23,94,16,"Platform"],[159,31,94,16],[159,32,94,17,"OS"],[159,34,94,19],[159,39,94,24],[159,48,94,33],[159,50,94,35],[160,8,95,8],[160,15,95,15],[160,16,95,16],[160,17,95,17],[161,6,96,4],[161,7,96,5],[161,13,97,9],[162,8,98,8],[162,21,98,21,"ExponentWebBrowser"],[162,39,98,39],[162,40,98,39,"default"],[162,47,98,39],[162,48,98,40,"coolDownAsync"],[162,61,98,53],[162,62,98,54,"browserPackage"],[162,76,98,68],[162,77,98,69],[163,6,99,4],[164,4,100,0],[164,5,100,1],[165,4,100,1],[165,11,100,1,"_coolDownAsync"],[165,25,100,1],[165,26,100,1,"apply"],[165,31,100,1],[165,38,100,1,"arguments"],[165,47,100,1],[166,2,100,1],[167,2,100,1],[167,11,117,22,"openBrowserAsync"],[167,27,117,38,"openBrowserAsync"],[167,28,117,38,"_x5"],[167,31,117,38],[168,4,117,38],[168,11,117,38,"_openBrowserAsync"],[168,28,117,38],[168,29,117,38,"apply"],[168,34,117,38],[168,41,117,38,"arguments"],[168,50,117,38],[169,2,117,38],[169,4,123,0],[170,2,124,0],[171,0,125,0],[172,0,126,0],[173,0,127,0],[174,0,128,0],[175,0,129,0],[176,2,124,0],[176,11,124,0,"_openBrowserAsync"],[176,29,124,0],[177,4,124,0,"_openBrowserAsync"],[177,21,124,0],[177,28,124,0,"_asyncToGenerator"],[177,45,124,0],[177,46,124,0,"default"],[177,53,124,0],[177,55,117,7],[177,66,117,39,"url"],[177,69,117,42],[177,71,117,64],[178,6,117,64],[178,10,117,44,"browserParams"],[178,23,117,57],[178,26,117,57,"arguments"],[178,35,117,57],[178,36,117,57,"length"],[178,42,117,57],[178,50,117,57,"arguments"],[178,59,117,57],[178,67,117,57,"undefined"],[178,76,117,57],[178,79,117,57,"arguments"],[178,88,117,57],[178,94,117,60],[178,95,117,61],[178,96,117,62],[179,6,118,4],[179,10,118,8],[179,11,118,9,"ExponentWebBrowser"],[179,29,118,27],[179,30,118,27,"default"],[179,37,118,27],[179,38,118,28,"openBrowserAsync"],[179,54,118,44],[179,56,118,46],[180,8,119,8],[180,14,119,14],[180,18,119,18,"UnavailabilityError"],[180,34,119,37],[180,35,119,37,"UnavailabilityError"],[180,54,119,37],[180,55,119,38],[180,67,119,50],[180,69,119,52],[180,87,119,70],[180,88,119,71],[181,6,120,4],[182,6,121,4],[182,19,121,17,"ExponentWebBrowser"],[182,37,121,35],[182,38,121,35,"default"],[182,45,121,35],[182,46,121,36,"openBrowserAsync"],[182,62,121,52],[182,63,121,53,"url"],[182,66,121,56],[182,68,121,58,"_processOptions"],[182,83,121,73],[182,84,121,74,"browserParams"],[182,97,121,87],[182,98,121,88],[182,99,121,89],[183,4,122,0],[183,5,122,1],[184,4,122,1],[184,11,122,1,"_openBrowserAsync"],[184,28,122,1],[184,29,122,1,"apply"],[184,34,122,1],[184,41,122,1,"arguments"],[184,50,122,1],[185,2,122,1],[186,2,130,7],[186,11,130,16,"dismissBrowser"],[186,25,130,30,"dismissBrowser"],[186,26,130,30],[186,28,130,33],[187,4,131,4],[187,11,131,11,"ExponentWebBrowser"],[187,29,131,29],[187,30,131,29,"default"],[187,37,131,29],[187,38,131,30,"dismissBrowser"],[187,52,131,44],[187,55,131,47],[187,56,131,48],[188,2,132,0],[189,2,133,0],[190,2,134,0],[191,0,135,0],[192,0,136,0],[193,0,137,0],[194,0,138,0],[195,0,139,0],[196,0,140,0],[197,0,141,0],[198,0,142,0],[199,0,143,0],[200,0,144,0],[201,0,145,0],[202,0,146,0],[203,0,147,0],[204,0,148,0],[205,0,149,0],[206,0,150,0],[207,0,151,0],[208,0,152,0],[209,0,153,0],[210,0,154,0],[211,0,155,0],[212,0,156,0],[213,0,157,0],[214,0,158,0],[215,0,159,0],[216,0,160,0],[217,0,161,0],[218,0,162,0],[219,0,163,0],[220,0,164,0],[221,0,165,0],[222,0,166,0],[223,0,167,0],[224,0,168,0],[225,0,169,0],[226,0,170,0],[227,0,171,0],[228,0,172,0],[229,0,173,0],[230,0,174,0],[231,0,175,0],[232,0,176,0],[233,0,177,0],[234,0,178,0],[235,0,179,0],[236,0,180,0],[237,0,181,0],[238,0,182,0],[239,2,134,0],[239,11,183,22,"openAuthSessionAsync"],[239,31,183,42,"openAuthSessionAsync"],[239,32,183,42,"_x6"],[239,35,183,42],[239,37,183,42,"_x7"],[239,40,183,42],[240,4,183,42],[240,11,183,42,"_openAuthSessionAsync"],[240,32,183,42],[240,33,183,42,"apply"],[240,38,183,42],[240,45,183,42,"arguments"],[240,54,183,42],[241,2,183,42],[242,2,197,0],[243,0,198,0],[244,0,199,0],[245,0,200,0],[246,0,201,0],[247,0,202,0],[248,0,203,0],[249,0,204,0],[250,2,197,0],[250,11,197,0,"_openAuthSessionAsync"],[250,33,197,0],[251,4,197,0,"_openAuthSessionAsync"],[251,25,197,0],[251,32,197,0,"_asyncToGenerator"],[251,49,197,0],[251,50,197,0,"default"],[251,57,197,0],[251,59,183,7],[251,70,183,43,"url"],[251,73,183,46],[251,75,183,48,"redirectUrl"],[251,86,183,59],[251,88,183,75],[252,6,183,75],[252,10,183,61,"options"],[252,17,183,68],[252,20,183,68,"arguments"],[252,29,183,68],[252,30,183,68,"length"],[252,36,183,68],[252,44,183,68,"arguments"],[252,53,183,68],[252,61,183,68,"undefined"],[252,70,183,68],[252,73,183,68,"arguments"],[252,82,183,68],[252,88,183,71],[252,89,183,72],[252,90,183,73],[253,6,184,4],[253,10,184,8,"_authSessionIsNativelySupported"],[253,41,184,39],[253,42,184,40],[253,43,184,41],[253,45,184,43],[254,8,185,8],[254,12,185,12],[254,13,185,13,"ExponentWebBrowser"],[254,31,185,31],[254,32,185,31,"default"],[254,39,185,31],[254,40,185,32,"openAuthSessionAsync"],[254,60,185,52],[254,62,185,54],[255,10,186,12],[255,16,186,18],[255,20,186,22,"UnavailabilityError"],[255,36,186,41],[255,37,186,41,"UnavailabilityError"],[255,56,186,41],[255,57,186,42],[255,69,186,54],[255,71,186,56],[255,93,186,78],[255,94,186,79],[256,8,187,8],[257,8,188,8],[257,12,188,12],[257,13,188,13],[257,18,188,18],[257,20,188,20],[257,27,188,27],[257,29,188,29],[257,34,188,34],[257,35,188,35],[257,36,188,36,"includes"],[257,44,188,44],[257,45,188,45,"Platform"],[257,57,188,53],[257,58,188,53,"Platform"],[257,66,188,53],[257,67,188,54,"OS"],[257,69,188,56],[257,70,188,57],[257,72,188,59],[258,10,189,12],[258,17,189,19,"ExponentWebBrowser"],[258,35,189,37],[258,36,189,37,"default"],[258,43,189,37],[258,44,189,38,"openAuthSessionAsync"],[258,64,189,58],[258,65,189,59,"url"],[258,68,189,62],[258,70,189,64,"redirectUrl"],[258,81,189,75],[258,83,189,77,"_processOptions"],[258,98,189,92],[258,99,189,93,"options"],[258,106,189,100],[258,107,189,101],[258,108,189,102],[259,8,190,8],[260,8,191,8],[260,15,191,15,"ExponentWebBrowser"],[260,33,191,33],[260,34,191,33,"default"],[260,41,191,33],[260,42,191,34,"openAuthSessionAsync"],[260,62,191,54],[260,63,191,55,"url"],[260,66,191,58],[260,68,191,60,"redirectUrl"],[260,79,191,71],[260,80,191,72],[261,6,192,4],[261,7,192,5],[261,13,193,9],[262,8,194,8],[262,15,194,15,"_openAuthSessionPolyfillAsync"],[262,44,194,44],[262,45,194,45,"url"],[262,48,194,48],[262,50,194,50,"redirectUrl"],[262,61,194,61],[262,63,194,63,"options"],[262,70,194,70],[262,71,194,71],[263,6,195,4],[264,4,196,0],[264,5,196,1],[265,4,196,1],[265,11,196,1,"_openAuthSessionAsync"],[265,32,196,1],[265,33,196,1,"apply"],[265,38,196,1],[265,45,196,1,"arguments"],[265,54,196,1],[266,2,196,1],[267,2,205,7],[267,11,205,16,"dismissAuthSession"],[267,29,205,34,"dismissAuthSession"],[267,30,205,34],[267,32,205,37],[268,4,206,4],[268,8,206,8,"_authSessionIsNativelySupported"],[268,39,206,39],[268,40,206,40],[268,41,206,41],[268,43,206,43],[269,6,207,8],[269,10,207,12],[269,11,207,13,"ExponentWebBrowser"],[269,29,207,31],[269,30,207,31,"default"],[269,37,207,31],[269,38,207,32,"dismissAuthSession"],[269,56,207,50],[269,58,207,52],[270,8,208,12],[270,14,208,18],[270,18,208,22,"UnavailabilityError"],[270,34,208,41],[270,35,208,41,"UnavailabilityError"],[270,54,208,41],[270,55,208,42],[270,67,208,54],[270,69,208,56],[270,89,208,76],[270,90,208,77],[271,6,209,8],[272,6,210,8,"ExponentWebBrowser"],[272,24,210,26],[272,25,210,26,"default"],[272,32,210,26],[272,33,210,27,"dismissAuthSession"],[272,51,210,45],[272,52,210,46],[272,53,210,47],[273,4,211,4],[273,5,211,5],[273,11,212,9],[274,6,213,8],[274,10,213,12],[274,11,213,13,"ExponentWebBrowser"],[274,29,213,31],[274,30,213,31,"default"],[274,37,213,31],[274,38,213,32,"dismissBrowser"],[274,52,213,46],[274,54,213,48],[275,8,214,12],[275,14,214,18],[275,18,214,22,"UnavailabilityError"],[275,34,214,41],[275,35,214,41,"UnavailabilityError"],[275,54,214,41],[275,55,214,42],[275,67,214,54],[275,69,214,56],[275,85,214,72],[275,86,214,73],[276,6,215,8],[277,6,216,8,"ExponentWebBrowser"],[277,24,216,26],[277,25,216,26,"default"],[277,32,216,26],[277,33,216,27,"dismissBrowser"],[277,47,216,41],[277,48,216,42],[277,49,216,43],[278,4,217,4],[279,2,218,0],[280,2,219,0],[281,2,220,0],[282,0,221,0],[283,0,222,0],[284,0,223,0],[285,0,224,0],[286,0,225,0],[287,0,226,0],[288,0,227,0],[289,0,228,0],[290,0,229,0],[291,0,230,0],[292,0,231,0],[293,0,232,0],[294,0,233,0],[295,0,234,0],[296,0,235,0],[297,0,236,0],[298,0,237,0],[299,0,238,0],[300,0,239,0],[301,0,240,0],[302,0,241,0],[303,0,242,0],[304,0,243,0],[305,0,244,0],[306,0,245,0],[307,0,246,0],[308,0,247,0],[309,2,248,7],[309,11,248,16,"maybeCompleteAuthSession"],[309,35,248,40,"maybeCompleteAuthSession"],[309,36,248,40],[309,38,248,55],[310,4,248,55],[310,8,248,41,"options"],[310,15,248,48],[310,18,248,48,"arguments"],[310,27,248,48],[310,28,248,48,"length"],[310,34,248,48],[310,42,248,48,"arguments"],[310,51,248,48],[310,59,248,48,"undefined"],[310,68,248,48],[310,71,248,48,"arguments"],[310,80,248,48],[310,86,248,51],[310,87,248,52],[310,88,248,53],[311,4,249,4],[311,8,249,8,"ExponentWebBrowser"],[311,26,249,26],[311,27,249,26,"default"],[311,34,249,26],[311,35,249,27,"maybeCompleteAuthSession"],[311,59,249,51],[311,61,249,53],[312,6,250,8],[312,13,250,15,"ExponentWebBrowser"],[312,31,250,33],[312,32,250,33,"default"],[312,39,250,33],[312,40,250,34,"maybeCompleteAuthSession"],[312,64,250,58],[312,65,250,59,"options"],[312,72,250,66],[312,73,250,67],[313,4,251,4],[314,4,252,4],[314,11,252,11],[315,6,252,13,"type"],[315,10,252,17],[315,12,252,19],[315,20,252,27],[316,6,252,29,"message"],[316,13,252,36],[316,15,252,38],[317,4,252,71],[317,5,252,72],[318,2,253,0],[319,2,254,0],[319,11,254,9,"_processOptions"],[319,26,254,24,"_processOptions"],[319,27,254,25,"options"],[319,34,254,32],[319,36,254,34],[320,4,255,4],[320,11,255,11],[321,6,256,8],[321,9,256,11,"options"],[321,16,256,18],[322,6,257,8,"controlsColor"],[322,19,257,21],[322,21,257,23],[322,25,257,23,"processColor"],[322,37,257,35],[322,38,257,35,"processColor"],[322,50,257,35],[322,52,257,36,"options"],[322,59,257,43],[322,60,257,44,"controlsColor"],[322,73,257,57],[322,74,257,58],[323,6,258,8,"toolbarColor"],[323,18,258,20],[323,20,258,22],[323,24,258,22,"processColor"],[323,36,258,34],[323,37,258,34,"processColor"],[323,49,258,34],[323,51,258,35,"options"],[323,58,258,42],[323,59,258,43,"toolbarColor"],[323,71,258,55],[323,72,258,56],[324,6,259,8,"secondaryToolbarColor"],[324,27,259,29],[324,29,259,31],[324,33,259,31,"processColor"],[324,45,259,43],[324,46,259,43,"processColor"],[324,58,259,43],[324,60,259,44,"options"],[324,67,259,51],[324,68,259,52,"secondaryToolbarColor"],[324,89,259,73],[325,4,260,4],[325,5,260,5],[326,2,261,0],[327,2,262,0],[328,2,263,0],[328,11,263,9,"_authSessionIsNativelySupported"],[328,42,263,40,"_authSessionIsNativelySupported"],[328,43,263,40],[328,45,263,43],[329,4,264,4],[329,11,264,11,"Platform"],[329,23,264,19],[329,24,264,19,"Platform"],[329,32,264,19],[329,33,264,20,"OS"],[329,35,264,22],[329,40,264,27],[329,49,264,36],[330,2,265,0],[331,2,266,0],[331,6,266,4,"_redirectSubscription"],[331,27,266,25],[331,30,266,28],[331,34,266,32],[332,2,267,0],[333,0,268,0],[334,0,269,0],[335,0,270,0],[336,2,271,0],[337,2,272,0],[338,2,273,0],[338,6,273,4,"_onWebBrowserCloseAndroid"],[338,31,273,29],[338,34,273,32],[338,38,273,36],[339,2,274,0],[340,2,275,0],[341,2,276,0],[342,2,277,0],[343,2,278,0],[343,6,278,4,"_isAppStateAvailable"],[343,26,278,24],[343,29,278,27,"AppState"],[343,41,278,35],[343,42,278,35,"AppState"],[343,50,278,35],[343,51,278,36,"currentState"],[343,63,278,48],[343,68,278,53],[343,72,278,57],[344,2,279,0],[344,11,279,9,"_onAppStateChangeAndroid"],[344,35,279,33,"_onAppStateChangeAndroid"],[344,36,279,34,"state"],[344,41,279,39],[344,43,279,41],[345,4,280,4],[345,8,280,8],[345,9,280,9,"_isAppStateAvailable"],[345,29,280,29],[345,31,280,31],[346,6,281,8,"_isAppStateAvailable"],[346,26,281,28],[346,29,281,31],[346,33,281,35],[347,6,282,8],[348,4,283,4],[349,4,284,4],[349,8,284,8,"state"],[349,13,284,13],[349,18,284,18],[349,26,284,26],[349,30,284,30,"_onWebBrowserCloseAndroid"],[349,55,284,55],[349,57,284,57],[350,6,285,8,"_onWebBrowserCloseAndroid"],[350,31,285,33],[350,32,285,34],[350,33,285,35],[351,4,286,4],[352,2,287,0],[353,2,287,1],[353,11,288,15,"_openBrowserAndWaitAndroidAsync"],[353,42,288,46,"_openBrowserAndWaitAndroidAsync"],[353,43,288,46,"_x8"],[353,46,288,46],[354,4,288,46],[354,11,288,46,"_openBrowserAndWaitAndroidAsync2"],[354,43,288,46],[354,44,288,46,"apply"],[354,49,288,46],[354,56,288,46,"arguments"],[354,65,288,46],[355,2,288,46],[356,2,288,46],[356,11,288,46,"_openBrowserAndWaitAndroidAsync2"],[356,44,288,46],[357,4,288,46,"_openBrowserAndWaitAndroidAsync2"],[357,36,288,46],[357,43,288,46,"_asyncToGenerator"],[357,60,288,46],[357,61,288,46,"default"],[357,68,288,46],[357,70,288,0],[357,81,288,47,"startUrl"],[357,89,288,55],[357,91,288,77],[358,6,288,77],[358,10,288,57,"browserParams"],[358,23,288,70],[358,26,288,70,"arguments"],[358,35,288,70],[358,36,288,70,"length"],[358,42,288,70],[358,50,288,70,"arguments"],[358,59,288,70],[358,67,288,70,"undefined"],[358,76,288,70],[358,79,288,70,"arguments"],[358,88,288,70],[358,94,288,73],[358,95,288,74],[358,96,288,75],[359,6,289,4],[359,10,289,10,"appStateChangedToActive"],[359,33,289,33],[359,36,289,36],[359,40,289,40,"Promise"],[359,47,289,47],[359,48,289,49,"resolve"],[359,55,289,56],[359,59,289,61],[360,8,290,8,"_onWebBrowserCloseAndroid"],[360,33,290,33],[360,36,290,36,"resolve"],[360,43,290,43],[361,6,291,4],[361,7,291,5],[361,8,291,6],[362,6,292,4],[362,10,292,10,"stateChangeSubscription"],[362,33,292,33],[362,36,292,36,"AppState"],[362,48,292,44],[362,49,292,44,"AppState"],[362,57,292,44],[362,58,292,45,"addEventListener"],[362,74,292,61],[362,75,292,62],[362,83,292,70],[362,85,292,72,"_onAppStateChangeAndroid"],[362,109,292,96],[362,110,292,97],[363,6,293,4],[363,10,293,8,"result"],[363,16,293,14],[363,19,293,17],[364,8,293,19,"type"],[364,12,293,23],[364,14,293,25,"WebBrowserResultType"],[364,30,293,45],[364,31,293,45,"WebBrowserResultType"],[364,51,293,45],[364,52,293,46,"CANCEL"],[365,6,293,53],[365,7,293,54],[366,6,294,4],[366,10,294,8,"type"],[366,14,294,12],[366,17,294,15],[366,21,294,19],[367,6,295,4],[367,10,295,8],[368,8,295,8],[368,12,295,8,"_yield$openBrowserAsy"],[368,33,295,8],[368,42,296,26,"openBrowserAsync"],[368,58,296,42],[368,59,296,43,"startUrl"],[368,67,296,51],[368,69,296,53,"browserParams"],[368,82,296,66],[368,83,296,67],[369,8,296,11,"type"],[369,12,296,15],[369,15,296,15,"_yield$openBrowserAsy"],[369,36,296,15],[369,37,296,11,"type"],[369,41,296,15],[370,6,297,4],[370,7,297,5],[370,8,298,4],[370,15,298,11,"e"],[370,16,298,12],[370,18,298,14],[371,8,299,8,"stateChangeSubscription"],[371,31,299,31],[371,32,299,32,"remove"],[371,38,299,38],[371,39,299,39],[371,40,299,40],[372,8,300,8,"_onWebBrowserCloseAndroid"],[372,33,300,33],[372,36,300,36],[372,40,300,40],[373,8,301,8],[373,14,301,14,"e"],[373,15,301,15],[374,6,302,4],[375,6,303,4],[375,10,303,8,"type"],[375,14,303,12],[375,19,303,17],[375,27,303,25],[375,29,303,27],[376,8,304,8],[376,14,304,14,"appStateChangedToActive"],[376,37,304,37],[377,8,305,8,"result"],[377,14,305,14],[377,17,305,17],[378,10,305,19,"type"],[378,14,305,23],[378,16,305,25,"WebBrowserResultType"],[378,32,305,45],[378,33,305,45,"WebBrowserResultType"],[378,53,305,45],[378,54,305,46,"DISMISS"],[379,8,305,54],[379,9,305,55],[380,6,306,4],[381,6,307,4,"stateChangeSubscription"],[381,29,307,27],[381,30,307,28,"remove"],[381,36,307,34],[381,37,307,35],[381,38,307,36],[382,6,308,4,"_onWebBrowserCloseAndroid"],[382,31,308,29],[382,34,308,32],[382,38,308,36],[383,6,309,4],[383,13,309,11,"result"],[383,19,309,17],[384,4,310,0],[384,5,310,1],[385,4,310,1],[385,11,310,1,"_openBrowserAndWaitAndroidAsync2"],[385,43,310,1],[385,44,310,1,"apply"],[385,49,310,1],[385,56,310,1,"arguments"],[385,65,310,1],[386,2,310,1],[387,2,310,1],[387,11,311,15,"_openAuthSessionPolyfillAsync"],[387,40,311,44,"_openAuthSessionPolyfillAsync"],[387,41,311,44,"_x9"],[387,44,311,44],[387,46,311,44,"_x0"],[387,49,311,44],[388,4,311,44],[388,11,311,44,"_openAuthSessionPolyfillAsync2"],[388,41,311,44],[388,42,311,44,"apply"],[388,47,311,44],[388,54,311,44,"arguments"],[388,63,311,44],[389,2,311,44],[390,2,311,44],[390,11,311,44,"_openAuthSessionPolyfillAsync2"],[390,42,311,44],[391,4,311,44,"_openAuthSessionPolyfillAsync2"],[391,34,311,44],[391,41,311,44,"_asyncToGenerator"],[391,58,311,44],[391,59,311,44,"default"],[391,66,311,44],[391,68,311,0],[391,79,311,45,"startUrl"],[391,87,311,53],[391,89,311,55,"returnUrl"],[391,98,311,64],[391,100,311,86],[392,6,311,86],[392,10,311,66,"browserParams"],[392,23,311,79],[392,26,311,79,"arguments"],[392,35,311,79],[392,36,311,79,"length"],[392,42,311,79],[392,50,311,79,"arguments"],[392,59,311,79],[392,67,311,79,"undefined"],[392,76,311,79],[392,79,311,79,"arguments"],[392,88,311,79],[392,94,311,82],[392,95,311,83],[392,96,311,84],[393,6,312,4],[393,10,312,8,"_redirectSubscription"],[393,31,312,29],[393,33,312,31],[394,8,313,8],[394,14,313,14],[394,18,313,18,"Error"],[394,23,313,23],[394,24,313,24],[394,128,313,128],[394,129,313,129],[395,6,314,4],[396,6,315,4],[396,10,315,8,"_onWebBrowserCloseAndroid"],[396,35,315,33],[396,37,315,35],[397,8,316,8],[397,14,316,14],[397,18,316,18,"Error"],[397,23,316,23],[397,24,316,24],[397,84,316,84],[397,85,316,85],[398,6,317,4],[399,6,318,4],[399,10,318,8],[400,8,319,8],[400,12,319,12,"Platform"],[400,24,319,20],[400,25,319,20,"Platform"],[400,33,319,20],[400,34,319,21,"OS"],[400,36,319,23],[400,41,319,28],[400,50,319,37],[400,52,319,39],[401,10,320,12],[401,23,320,25,"Promise"],[401,30,320,32],[401,31,320,33,"race"],[401,35,320,37],[401,36,320,38],[401,37,321,16,"_openBrowserAndWaitAndroidAsync"],[401,68,321,47],[401,69,321,48,"startUrl"],[401,77,321,56],[401,79,321,58,"browserParams"],[401,92,321,71],[401,93,321,72],[401,95,322,16,"_waitForRedirectAsync"],[401,116,322,37],[401,117,322,38,"returnUrl"],[401,126,322,47],[401,127,322,48],[401,128,323,13],[401,129,323,14],[402,8,324,8],[402,9,324,9],[402,15,325,13],[403,10,326,12],[403,23,326,25,"Promise"],[403,30,326,32],[403,31,326,33,"race"],[403,35,326,37],[403,36,326,38],[403,37,327,16,"openBrowserAsync"],[403,53,327,32],[403,54,327,33,"startUrl"],[403,62,327,41],[403,64,327,43,"browserParams"],[403,77,327,56],[403,78,327,57],[403,80,328,16,"_waitForRedirectAsync"],[403,101,328,37],[403,102,328,38,"returnUrl"],[403,111,328,47],[403,112,328,48],[403,113,329,13],[403,114,329,14],[404,8,330,8],[405,6,331,4],[405,7,331,5],[405,16,332,12],[406,8,333,8],[407,8,334,8],[408,8,335,8],[408,12,335,12,"ExponentWebBrowser"],[408,30,335,30],[408,31,335,30,"default"],[408,38,335,30],[408,39,335,31,"dismissBrowser"],[408,53,335,45],[408,55,335,47],[409,10,336,12,"ExponentWebBrowser"],[409,28,336,30],[409,29,336,30,"default"],[409,36,336,30],[409,37,336,31,"dismissBrowser"],[409,51,336,45],[409,52,336,46],[409,53,336,47],[410,8,337,8],[411,8,338,8,"_stopWaitingForRedirect"],[411,31,338,31],[411,32,338,32],[411,33,338,33],[412,6,339,4],[413,4,340,0],[413,5,340,1],[414,4,340,1],[414,11,340,1,"_openAuthSessionPolyfillAsync2"],[414,41,340,1],[414,42,340,1,"apply"],[414,47,340,1],[414,54,340,1,"arguments"],[414,63,340,1],[415,2,340,1],[416,2,341,0],[416,11,341,9,"_stopWaitingForRedirect"],[416,34,341,32,"_stopWaitingForRedirect"],[416,35,341,32],[416,37,341,35],[417,4,342,4],[417,8,342,8],[417,9,342,9,"_redirectSubscription"],[417,30,342,30],[417,32,342,32],[418,6,343,8],[418,12,343,14],[418,16,343,18,"Error"],[418,21,343,23],[418,22,343,24],[418,122,343,124],[418,123,343,125],[419,4,344,4],[420,4,345,4,"_redirectSubscription"],[420,25,345,25],[420,26,345,26,"remove"],[420,32,345,32],[420,33,345,33],[420,34,345,34],[421,4,346,4,"_redirectSubscription"],[421,25,346,25],[421,28,346,28],[421,32,346,32],[422,2,347,0],[423,2,348,0],[423,11,348,9,"_waitForRedirectAsync"],[423,32,348,30,"_waitForRedirectAsync"],[423,33,348,31,"returnUrl"],[423,42,348,40],[423,44,348,42],[424,4,349,4],[425,4,350,4],[425,11,350,11],[425,15,350,15,"Promise"],[425,22,350,22],[425,23,350,24,"resolve"],[425,30,350,31],[425,34,350,36],[426,6,351,8],[426,10,351,14,"redirectHandler"],[426,25,351,29],[426,28,351,33,"event"],[426,33,351,38],[426,37,351,43],[427,8,352,12],[427,12,352,16,"returnUrl"],[427,21,352,25],[427,25,352,29,"event"],[427,30,352,34],[427,31,352,35,"url"],[427,34,352,38],[427,35,352,39,"startsWith"],[427,45,352,49],[427,46,352,50,"returnUrl"],[427,55,352,59],[427,56,352,60],[427,58,352,62],[428,10,353,16,"resolve"],[428,17,353,23],[428,18,353,24],[429,12,353,26,"url"],[429,15,353,29],[429,17,353,31,"event"],[429,22,353,36],[429,23,353,37,"url"],[429,26,353,40],[430,12,353,42,"type"],[430,16,353,46],[430,18,353,48],[431,10,353,58],[431,11,353,59],[431,12,353,60],[432,8,354,12],[433,6,355,8],[433,7,355,9],[434,6,356,8,"_redirectSubscription"],[434,27,356,29],[434,30,356,32,"Linking"],[434,42,356,39],[434,43,356,39,"Linking"],[434,50,356,39],[434,51,356,40,"addEventListener"],[434,67,356,56],[434,68,356,57],[434,73,356,62],[434,75,356,64,"redirectHandler"],[434,90,356,79],[434,91,356,80],[435,4,357,4],[435,5,357,5],[435,6,357,6],[436,2,358,0],[437,0,358,1],[437,3]],"functionMap":{"names":["<global>","getCustomTabsSupportingBrowsersAsync","warmUpAsync","mayInitWithUrlAsync","coolDownAsync","openBrowserAsync","dismissBrowser","openAuthSessionAsync","dismissAuthSession","maybeCompleteAuthSession","_processOptions","_authSessionIsNativelySupported","_onAppStateChangeAndroid","_openBrowserAndWaitAndroidAsync","Promise$argument_0","_openAuthSessionPolyfillAsync","_stopWaitingForRedirect","_waitForRedirectAsync","redirectHandler"],"mappings":"AAA;OCqB;CDU;OEW;CFU;OGa;CHU;OIc;CJU;OKiB;CLK;OMQ;CNE;OOmD;CPa;OQS;CRa;OS8B;CTK;AUC;CVO;AWE;CXE;AYc;CZQ;AaC;gDCC;KDE;CbmB;AeC;Cf6B;AgBC;ChBM;AiBC;uBHE;gCIC;SJI;KGE;CjBC"},"hasCjsExports":false},"type":"js/module"}]}