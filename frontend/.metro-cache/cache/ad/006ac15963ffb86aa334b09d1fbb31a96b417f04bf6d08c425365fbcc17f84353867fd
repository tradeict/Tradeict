{"dependencies":[{"name":"./Cloneable.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"QoLOY+/9jV9sSxj1Kko2D5oISuc=","exportNames":["*"],"imports":1}},{"name":"./errors/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":44},"end":{"line":2,"column":49,"index":93}}],"key":"fsDEYTA80bbwlpBMEpq0GTnJ+qc=","exportNames":["*"],"imports":1}},{"name":"./GVL.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":94},"end":{"line":3,"column":31,"index":125}}],"key":"rG9LLwo0mUcnSpKgAYniBMXe/oU=","exportNames":["*"],"imports":1}},{"name":"./model/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":126},"end":{"line":4,"column":68,"index":194}}],"key":"f1espa074SpSruazfy8ml6aS0J8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"TCModel\", {\n    enumerable: true,\n    get: function () {\n      return TCModel;\n    }\n  });\n  var _CloneableJs = require(_dependencyMap[0], \"./Cloneable.js\");\n  var _errorsIndexJs = require(_dependencyMap[1], \"./errors/index.js\");\n  var _GVLJs = require(_dependencyMap[2], \"./GVL.js\");\n  var _modelIndexJs = require(_dependencyMap[3], \"./model/index.js\");\n  class TCModel extends _CloneableJs.Cloneable {\n    /**\n     * Set of available consent languages published by the IAB\n     */\n    static consentLanguages = _GVLJs.GVL.consentLanguages;\n    isServiceSpecific_ = false;\n    supportOOB_ = true;\n    useNonStandardStacks_ = false;\n    purposeOneTreatment_ = false;\n    publisherCountryCode_ = 'AA';\n    version_ = 2;\n    consentScreen_ = 0;\n    policyVersion_ = 2;\n    consentLanguage_ = 'EN';\n    cmpId_ = 0;\n    cmpVersion_ = 0;\n    vendorListVersion_ = 0;\n    numCustomPurposes_ = 0;\n    // Member Variable for GVL\n\n    /**\n     * The TCF designates certain Features as special, that is, a CMP must afford\n     * the user a means to opt in to their use. These Special Features are\n     * published and numbered in the GVL separately from normal Features.\n     * Provides for up to 12 special features.\n     */\n    specialFeatureOptins = new _modelIndexJs.Vector();\n    /**\n     * Renamed from `PurposesAllowed` in TCF v1.1\n     * The user’s consent value for each Purpose established on the legal basis\n     * of consent. Purposes are published in the Global Vendor List (see. [[GVL]]).\n     */\n    purposeConsents = new _modelIndexJs.Vector();\n    /**\n     * The user’s permission for each Purpose established on the legal basis of\n     * legitimate interest. If the user has exercised right-to-object for a\n     * purpose.\n     */\n    purposeLegitimateInterests = new _modelIndexJs.Vector();\n    /**\n     * The user’s consent value for each Purpose established on the legal basis\n     * of consent, for the publisher.  Purposes are published in the Global\n     * Vendor List.\n     */\n    publisherConsents = new _modelIndexJs.Vector();\n    /**\n     * The user’s permission for each Purpose established on the legal basis of\n     * legitimate interest.  If the user has exercised right-to-object for a\n     * purpose.\n     */\n    publisherLegitimateInterests = new _modelIndexJs.Vector();\n    /**\n     * The user’s consent value for each Purpose established on the legal basis\n     * of consent, for the publisher.  Purposes are published in the Global\n     * Vendor List.\n     */\n    publisherCustomConsents = new _modelIndexJs.Vector();\n    /**\n     * The user’s permission for each Purpose established on the legal basis of\n     * legitimate interest.  If the user has exercised right-to-object for a\n     * purpose that is established in the publisher's custom purposes.\n     */\n    publisherCustomLegitimateInterests = new _modelIndexJs.Vector();\n    /**\n     * set by a publisher if they wish to collect consent and LI Transparency for\n     * purposes outside of the TCF\n     */\n\n    /**\n     * Each [[Vendor]] is keyed by id. Their consent value is true if it is in\n     * the Vector\n     */\n    vendorConsents = new _modelIndexJs.Vector();\n    /**\n     * Each [[Vendor]] is keyed by id. Whether their Legitimate Interests\n     * Disclosures have been established is stored as boolean.\n     * see: [[Vector]]\n     */\n    vendorLegitimateInterests = new _modelIndexJs.Vector();\n    /**\n     * The value included for disclosed vendors signals which vendors have been\n     * disclosed to the user in the interface surfaced by the CMP. This section\n     * content is required when writing a TC string to the global (consensu)\n     * scope. When a CMP has read from and is updating a TC string from the\n     * global consensu.org storage, the CMP MUST retain the existing disclosure\n     * information and only add information for vendors that it has disclosed\n     * that had not been disclosed by other CMPs in prior interactions with this\n     * device/user agent.\n     */\n    vendorsDisclosed = new _modelIndexJs.Vector();\n    /**\n     * Signals which vendors the publisher permits to use OOB legal bases.\n     */\n    vendorsAllowed = new _modelIndexJs.Vector();\n    publisherRestrictions = new _modelIndexJs.PurposeRestrictionVector();\n    /**\n     * Constructs the TCModel. Passing a [[GVL]] is optional when constructing\n     * as this TCModel may be constructed from decoding an existing encoded\n     * TCString.\n     *\n     * @param {GVL} [gvl]\n     */\n    constructor(gvl) {\n      super();\n      if (gvl) {\n        this.gvl = gvl;\n      }\n      this.updated();\n    }\n    /**\n     * sets the [[GVL]] with side effects of also setting the `vendorListVersion`, `policyVersion`, and `consentLanguage`\n     * @param {GVL} gvl\n     */\n    set gvl(gvl) {\n      /**\n       * set the reference, but make sure it's our GVL wrapper class.\n       */\n      if (!_GVLJs.GVL.isInstanceOf(gvl)) {\n        gvl = new _GVLJs.GVL(gvl);\n      }\n      this.gvl_ = gvl;\n      this.publisherRestrictions.gvl = gvl;\n    }\n    /**\n     * @return {GVL} the gvl instance set on this TCModel instance\n     */\n    get gvl() {\n      return this.gvl_;\n    }\n    /**\n     * @param {number} integer - A unique ID will be assigned to each Consent\n     * Manager Provider (CMP) from the iab.\n     *\n     * @throws {TCModelError} if the value is not an integer greater than 1 as those are not valid.\n     */\n    set cmpId(integer) {\n      integer = Number(integer);\n      if (Number.isInteger(integer) && integer > 1) {\n        this.cmpId_ = integer;\n      } else {\n        throw new _errorsIndexJs.TCModelError('cmpId', integer);\n      }\n    }\n    get cmpId() {\n      return this.cmpId_;\n    }\n    /**\n     * Each change to an operating CMP should receive a\n     * new version number, for logging proof of consent. CmpVersion defined by\n     * each CMP.\n     *\n     * @param {number} integer\n     *\n     * @throws {TCModelError} if the value is not an integer greater than 1 as those are not valid.\n     */\n    set cmpVersion(integer) {\n      integer = Number(integer);\n      if (Number.isInteger(integer) && integer > -1) {\n        this.cmpVersion_ = integer;\n      } else {\n        throw new _errorsIndexJs.TCModelError('cmpVersion', integer);\n      }\n    }\n    get cmpVersion() {\n      return this.cmpVersion_;\n    }\n    /**\n     * The screen number is CMP and CmpVersion\n     * specific, and is for logging proof of consent.(For example, a CMP could\n     * keep records so that a publisher can request information about the context\n     * in which consent was gathered.)\n     *\n     * @param {number} integer\n     *\n     * @throws {TCModelError} if the value is not an integer greater than 0 as those are not valid.\n     */\n    set consentScreen(integer) {\n      integer = Number(integer);\n      if (Number.isInteger(integer) && integer > -1) {\n        this.consentScreen_ = integer;\n      } else {\n        throw new _errorsIndexJs.TCModelError('consentScreen', integer);\n      }\n    }\n    get consentScreen() {\n      return this.consentScreen_;\n    }\n    /**\n     * @param {string} lang - [two-letter ISO 639-1 language\n     * code](http://www.loc.gov/standards/iso639-2/php/code_list.php) in which\n     * the CMP UI was presented\n     *\n     * @throws {TCModelError} if the value is not a length-2 string of alpha characters\n     */\n    set consentLanguage(lang) {\n      this.consentLanguage_ = lang;\n    }\n    get consentLanguage() {\n      return this.consentLanguage_;\n    }\n    /**\n     * @param {string} countryCode - [two-letter ISO 3166-1 alpha-2 country\n     * code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the publisher,\n     * determined by the CMP-settings of the publisher.\n     *\n     * @throws {TCModelError} if the value is not a length-2 string of alpha characters\n     */\n    set publisherCountryCode(countryCode) {\n      if (/^([A-z]){2}$/.test(countryCode)) {\n        this.publisherCountryCode_ = countryCode.toUpperCase();\n      } else {\n        throw new _errorsIndexJs.TCModelError('publisherCountryCode', countryCode);\n      }\n    }\n    get publisherCountryCode() {\n      return this.publisherCountryCode_;\n    }\n    /**\n     * Version of the GVL used to create this TCModel. Global\n     * Vendor List versions will be released periodically.\n     *\n     * @param {number} integer\n     *\n     * @throws {TCModelError} if the value is not an integer greater than 0 as those are not valid.\n     */\n    set vendorListVersion(integer) {\n      /**\n       * first coerce to a number via leading '+' then take the integer value by\n       * bitshifting to the right.  This works on all types in JavaScript and if\n       * it's not valid then value will be 0.\n       */\n      integer = Number(integer) >> 0;\n      if (integer < 0) {\n        throw new _errorsIndexJs.TCModelError('vendorListVersion', integer);\n      } else {\n        this.vendorListVersion_ = integer;\n      }\n    }\n    get vendorListVersion() {\n      if (this.gvl) {\n        return this.gvl.vendorListVersion;\n      } else {\n        return this.vendorListVersion_;\n      }\n    }\n    /**\n     * From the corresponding field in the GVL that was\n     * used for obtaining consent. A new policy version invalidates existing\n     * strings and requires CMPs to re-establish transparency and consent from\n     * users.\n     *\n     * If a TCF policy version number is different from the one from the latest\n     * GVL, the CMP must re-establish transparency and consent.\n     *\n     * @param {number} num - You do not need to set this.  This comes\n     * directly from the [[GVL]].\n     *\n     */\n    set policyVersion(num) {\n      this.policyVersion_ = parseInt(num, 10);\n      if (this.policyVersion_ < 0) {\n        throw new _errorsIndexJs.TCModelError('policyVersion', num);\n      }\n    }\n    get policyVersion() {\n      if (this.gvl) {\n        return this.gvl.tcfPolicyVersion;\n      } else {\n        return this.policyVersion_;\n      }\n    }\n    set version(num) {\n      this.version_ = parseInt(num, 10);\n    }\n    get version() {\n      return this.version_;\n    }\n    /**\n     * Whether the signals encoded in this TC String were from site-specific\n     * storage `true` versus ‘global’ consensu.org shared storage `false`. A\n     * string intended to be stored in global/shared scope but the CMP is unable\n     * to store due to a user agent not accepting third-party cookies would be\n     * considered site-specific `true`.\n     *\n     * @param {boolean} bool - value to set. Some changes to other fields in this\n     * model will automatically change this value like adding publisher\n     * restrictions.\n     */\n    set isServiceSpecific(bool) {\n      this.isServiceSpecific_ = bool;\n    }\n    get isServiceSpecific() {\n      return this.isServiceSpecific_;\n    }\n    /**\n     * Non-standard stacks means that a CMP is using publisher-customized stack\n     * descriptions. Stacks (in terms of purposes in a stack) are pre-set by the\n     * IAB. As are titles. Descriptions are pre-set, but publishers can customize\n     * them. If they do, they need to set this bit to indicate that they've\n     * customized descriptions.\n     *\n     * @param {boolean} bool - value to set\n     */\n    set useNonStandardStacks(bool) {\n      this.useNonStandardStacks_ = bool;\n    }\n    get useNonStandardStacks() {\n      return this.useNonStandardStacks_;\n    }\n    /**\n     * Whether or not this publisher supports OOB signaling.  On Global TC String\n     * OOB Vendors Disclosed will be included if the publish wishes to no allow\n     * these vendors they should set this to false.\n     * @param {boolean} bool - value to set\n     */\n    set supportOOB(bool) {\n      this.supportOOB_ = bool;\n    }\n    get supportOOB() {\n      return this.supportOOB_;\n    }\n    /**\n     * `false` There is no special Purpose 1 status.\n     * Purpose 1 was disclosed normally (consent) as expected by Policy.  `true`\n     * Purpose 1 not disclosed at all. CMPs use PublisherCC to indicate the\n     * publisher’s country of establishment to help Vendors determine whether the\n     * vendor requires Purpose 1 consent. In global scope TC strings, this field\n     * must always have a value of `false`. When a CMP encounters a global scope\n     * string with `purposeOneTreatment=true` then that string should be\n     * considered invalid and the CMP must re-establish transparency and consent.\n     *\n     * @param {boolean} bool\n     */\n    set purposeOneTreatment(bool) {\n      this.purposeOneTreatment_ = bool;\n    }\n    get purposeOneTreatment() {\n      return this.purposeOneTreatment_;\n    }\n    /**\n     * setAllVendorConsents - sets all vendors on the GVL Consent (true)\n     *\n     * @return {void}\n     */\n    setAllVendorConsents() {\n      this.vendorConsents.set(this.gvl.vendors);\n    }\n    /**\n     * unsetAllVendorConsents - unsets all vendors on the GVL Consent (false)\n     *\n     * @return {void}\n     */\n    unsetAllVendorConsents() {\n      this.vendorConsents.empty();\n    }\n    /**\n     * setAllVendorsDisclosed - sets all vendors on the GVL Vendors Disclosed (true)\n     *\n     * @return {void}\n     */\n    setAllVendorsDisclosed() {\n      this.vendorsDisclosed.set(this.gvl.vendors);\n    }\n    /**\n     * unsetAllVendorsDisclosed - unsets all vendors on the GVL Consent (false)\n     *\n     * @return {void}\n     */\n    unsetAllVendorsDisclosed() {\n      this.vendorsDisclosed.empty();\n    }\n    /**\n     * setAllVendorsAllowed - sets all vendors on the GVL Consent (true)\n     *\n     * @return {void}\n     */\n    setAllVendorsAllowed() {\n      this.vendorsAllowed.set(this.gvl.vendors);\n    }\n    /**\n     * unsetAllVendorsAllowed - unsets all vendors on the GVL Consent (false)\n     *\n     * @return {void}\n     */\n    unsetAllVendorsAllowed() {\n      this.vendorsAllowed.empty();\n    }\n    /**\n     * setAllVendorLegitimateInterests - sets all vendors on the GVL LegitimateInterests (true)\n     *\n     * @return {void}\n     */\n    setAllVendorLegitimateInterests() {\n      this.vendorLegitimateInterests.set(this.gvl.vendors);\n    }\n    /**\n     * unsetAllVendorLegitimateInterests - unsets all vendors on the GVL LegitimateInterests (false)\n     *\n     * @return {void}\n     */\n    unsetAllVendorLegitimateInterests() {\n      this.vendorLegitimateInterests.empty();\n    }\n    /**\n     * setAllPurposeConsents - sets all purposes on the GVL Consent (true)\n     *\n     * @return {void}\n     */\n    setAllPurposeConsents() {\n      this.purposeConsents.set(this.gvl.purposes);\n    }\n    /**\n     * unsetAllPurposeConsents - unsets all purposes on the GVL Consent (false)\n     *\n     * @return {void}\n     */\n    unsetAllPurposeConsents() {\n      this.purposeConsents.empty();\n    }\n    /**\n     * setAllPurposeLegitimateInterests - sets all purposes on the GVL LI Transparency (true)\n     *\n     * @return {void}\n     */\n    setAllPurposeLegitimateInterests() {\n      this.purposeLegitimateInterests.set(this.gvl.purposes);\n    }\n    /**\n     * unsetAllPurposeLegitimateInterests - unsets all purposes on the GVL LI Transparency (false)\n     *\n     * @return {void}\n     */\n    unsetAllPurposeLegitimateInterests() {\n      this.purposeLegitimateInterests.empty();\n    }\n    /**\n     * setAllSpecialFeatureOptins - sets all special featuresOptins on the GVL (true)\n     *\n     * @return {void}\n     */\n    setAllSpecialFeatureOptins() {\n      this.specialFeatureOptins.set(this.gvl.specialFeatures);\n    }\n    /**\n     * unsetAllSpecialFeatureOptins - unsets all special featuresOptins on the GVL (true)\n     *\n     * @return {void}\n     */\n    unsetAllSpecialFeatureOptins() {\n      this.specialFeatureOptins.empty();\n    }\n    setAll() {\n      this.setAllVendorConsents();\n      this.setAllPurposeLegitimateInterests();\n      this.setAllSpecialFeatureOptins();\n      this.setAllPurposeConsents();\n      this.setAllVendorLegitimateInterests();\n    }\n    unsetAll() {\n      this.unsetAllVendorConsents();\n      this.unsetAllPurposeLegitimateInterests();\n      this.unsetAllSpecialFeatureOptins();\n      this.unsetAllPurposeConsents();\n      this.unsetAllVendorLegitimateInterests();\n    }\n    get numCustomPurposes() {\n      let len = this.numCustomPurposes_;\n      if (typeof this.customPurposes === 'object') {\n        /**\n         * Keys are not guaranteed to be in order and likewise there is no\n         * requirement that the customPurposes be non-sparse.  So we have to sort\n         * and take the highest value.  Even if the set only contains 3 purposes\n         * but goes to ID 6 we need to set the number to 6 for the encoding to\n         * work properly since it's positional.\n         */\n        const purposeIds = Object.keys(this.customPurposes).sort((a, b) => Number(a) - Number(b));\n        len = parseInt(purposeIds.pop(), 10);\n      }\n      return len;\n    }\n    set numCustomPurposes(num) {\n      this.numCustomPurposes_ = parseInt(num, 10);\n      if (this.numCustomPurposes_ < 0) {\n        throw new _errorsIndexJs.TCModelError('numCustomPurposes', num);\n      }\n    }\n    /**\n     * updated - updates the created and lastUpdated dates with a 'now' day-level UTC timestamp\n     *\n     * @return {void}\n     */\n    updated() {\n      const date = new Date();\n      const utcDate = new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate()));\n      this.created = utcDate;\n      this.lastUpdated = utcDate;\n    }\n  }\n});","lineCount":515,"map":[[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"enumerable"],[8,14,5,0],[9,4,5,0,"get"],[9,7,5,0],[9,18,5,0,"get"],[9,19,5,0],[10,6,5,0],[10,13,5,0,"TCModel"],[10,20,5,0],[11,4,5,0],[12,2,5,0],[13,2,1,0],[13,6,1,0,"_CloneableJs"],[13,18,1,0],[13,21,1,0,"require"],[13,28,1,0],[13,29,1,0,"_dependencyMap"],[13,43,1,0],[14,2,2,0],[14,6,2,0,"_errorsIndexJs"],[14,20,2,0],[14,23,2,0,"require"],[14,30,2,0],[14,31,2,0,"_dependencyMap"],[14,45,2,0],[15,2,3,0],[15,6,3,0,"_GVLJs"],[15,12,3,0],[15,15,3,0,"require"],[15,22,3,0],[15,23,3,0,"_dependencyMap"],[15,37,3,0],[16,2,4,0],[16,6,4,0,"_modelIndexJs"],[16,19,4,0],[16,22,4,0,"require"],[16,29,4,0],[16,30,4,0,"_dependencyMap"],[16,44,4,0],[17,2,5,7],[17,8,5,13,"TCModel"],[17,15,5,20],[17,24,5,29,"Cloneable"],[17,36,5,38],[17,37,5,38,"Cloneable"],[17,46,5,38],[17,47,5,39],[18,4,6,4],[19,0,7,0],[20,0,8,0],[21,4,9,4],[21,11,9,11,"consentLanguages"],[21,27,9,27],[21,30,9,30,"GVL"],[21,36,9,33],[21,37,9,33,"GVL"],[21,40,9,33],[21,41,9,34,"consentLanguages"],[21,57,9,50],[22,4,10,4,"isServiceSpecific_"],[22,22,10,22],[22,25,10,25],[22,30,10,30],[23,4,11,4,"supportOOB_"],[23,15,11,15],[23,18,11,18],[23,22,11,22],[24,4,12,4,"useNonStandardStacks_"],[24,25,12,25],[24,28,12,28],[24,33,12,33],[25,4,13,4,"purposeOneTreatment_"],[25,24,13,24],[25,27,13,27],[25,32,13,32],[26,4,14,4,"publisherCountryCode_"],[26,25,14,25],[26,28,14,28],[26,32,14,32],[27,4,15,4,"version_"],[27,12,15,12],[27,15,15,15],[27,16,15,16],[28,4,16,4,"consentScreen_"],[28,18,16,18],[28,21,16,21],[28,22,16,22],[29,4,17,4,"policyVersion_"],[29,18,17,18],[29,21,17,21],[29,22,17,22],[30,4,18,4,"consentLanguage_"],[30,20,18,20],[30,23,18,23],[30,27,18,27],[31,4,19,4,"cmpId_"],[31,10,19,10],[31,13,19,13],[31,14,19,14],[32,4,20,4,"cmpVersion_"],[32,15,20,15],[32,18,20,18],[32,19,20,19],[33,4,21,4,"vendorListVersion_"],[33,22,21,22],[33,25,21,25],[33,26,21,26],[34,4,22,4,"numCustomPurposes_"],[34,22,22,22],[34,25,22,25],[34,26,22,26],[35,4,23,4],[37,4,27,4],[38,0,28,0],[39,0,29,0],[40,0,30,0],[41,0,31,0],[42,0,32,0],[43,4,33,4,"specialFeatureOptins"],[43,24,33,24],[43,27,33,27],[43,31,33,31,"Vector"],[43,44,33,37],[43,45,33,37,"Vector"],[43,51,33,37],[43,52,33,38],[43,53,33,39],[44,4,34,4],[45,0,35,0],[46,0,36,0],[47,0,37,0],[48,0,38,0],[49,4,39,4,"purposeConsents"],[49,19,39,19],[49,22,39,22],[49,26,39,26,"Vector"],[49,39,39,32],[49,40,39,32,"Vector"],[49,46,39,32],[49,47,39,33],[49,48,39,34],[50,4,40,4],[51,0,41,0],[52,0,42,0],[53,0,43,0],[54,0,44,0],[55,4,45,4,"purposeLegitimateInterests"],[55,30,45,30],[55,33,45,33],[55,37,45,37,"Vector"],[55,50,45,43],[55,51,45,43,"Vector"],[55,57,45,43],[55,58,45,44],[55,59,45,45],[56,4,46,4],[57,0,47,0],[58,0,48,0],[59,0,49,0],[60,0,50,0],[61,4,51,4,"publisherConsents"],[61,21,51,21],[61,24,51,24],[61,28,51,28,"Vector"],[61,41,51,34],[61,42,51,34,"Vector"],[61,48,51,34],[61,49,51,35],[61,50,51,36],[62,4,52,4],[63,0,53,0],[64,0,54,0],[65,0,55,0],[66,0,56,0],[67,4,57,4,"publisherLegitimateInterests"],[67,32,57,32],[67,35,57,35],[67,39,57,39,"Vector"],[67,52,57,45],[67,53,57,45,"Vector"],[67,59,57,45],[67,60,57,46],[67,61,57,47],[68,4,58,4],[69,0,59,0],[70,0,60,0],[71,0,61,0],[72,0,62,0],[73,4,63,4,"publisherCustomConsents"],[73,27,63,27],[73,30,63,30],[73,34,63,34,"Vector"],[73,47,63,40],[73,48,63,40,"Vector"],[73,54,63,40],[73,55,63,41],[73,56,63,42],[74,4,64,4],[75,0,65,0],[76,0,66,0],[77,0,67,0],[78,0,68,0],[79,4,69,4,"publisherCustomLegitimateInterests"],[79,38,69,38],[79,41,69,41],[79,45,69,45,"Vector"],[79,58,69,51],[79,59,69,51,"Vector"],[79,65,69,51],[79,66,69,52],[79,67,69,53],[80,4,70,4],[81,0,71,0],[82,0,72,0],[83,0,73,0],[85,4,75,4],[86,0,76,0],[87,0,77,0],[88,0,78,0],[89,4,79,4,"vendorConsents"],[89,18,79,18],[89,21,79,21],[89,25,79,25,"Vector"],[89,38,79,31],[89,39,79,31,"Vector"],[89,45,79,31],[89,46,79,32],[89,47,79,33],[90,4,80,4],[91,0,81,0],[92,0,82,0],[93,0,83,0],[94,0,84,0],[95,4,85,4,"vendorLegitimateInterests"],[95,29,85,29],[95,32,85,32],[95,36,85,36,"Vector"],[95,49,85,42],[95,50,85,42,"Vector"],[95,56,85,42],[95,57,85,43],[95,58,85,44],[96,4,86,4],[97,0,87,0],[98,0,88,0],[99,0,89,0],[100,0,90,0],[101,0,91,0],[102,0,92,0],[103,0,93,0],[104,0,94,0],[105,0,95,0],[106,4,96,4,"vendorsDisclosed"],[106,20,96,20],[106,23,96,23],[106,27,96,27,"Vector"],[106,40,96,33],[106,41,96,33,"Vector"],[106,47,96,33],[106,48,96,34],[106,49,96,35],[107,4,97,4],[108,0,98,0],[109,0,99,0],[110,4,100,4,"vendorsAllowed"],[110,18,100,18],[110,21,100,21],[110,25,100,25,"Vector"],[110,38,100,31],[110,39,100,31,"Vector"],[110,45,100,31],[110,46,100,32],[110,47,100,33],[111,4,101,4,"publisherRestrictions"],[111,25,101,25],[111,28,101,28],[111,32,101,32,"PurposeRestrictionVector"],[111,45,101,56],[111,46,101,56,"PurposeRestrictionVector"],[111,70,101,56],[111,71,101,57],[111,72,101,58],[112,4,102,4],[113,0,103,0],[114,0,104,0],[115,0,105,0],[116,0,106,0],[117,0,107,0],[118,0,108,0],[119,4,109,4,"constructor"],[119,15,109,15,"constructor"],[119,16,109,16,"gvl"],[119,19,109,19],[119,21,109,21],[120,6,110,8],[120,11,110,13],[120,12,110,14],[120,13,110,15],[121,6,111,8],[121,10,111,12,"gvl"],[121,13,111,15],[121,15,111,17],[122,8,112,12],[122,12,112,16],[122,13,112,17,"gvl"],[122,16,112,20],[122,19,112,23,"gvl"],[122,22,112,26],[123,6,113,8],[124,6,114,8],[124,10,114,12],[124,11,114,13,"updated"],[124,18,114,20],[124,19,114,21],[124,20,114,22],[125,4,115,4],[126,4,116,4],[127,0,117,0],[128,0,118,0],[129,0,119,0],[130,4,120,4],[130,8,120,8,"gvl"],[130,11,120,11,"gvl"],[130,12,120,12,"gvl"],[130,15,120,15],[130,17,120,17],[131,6,121,8],[132,0,122,0],[133,0,123,0],[134,6,124,8],[134,10,124,12],[134,11,124,14,"GVL"],[134,17,124,17],[134,18,124,17,"GVL"],[134,21,124,17],[134,22,124,18,"isInstanceOf"],[134,34,124,30],[134,35,124,31,"gvl"],[134,38,124,34],[134,39,124,36],[134,41,124,38],[135,8,125,12,"gvl"],[135,11,125,15],[135,14,125,18],[135,18,125,22,"GVL"],[135,24,125,25],[135,25,125,25,"GVL"],[135,28,125,25],[135,29,125,26,"gvl"],[135,32,125,29],[135,33,125,30],[136,6,126,8],[137,6,127,8],[137,10,127,12],[137,11,127,13,"gvl_"],[137,15,127,17],[137,18,127,20,"gvl"],[137,21,127,23],[138,6,128,8],[138,10,128,12],[138,11,128,13,"publisherRestrictions"],[138,32,128,34],[138,33,128,35,"gvl"],[138,36,128,38],[138,39,128,41,"gvl"],[138,42,128,44],[139,4,129,4],[140,4,130,4],[141,0,131,0],[142,0,132,0],[143,4,133,4],[143,8,133,8,"gvl"],[143,11,133,11,"gvl"],[143,12,133,11],[143,14,133,14],[144,6,134,8],[144,13,134,15],[144,17,134,19],[144,18,134,20,"gvl_"],[144,22,134,24],[145,4,135,4],[146,4,136,4],[147,0,137,0],[148,0,138,0],[149,0,139,0],[150,0,140,0],[151,0,141,0],[152,4,142,4],[152,8,142,8,"cmpId"],[152,13,142,13,"cmpId"],[152,14,142,14,"integer"],[152,21,142,21],[152,23,142,23],[153,6,143,8,"integer"],[153,13,143,15],[153,16,143,18,"Number"],[153,22,143,24],[153,23,143,25,"integer"],[153,30,143,32],[153,31,143,33],[154,6,144,8],[154,10,144,12,"Number"],[154,16,144,18],[154,17,144,19,"isInteger"],[154,26,144,28],[154,27,144,29,"integer"],[154,34,144,36],[154,35,144,37],[154,39,144,41,"integer"],[154,46,144,48],[154,49,144,51],[154,50,144,52],[154,52,144,54],[155,8,145,12],[155,12,145,16],[155,13,145,17,"cmpId_"],[155,19,145,23],[155,22,145,26,"integer"],[155,29,145,33],[156,6,146,8],[156,7,146,9],[156,13,147,13],[157,8,148,12],[157,14,148,18],[157,18,148,22,"TCModelError"],[157,32,148,34],[157,33,148,34,"TCModelError"],[157,45,148,34],[157,46,148,35],[157,53,148,42],[157,55,148,44,"integer"],[157,62,148,51],[157,63,148,52],[158,6,149,8],[159,4,150,4],[160,4,151,4],[160,8,151,8,"cmpId"],[160,13,151,13,"cmpId"],[160,14,151,13],[160,16,151,16],[161,6,152,8],[161,13,152,15],[161,17,152,19],[161,18,152,20,"cmpId_"],[161,24,152,26],[162,4,153,4],[163,4,154,4],[164,0,155,0],[165,0,156,0],[166,0,157,0],[167,0,158,0],[168,0,159,0],[169,0,160,0],[170,0,161,0],[171,0,162,0],[172,4,163,4],[172,8,163,8,"cmpVersion"],[172,18,163,18,"cmpVersion"],[172,19,163,19,"integer"],[172,26,163,26],[172,28,163,28],[173,6,164,8,"integer"],[173,13,164,15],[173,16,164,18,"Number"],[173,22,164,24],[173,23,164,25,"integer"],[173,30,164,32],[173,31,164,33],[174,6,165,8],[174,10,165,12,"Number"],[174,16,165,18],[174,17,165,19,"isInteger"],[174,26,165,28],[174,27,165,29,"integer"],[174,34,165,36],[174,35,165,37],[174,39,165,41,"integer"],[174,46,165,48],[174,49,165,51],[174,50,165,52],[174,51,165,53],[174,53,165,55],[175,8,166,12],[175,12,166,16],[175,13,166,17,"cmpVersion_"],[175,24,166,28],[175,27,166,31,"integer"],[175,34,166,38],[176,6,167,8],[176,7,167,9],[176,13,168,13],[177,8,169,12],[177,14,169,18],[177,18,169,22,"TCModelError"],[177,32,169,34],[177,33,169,34,"TCModelError"],[177,45,169,34],[177,46,169,35],[177,58,169,47],[177,60,169,49,"integer"],[177,67,169,56],[177,68,169,57],[178,6,170,8],[179,4,171,4],[180,4,172,4],[180,8,172,8,"cmpVersion"],[180,18,172,18,"cmpVersion"],[180,19,172,18],[180,21,172,21],[181,6,173,8],[181,13,173,15],[181,17,173,19],[181,18,173,20,"cmpVersion_"],[181,29,173,31],[182,4,174,4],[183,4,175,4],[184,0,176,0],[185,0,177,0],[186,0,178,0],[187,0,179,0],[188,0,180,0],[189,0,181,0],[190,0,182,0],[191,0,183,0],[192,0,184,0],[193,4,185,4],[193,8,185,8,"consentScreen"],[193,21,185,21,"consentScreen"],[193,22,185,22,"integer"],[193,29,185,29],[193,31,185,31],[194,6,186,8,"integer"],[194,13,186,15],[194,16,186,18,"Number"],[194,22,186,24],[194,23,186,25,"integer"],[194,30,186,32],[194,31,186,33],[195,6,187,8],[195,10,187,12,"Number"],[195,16,187,18],[195,17,187,19,"isInteger"],[195,26,187,28],[195,27,187,29,"integer"],[195,34,187,36],[195,35,187,37],[195,39,187,41,"integer"],[195,46,187,48],[195,49,187,51],[195,50,187,52],[195,51,187,53],[195,53,187,55],[196,8,188,12],[196,12,188,16],[196,13,188,17,"consentScreen_"],[196,27,188,31],[196,30,188,34,"integer"],[196,37,188,41],[197,6,189,8],[197,7,189,9],[197,13,190,13],[198,8,191,12],[198,14,191,18],[198,18,191,22,"TCModelError"],[198,32,191,34],[198,33,191,34,"TCModelError"],[198,45,191,34],[198,46,191,35],[198,61,191,50],[198,63,191,52,"integer"],[198,70,191,59],[198,71,191,60],[199,6,192,8],[200,4,193,4],[201,4,194,4],[201,8,194,8,"consentScreen"],[201,21,194,21,"consentScreen"],[201,22,194,21],[201,24,194,24],[202,6,195,8],[202,13,195,15],[202,17,195,19],[202,18,195,20,"consentScreen_"],[202,32,195,34],[203,4,196,4],[204,4,197,4],[205,0,198,0],[206,0,199,0],[207,0,200,0],[208,0,201,0],[209,0,202,0],[210,0,203,0],[211,4,204,4],[211,8,204,8,"consentLanguage"],[211,23,204,23,"consentLanguage"],[211,24,204,24,"lang"],[211,28,204,28],[211,30,204,30],[212,6,205,8],[212,10,205,12],[212,11,205,13,"consentLanguage_"],[212,27,205,29],[212,30,205,32,"lang"],[212,34,205,36],[213,4,206,4],[214,4,207,4],[214,8,207,8,"consentLanguage"],[214,23,207,23,"consentLanguage"],[214,24,207,23],[214,26,207,26],[215,6,208,8],[215,13,208,15],[215,17,208,19],[215,18,208,20,"consentLanguage_"],[215,34,208,36],[216,4,209,4],[217,4,210,4],[218,0,211,0],[219,0,212,0],[220,0,213,0],[221,0,214,0],[222,0,215,0],[223,0,216,0],[224,4,217,4],[224,8,217,8,"publisherCountryCode"],[224,28,217,28,"publisherCountryCode"],[224,29,217,29,"countryCode"],[224,40,217,40],[224,42,217,42],[225,6,218,8],[225,10,218,12],[225,24,218,26],[225,25,218,27,"test"],[225,29,218,31],[225,30,218,32,"countryCode"],[225,41,218,43],[225,42,218,44],[225,44,218,46],[226,8,219,12],[226,12,219,16],[226,13,219,17,"publisherCountryCode_"],[226,34,219,38],[226,37,219,41,"countryCode"],[226,48,219,52],[226,49,219,53,"toUpperCase"],[226,60,219,64],[226,61,219,65],[226,62,219,66],[227,6,220,8],[227,7,220,9],[227,13,221,13],[228,8,222,12],[228,14,222,18],[228,18,222,22,"TCModelError"],[228,32,222,34],[228,33,222,34,"TCModelError"],[228,45,222,34],[228,46,222,35],[228,68,222,57],[228,70,222,59,"countryCode"],[228,81,222,70],[228,82,222,71],[229,6,223,8],[230,4,224,4],[231,4,225,4],[231,8,225,8,"publisherCountryCode"],[231,28,225,28,"publisherCountryCode"],[231,29,225,28],[231,31,225,31],[232,6,226,8],[232,13,226,15],[232,17,226,19],[232,18,226,20,"publisherCountryCode_"],[232,39,226,41],[233,4,227,4],[234,4,228,4],[235,0,229,0],[236,0,230,0],[237,0,231,0],[238,0,232,0],[239,0,233,0],[240,0,234,0],[241,0,235,0],[242,4,236,4],[242,8,236,8,"vendorListVersion"],[242,25,236,25,"vendorListVersion"],[242,26,236,26,"integer"],[242,33,236,33],[242,35,236,35],[243,6,237,8],[244,0,238,0],[245,0,239,0],[246,0,240,0],[247,0,241,0],[248,6,242,8,"integer"],[248,13,242,15],[248,16,242,18,"Number"],[248,22,242,24],[248,23,242,25,"integer"],[248,30,242,32],[248,31,242,33],[248,35,242,37],[248,36,242,38],[249,6,243,8],[249,10,243,12,"integer"],[249,17,243,19],[249,20,243,22],[249,21,243,23],[249,23,243,25],[250,8,244,12],[250,14,244,18],[250,18,244,22,"TCModelError"],[250,32,244,34],[250,33,244,34,"TCModelError"],[250,45,244,34],[250,46,244,35],[250,65,244,54],[250,67,244,56,"integer"],[250,74,244,63],[250,75,244,64],[251,6,245,8],[251,7,245,9],[251,13,246,13],[252,8,247,12],[252,12,247,16],[252,13,247,17,"vendorListVersion_"],[252,31,247,35],[252,34,247,38,"integer"],[252,41,247,45],[253,6,248,8],[254,4,249,4],[255,4,250,4],[255,8,250,8,"vendorListVersion"],[255,25,250,25,"vendorListVersion"],[255,26,250,25],[255,28,250,28],[256,6,251,8],[256,10,251,12],[256,14,251,16],[256,15,251,17,"gvl"],[256,18,251,20],[256,20,251,22],[257,8,252,12],[257,15,252,19],[257,19,252,23],[257,20,252,24,"gvl"],[257,23,252,27],[257,24,252,28,"vendorListVersion"],[257,41,252,45],[258,6,253,8],[258,7,253,9],[258,13,254,13],[259,8,255,12],[259,15,255,19],[259,19,255,23],[259,20,255,24,"vendorListVersion_"],[259,38,255,42],[260,6,256,8],[261,4,257,4],[262,4,258,4],[263,0,259,0],[264,0,260,0],[265,0,261,0],[266,0,262,0],[267,0,263,0],[268,0,264,0],[269,0,265,0],[270,0,266,0],[271,0,267,0],[272,0,268,0],[273,0,269,0],[274,0,270,0],[275,4,271,4],[275,8,271,8,"policyVersion"],[275,21,271,21,"policyVersion"],[275,22,271,22,"num"],[275,25,271,25],[275,27,271,27],[276,6,272,8],[276,10,272,12],[276,11,272,13,"policyVersion_"],[276,25,272,27],[276,28,272,30,"parseInt"],[276,36,272,38],[276,37,272,39,"num"],[276,40,272,42],[276,42,272,44],[276,44,272,46],[276,45,272,47],[277,6,273,8],[277,10,273,12],[277,14,273,16],[277,15,273,17,"policyVersion_"],[277,29,273,31],[277,32,273,34],[277,33,273,35],[277,35,273,37],[278,8,274,12],[278,14,274,18],[278,18,274,22,"TCModelError"],[278,32,274,34],[278,33,274,34,"TCModelError"],[278,45,274,34],[278,46,274,35],[278,61,274,50],[278,63,274,52,"num"],[278,66,274,55],[278,67,274,56],[279,6,275,8],[280,4,276,4],[281,4,277,4],[281,8,277,8,"policyVersion"],[281,21,277,21,"policyVersion"],[281,22,277,21],[281,24,277,24],[282,6,278,8],[282,10,278,12],[282,14,278,16],[282,15,278,17,"gvl"],[282,18,278,20],[282,20,278,22],[283,8,279,12],[283,15,279,19],[283,19,279,23],[283,20,279,24,"gvl"],[283,23,279,27],[283,24,279,28,"tcfPolicyVersion"],[283,40,279,44],[284,6,280,8],[284,7,280,9],[284,13,281,13],[285,8,282,12],[285,15,282,19],[285,19,282,23],[285,20,282,24,"policyVersion_"],[285,34,282,38],[286,6,283,8],[287,4,284,4],[288,4,285,4],[288,8,285,8,"version"],[288,15,285,15,"version"],[288,16,285,16,"num"],[288,19,285,19],[288,21,285,21],[289,6,286,8],[289,10,286,12],[289,11,286,13,"version_"],[289,19,286,21],[289,22,286,24,"parseInt"],[289,30,286,32],[289,31,286,33,"num"],[289,34,286,36],[289,36,286,38],[289,38,286,40],[289,39,286,41],[290,4,287,4],[291,4,288,4],[291,8,288,8,"version"],[291,15,288,15,"version"],[291,16,288,15],[291,18,288,18],[292,6,289,8],[292,13,289,15],[292,17,289,19],[292,18,289,20,"version_"],[292,26,289,28],[293,4,290,4],[294,4,291,4],[295,0,292,0],[296,0,293,0],[297,0,294,0],[298,0,295,0],[299,0,296,0],[300,0,297,0],[301,0,298,0],[302,0,299,0],[303,0,300,0],[304,0,301,0],[305,4,302,4],[305,8,302,8,"isServiceSpecific"],[305,25,302,25,"isServiceSpecific"],[305,26,302,26,"bool"],[305,30,302,30],[305,32,302,32],[306,6,303,8],[306,10,303,12],[306,11,303,13,"isServiceSpecific_"],[306,29,303,31],[306,32,303,34,"bool"],[306,36,303,38],[307,4,304,4],[308,4,305,4],[308,8,305,8,"isServiceSpecific"],[308,25,305,25,"isServiceSpecific"],[308,26,305,25],[308,28,305,28],[309,6,306,8],[309,13,306,15],[309,17,306,19],[309,18,306,20,"isServiceSpecific_"],[309,36,306,38],[310,4,307,4],[311,4,308,4],[312,0,309,0],[313,0,310,0],[314,0,311,0],[315,0,312,0],[316,0,313,0],[317,0,314,0],[318,0,315,0],[319,0,316,0],[320,4,317,4],[320,8,317,8,"useNonStandardStacks"],[320,28,317,28,"useNonStandardStacks"],[320,29,317,29,"bool"],[320,33,317,33],[320,35,317,35],[321,6,318,8],[321,10,318,12],[321,11,318,13,"useNonStandardStacks_"],[321,32,318,34],[321,35,318,37,"bool"],[321,39,318,41],[322,4,319,4],[323,4,320,4],[323,8,320,8,"useNonStandardStacks"],[323,28,320,28,"useNonStandardStacks"],[323,29,320,28],[323,31,320,31],[324,6,321,8],[324,13,321,15],[324,17,321,19],[324,18,321,20,"useNonStandardStacks_"],[324,39,321,41],[325,4,322,4],[326,4,323,4],[327,0,324,0],[328,0,325,0],[329,0,326,0],[330,0,327,0],[331,0,328,0],[332,4,329,4],[332,8,329,8,"supportOOB"],[332,18,329,18,"supportOOB"],[332,19,329,19,"bool"],[332,23,329,23],[332,25,329,25],[333,6,330,8],[333,10,330,12],[333,11,330,13,"supportOOB_"],[333,22,330,24],[333,25,330,27,"bool"],[333,29,330,31],[334,4,331,4],[335,4,332,4],[335,8,332,8,"supportOOB"],[335,18,332,18,"supportOOB"],[335,19,332,18],[335,21,332,21],[336,6,333,8],[336,13,333,15],[336,17,333,19],[336,18,333,20,"supportOOB_"],[336,29,333,31],[337,4,334,4],[338,4,335,4],[339,0,336,0],[340,0,337,0],[341,0,338,0],[342,0,339,0],[343,0,340,0],[344,0,341,0],[345,0,342,0],[346,0,343,0],[347,0,344,0],[348,0,345,0],[349,0,346,0],[350,4,347,4],[350,8,347,8,"purposeOneTreatment"],[350,27,347,27,"purposeOneTreatment"],[350,28,347,28,"bool"],[350,32,347,32],[350,34,347,34],[351,6,348,8],[351,10,348,12],[351,11,348,13,"purposeOneTreatment_"],[351,31,348,33],[351,34,348,36,"bool"],[351,38,348,40],[352,4,349,4],[353,4,350,4],[353,8,350,8,"purposeOneTreatment"],[353,27,350,27,"purposeOneTreatment"],[353,28,350,27],[353,30,350,30],[354,6,351,8],[354,13,351,15],[354,17,351,19],[354,18,351,20,"purposeOneTreatment_"],[354,38,351,40],[355,4,352,4],[356,4,353,4],[357,0,354,0],[358,0,355,0],[359,0,356,0],[360,0,357,0],[361,4,358,4,"setAllVendorConsents"],[361,24,358,24,"setAllVendorConsents"],[361,25,358,24],[361,27,358,27],[362,6,359,8],[362,10,359,12],[362,11,359,13,"vendorConsents"],[362,25,359,27],[362,26,359,28,"set"],[362,29,359,31],[362,30,359,32],[362,34,359,36],[362,35,359,37,"gvl"],[362,38,359,40],[362,39,359,41,"vendors"],[362,46,359,48],[362,47,359,49],[363,4,360,4],[364,4,361,4],[365,0,362,0],[366,0,363,0],[367,0,364,0],[368,0,365,0],[369,4,366,4,"unsetAllVendorConsents"],[369,26,366,26,"unsetAllVendorConsents"],[369,27,366,26],[369,29,366,29],[370,6,367,8],[370,10,367,12],[370,11,367,13,"vendorConsents"],[370,25,367,27],[370,26,367,28,"empty"],[370,31,367,33],[370,32,367,34],[370,33,367,35],[371,4,368,4],[372,4,369,4],[373,0,370,0],[374,0,371,0],[375,0,372,0],[376,0,373,0],[377,4,374,4,"setAllVendorsDisclosed"],[377,26,374,26,"setAllVendorsDisclosed"],[377,27,374,26],[377,29,374,29],[378,6,375,8],[378,10,375,12],[378,11,375,13,"vendorsDisclosed"],[378,27,375,29],[378,28,375,30,"set"],[378,31,375,33],[378,32,375,34],[378,36,375,38],[378,37,375,39,"gvl"],[378,40,375,42],[378,41,375,43,"vendors"],[378,48,375,50],[378,49,375,51],[379,4,376,4],[380,4,377,4],[381,0,378,0],[382,0,379,0],[383,0,380,0],[384,0,381,0],[385,4,382,4,"unsetAllVendorsDisclosed"],[385,28,382,28,"unsetAllVendorsDisclosed"],[385,29,382,28],[385,31,382,31],[386,6,383,8],[386,10,383,12],[386,11,383,13,"vendorsDisclosed"],[386,27,383,29],[386,28,383,30,"empty"],[386,33,383,35],[386,34,383,36],[386,35,383,37],[387,4,384,4],[388,4,385,4],[389,0,386,0],[390,0,387,0],[391,0,388,0],[392,0,389,0],[393,4,390,4,"setAllVendorsAllowed"],[393,24,390,24,"setAllVendorsAllowed"],[393,25,390,24],[393,27,390,27],[394,6,391,8],[394,10,391,12],[394,11,391,13,"vendorsAllowed"],[394,25,391,27],[394,26,391,28,"set"],[394,29,391,31],[394,30,391,32],[394,34,391,36],[394,35,391,37,"gvl"],[394,38,391,40],[394,39,391,41,"vendors"],[394,46,391,48],[394,47,391,49],[395,4,392,4],[396,4,393,4],[397,0,394,0],[398,0,395,0],[399,0,396,0],[400,0,397,0],[401,4,398,4,"unsetAllVendorsAllowed"],[401,26,398,26,"unsetAllVendorsAllowed"],[401,27,398,26],[401,29,398,29],[402,6,399,8],[402,10,399,12],[402,11,399,13,"vendorsAllowed"],[402,25,399,27],[402,26,399,28,"empty"],[402,31,399,33],[402,32,399,34],[402,33,399,35],[403,4,400,4],[404,4,401,4],[405,0,402,0],[406,0,403,0],[407,0,404,0],[408,0,405,0],[409,4,406,4,"setAllVendorLegitimateInterests"],[409,35,406,35,"setAllVendorLegitimateInterests"],[409,36,406,35],[409,38,406,38],[410,6,407,8],[410,10,407,12],[410,11,407,13,"vendorLegitimateInterests"],[410,36,407,38],[410,37,407,39,"set"],[410,40,407,42],[410,41,407,43],[410,45,407,47],[410,46,407,48,"gvl"],[410,49,407,51],[410,50,407,52,"vendors"],[410,57,407,59],[410,58,407,60],[411,4,408,4],[412,4,409,4],[413,0,410,0],[414,0,411,0],[415,0,412,0],[416,0,413,0],[417,4,414,4,"unsetAllVendorLegitimateInterests"],[417,37,414,37,"unsetAllVendorLegitimateInterests"],[417,38,414,37],[417,40,414,40],[418,6,415,8],[418,10,415,12],[418,11,415,13,"vendorLegitimateInterests"],[418,36,415,38],[418,37,415,39,"empty"],[418,42,415,44],[418,43,415,45],[418,44,415,46],[419,4,416,4],[420,4,417,4],[421,0,418,0],[422,0,419,0],[423,0,420,0],[424,0,421,0],[425,4,422,4,"setAllPurposeConsents"],[425,25,422,25,"setAllPurposeConsents"],[425,26,422,25],[425,28,422,28],[426,6,423,8],[426,10,423,12],[426,11,423,13,"purposeConsents"],[426,26,423,28],[426,27,423,29,"set"],[426,30,423,32],[426,31,423,33],[426,35,423,37],[426,36,423,38,"gvl"],[426,39,423,41],[426,40,423,42,"purposes"],[426,48,423,50],[426,49,423,51],[427,4,424,4],[428,4,425,4],[429,0,426,0],[430,0,427,0],[431,0,428,0],[432,0,429,0],[433,4,430,4,"unsetAllPurposeConsents"],[433,27,430,27,"unsetAllPurposeConsents"],[433,28,430,27],[433,30,430,30],[434,6,431,8],[434,10,431,12],[434,11,431,13,"purposeConsents"],[434,26,431,28],[434,27,431,29,"empty"],[434,32,431,34],[434,33,431,35],[434,34,431,36],[435,4,432,4],[436,4,433,4],[437,0,434,0],[438,0,435,0],[439,0,436,0],[440,0,437,0],[441,4,438,4,"setAllPurposeLegitimateInterests"],[441,36,438,36,"setAllPurposeLegitimateInterests"],[441,37,438,36],[441,39,438,39],[442,6,439,8],[442,10,439,12],[442,11,439,13,"purposeLegitimateInterests"],[442,37,439,39],[442,38,439,40,"set"],[442,41,439,43],[442,42,439,44],[442,46,439,48],[442,47,439,49,"gvl"],[442,50,439,52],[442,51,439,53,"purposes"],[442,59,439,61],[442,60,439,62],[443,4,440,4],[444,4,441,4],[445,0,442,0],[446,0,443,0],[447,0,444,0],[448,0,445,0],[449,4,446,4,"unsetAllPurposeLegitimateInterests"],[449,38,446,38,"unsetAllPurposeLegitimateInterests"],[449,39,446,38],[449,41,446,41],[450,6,447,8],[450,10,447,12],[450,11,447,13,"purposeLegitimateInterests"],[450,37,447,39],[450,38,447,40,"empty"],[450,43,447,45],[450,44,447,46],[450,45,447,47],[451,4,448,4],[452,4,449,4],[453,0,450,0],[454,0,451,0],[455,0,452,0],[456,0,453,0],[457,4,454,4,"setAllSpecialFeatureOptins"],[457,30,454,30,"setAllSpecialFeatureOptins"],[457,31,454,30],[457,33,454,33],[458,6,455,8],[458,10,455,12],[458,11,455,13,"specialFeatureOptins"],[458,31,455,33],[458,32,455,34,"set"],[458,35,455,37],[458,36,455,38],[458,40,455,42],[458,41,455,43,"gvl"],[458,44,455,46],[458,45,455,47,"specialFeatures"],[458,60,455,62],[458,61,455,63],[459,4,456,4],[460,4,457,4],[461,0,458,0],[462,0,459,0],[463,0,460,0],[464,0,461,0],[465,4,462,4,"unsetAllSpecialFeatureOptins"],[465,32,462,32,"unsetAllSpecialFeatureOptins"],[465,33,462,32],[465,35,462,35],[466,6,463,8],[466,10,463,12],[466,11,463,13,"specialFeatureOptins"],[466,31,463,33],[466,32,463,34,"empty"],[466,37,463,39],[466,38,463,40],[466,39,463,41],[467,4,464,4],[468,4,465,4,"setAll"],[468,10,465,10,"setAll"],[468,11,465,10],[468,13,465,13],[469,6,466,8],[469,10,466,12],[469,11,466,13,"setAllVendorConsents"],[469,31,466,33],[469,32,466,34],[469,33,466,35],[470,6,467,8],[470,10,467,12],[470,11,467,13,"setAllPurposeLegitimateInterests"],[470,43,467,45],[470,44,467,46],[470,45,467,47],[471,6,468,8],[471,10,468,12],[471,11,468,13,"setAllSpecialFeatureOptins"],[471,37,468,39],[471,38,468,40],[471,39,468,41],[472,6,469,8],[472,10,469,12],[472,11,469,13,"setAllPurposeConsents"],[472,32,469,34],[472,33,469,35],[472,34,469,36],[473,6,470,8],[473,10,470,12],[473,11,470,13,"setAllVendorLegitimateInterests"],[473,42,470,44],[473,43,470,45],[473,44,470,46],[474,4,471,4],[475,4,472,4,"unsetAll"],[475,12,472,12,"unsetAll"],[475,13,472,12],[475,15,472,15],[476,6,473,8],[476,10,473,12],[476,11,473,13,"unsetAllVendorConsents"],[476,33,473,35],[476,34,473,36],[476,35,473,37],[477,6,474,8],[477,10,474,12],[477,11,474,13,"unsetAllPurposeLegitimateInterests"],[477,45,474,47],[477,46,474,48],[477,47,474,49],[478,6,475,8],[478,10,475,12],[478,11,475,13,"unsetAllSpecialFeatureOptins"],[478,39,475,41],[478,40,475,42],[478,41,475,43],[479,6,476,8],[479,10,476,12],[479,11,476,13,"unsetAllPurposeConsents"],[479,34,476,36],[479,35,476,37],[479,36,476,38],[480,6,477,8],[480,10,477,12],[480,11,477,13,"unsetAllVendorLegitimateInterests"],[480,44,477,46],[480,45,477,47],[480,46,477,48],[481,4,478,4],[482,4,479,4],[482,8,479,8,"numCustomPurposes"],[482,25,479,25,"numCustomPurposes"],[482,26,479,25],[482,28,479,28],[483,6,480,8],[483,10,480,12,"len"],[483,13,480,15],[483,16,480,18],[483,20,480,22],[483,21,480,23,"numCustomPurposes_"],[483,39,480,41],[484,6,481,8],[484,10,481,12],[484,17,481,19],[484,21,481,23],[484,22,481,24,"customPurposes"],[484,36,481,38],[484,41,481,43],[484,49,481,51],[484,51,481,53],[485,8,482,12],[486,0,483,0],[487,0,484,0],[488,0,485,0],[489,0,486,0],[490,0,487,0],[491,0,488,0],[492,8,489,12],[492,14,489,18,"purposeIds"],[492,24,489,28],[492,27,489,31,"Object"],[492,33,489,37],[492,34,489,38,"keys"],[492,38,489,42],[492,39,489,43],[492,43,489,47],[492,44,489,48,"customPurposes"],[492,58,489,62],[492,59,489,63],[492,60,490,17,"sort"],[492,64,490,21],[492,65,490,22],[492,66,490,23,"a"],[492,67,490,24],[492,69,490,26,"b"],[492,70,490,27],[492,75,490,32,"Number"],[492,81,490,38],[492,82,490,39,"a"],[492,83,490,40],[492,84,490,41],[492,87,490,44,"Number"],[492,93,490,50],[492,94,490,51,"b"],[492,95,490,52],[492,96,490,53],[492,97,490,54],[493,8,491,12,"len"],[493,11,491,15],[493,14,491,18,"parseInt"],[493,22,491,26],[493,23,491,27,"purposeIds"],[493,33,491,37],[493,34,491,38,"pop"],[493,37,491,41],[493,38,491,42],[493,39,491,43],[493,41,491,45],[493,43,491,47],[493,44,491,48],[494,6,492,8],[495,6,493,8],[495,13,493,15,"len"],[495,16,493,18],[496,4,494,4],[497,4,495,4],[497,8,495,8,"numCustomPurposes"],[497,25,495,25,"numCustomPurposes"],[497,26,495,26,"num"],[497,29,495,29],[497,31,495,31],[498,6,496,8],[498,10,496,12],[498,11,496,13,"numCustomPurposes_"],[498,29,496,31],[498,32,496,34,"parseInt"],[498,40,496,42],[498,41,496,43,"num"],[498,44,496,46],[498,46,496,48],[498,48,496,50],[498,49,496,51],[499,6,497,8],[499,10,497,12],[499,14,497,16],[499,15,497,17,"numCustomPurposes_"],[499,33,497,35],[499,36,497,38],[499,37,497,39],[499,39,497,41],[500,8,498,12],[500,14,498,18],[500,18,498,22,"TCModelError"],[500,32,498,34],[500,33,498,34,"TCModelError"],[500,45,498,34],[500,46,498,35],[500,65,498,54],[500,67,498,56,"num"],[500,70,498,59],[500,71,498,60],[501,6,499,8],[502,4,500,4],[503,4,501,4],[504,0,502,0],[505,0,503,0],[506,0,504,0],[507,0,505,0],[508,4,506,4,"updated"],[508,11,506,11,"updated"],[508,12,506,11],[508,14,506,14],[509,6,507,8],[509,12,507,14,"date"],[509,16,507,18],[509,19,507,21],[509,23,507,25,"Date"],[509,27,507,29],[509,28,507,30],[509,29,507,31],[510,6,508,8],[510,12,508,14,"utcDate"],[510,19,508,21],[510,22,508,24],[510,26,508,28,"Date"],[510,30,508,32],[510,31,508,33,"Date"],[510,35,508,37],[510,36,508,38,"UTC"],[510,39,508,41],[510,40,508,42,"date"],[510,44,508,46],[510,45,508,47,"getUTCFullYear"],[510,59,508,61],[510,60,508,62],[510,61,508,63],[510,63,508,65,"date"],[510,67,508,69],[510,68,508,70,"getUTCMonth"],[510,79,508,81],[510,80,508,82],[510,81,508,83],[510,83,508,85,"date"],[510,87,508,89],[510,88,508,90,"getUTCDate"],[510,98,508,100],[510,99,508,101],[510,100,508,102],[510,101,508,103],[510,102,508,104],[511,6,509,8],[511,10,509,12],[511,11,509,13,"created"],[511,18,509,20],[511,21,509,23,"utcDate"],[511,28,509,30],[512,6,510,8],[512,10,510,12],[512,11,510,13,"lastUpdated"],[512,22,510,24],[512,25,510,27,"utcDate"],[512,32,510,34],[513,4,511,4],[514,2,512,0],[515,0,512,1],[515,3]],"functionMap":{"names":["<global>","TCModel","constructor","set__gvl","get__gvl","set__cmpId","get__cmpId","set__cmpVersion","get__cmpVersion","set__consentScreen","get__consentScreen","set__consentLanguage","get__consentLanguage","set__publisherCountryCode","get__publisherCountryCode","set__vendorListVersion","get__vendorListVersion","set__policyVersion","get__policyVersion","set__version","get__version","set__isServiceSpecific","get__isServiceSpecific","set__useNonStandardStacks","get__useNonStandardStacks","set__supportOOB","get__supportOOB","set__purposeOneTreatment","get__purposeOneTreatment","setAllVendorConsents","unsetAllVendorConsents","setAllVendorsDisclosed","unsetAllVendorsDisclosed","setAllVendorsAllowed","unsetAllVendorsAllowed","setAllVendorLegitimateInterests","unsetAllVendorLegitimateInterests","setAllPurposeConsents","unsetAllPurposeConsents","setAllPurposeLegitimateInterests","unsetAllPurposeLegitimateInterests","setAllSpecialFeatureOptins","unsetAllSpecialFeatureOptins","setAll","unsetAll","get__numCustomPurposes","Object.keys.sort$argument_0","set__numCustomPurposes","updated"],"mappings":"AAA;OCI;ICwG;KDM;IEK;KFS;IGI;KHE;IIO;KJQ;IKC;KLE;IMU;KNQ;IOC;KPE;IQW;KRQ;ISC;KTE;IUQ;KVE;IWC;KXE;IYQ;KZO;IaC;KbE;IcS;Kda;IeC;KfO;IgBc;KhBK;IiBC;KjBO;IkBC;KlBE;ImBC;KnBE;IoBY;KpBE;IqBC;KrBE;IsBU;KtBE;IuBC;KvBE;IwBO;KxBE;IyBC;KzBE;I0Ba;K1BE;I2BC;K3BE;I4BM;K5BE;I6BM;K7BE;I8BM;K9BE;I+BM;K/BE;IgCM;KhCE;IiCM;KjCE;IkCM;KlCE;ImCM;KnCE;IoCM;KpCE;IqCM;KrCE;IsCM;KtCE;IuCM;KvCE;IwCM;KxCE;IyCM;KzCE;I0CC;K1CM;I2CC;K3CM;I4CC;sBCW,+BD;K5CI;I8CC;K9CK;I+CM;K/CK;CDC"},"hasCjsExports":false},"type":"js/module"}]}